{"file_contents":{"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# Overview\n\nThis is a full-stack web application featuring an interactive astrology/zodiac experience with a celestial-themed interface. The application allows users to select zodiac signs from an animated wheel and view generated horoscopes. It's built as a modern React SPA with Express backend, featuring 3D graphics, animations, and immersive celestial visuals.\n\n# User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n# System Architecture\n\n## Frontend Architecture\n- **React 18** with TypeScript for the main UI framework\n- **Vite** as the build tool and development server with hot module replacement\n- **Framer Motion** for smooth animations and page transitions\n- **React Three Fiber** ecosystem (@react-three/fiber, @react-three/drei, @react-three/postprocessing) for 3D graphics and celestial effects\n- **Radix UI** components with **Tailwind CSS** for consistent, accessible styling\n- **Zustand** for lightweight state management (game state, audio controls)\n- **TanStack Query** for server state management and API caching\n\n## Component Structure\n- Modular component architecture with shared UI components in `/components/ui/`\n- Custom game/astrology components like `ZodiacWheel`, `HoroscopeDisplay`, `CelestialBackground`\n- Responsive design with mobile-first approach using Tailwind breakpoints\n\n## Backend Architecture  \n- **Express.js** server with TypeScript\n- Modular route registration system with centralized error handling\n- Development-optimized setup with Vite middleware integration\n- Structured storage interface with in-memory implementation (MemStorage class)\n- Request/response logging with performance monitoring\n\n## Data Layer\n- **Drizzle ORM** configured for PostgreSQL with schema-first approach\n- Database schema defined in shared directory for type safety across frontend/backend\n- Zod integration for runtime validation and type inference\n- Migration system using Drizzle Kit\n\n## Build & Development\n- **ESM modules** throughout the application\n- Shared TypeScript configuration with path aliases (`@/` for client, `@shared/` for shared code)\n- Production build pipeline: Vite for frontend, esbuild for backend bundling\n- Asset handling for 3D models, shaders, and audio files\n\n## Styling System\n- **Tailwind CSS** with custom design tokens and CSS variables\n- Dark mode support with class-based theme switching  \n- Custom CSS for celestial animations and zodiac-specific effects\n- Responsive typography and spacing scales\n\n# External Dependencies\n\n## Database\n- **PostgreSQL** via Neon Database (@neondatabase/serverless)\n- Connection managed through DATABASE_URL environment variable\n\n## UI Component Library\n- **Radix UI** primitives for accessible, unstyled components\n- Comprehensive component coverage (dialogs, dropdowns, forms, etc.)\n\n## Animation & Graphics\n- **Framer Motion** for React animations and gestures\n- **React Three Fiber** ecosystem for WebGL/Three.js integration\n- **GLSL shader** support via vite-plugin-glsl\n\n## Fonts & Typography\n- **Inter font** via @fontsource/inter for consistent typography\n\n## Utilities\n- **class-variance-authority** and **clsx** for conditional CSS class management\n- **date-fns** for date manipulation and formatting\n- **cmdk** for command palette/search functionality\n\n## Development Tools\n- **tsx** for TypeScript execution in development\n- **@replit/vite-plugin-runtime-error-modal** for enhanced error display\n- **connect-pg-simple** for PostgreSQL session store integration","size_bytes":3489},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"hsl(var(--background))\",\n        foreground: \"hsl(var(--foreground))\",\n        card: {\n          DEFAULT: \"hsl(var(--card))\",\n          foreground: \"hsl(var(--card-foreground))\",\n        },\n        popover: {\n          DEFAULT: \"hsl(var(--popover))\",\n          foreground: \"hsl(var(--popover-foreground))\",\n        },\n        primary: {\n          DEFAULT: \"hsl(var(--primary))\",\n          foreground: \"hsl(var(--primary-foreground))\",\n        },\n        secondary: {\n          DEFAULT: \"hsl(var(--secondary))\",\n          foreground: \"hsl(var(--secondary-foreground))\",\n        },\n        muted: {\n          DEFAULT: \"hsl(var(--muted))\",\n          foreground: \"hsl(var(--muted-foreground))\",\n        },\n        accent: {\n          DEFAULT: \"hsl(var(--accent))\",\n          foreground: \"hsl(var(--accent-foreground))\",\n        },\n        destructive: {\n          DEFAULT: \"hsl(var(--destructive))\",\n          foreground: \"hsl(var(--destructive-foreground))\",\n        },\n        border: \"hsl(var(--border))\",\n        input: \"hsl(var(--input))\",\n        ring: \"hsl(var(--ring))\",\n        chart: {\n          \"1\": \"hsl(var(--chart-1))\",\n          \"2\": \"hsl(var(--chart-2))\",\n          \"3\": \"hsl(var(--chart-3))\",\n          \"4\": \"hsl(var(--chart-4))\",\n          \"5\": \"hsl(var(--chart-5))\",\n        },\n        sidebar: {\n          DEFAULT: \"hsl(var(--sidebar-background))\",\n          foreground: \"hsl(var(--sidebar-foreground))\",\n          primary: \"hsl(var(--sidebar-primary))\",\n          \"primary-foreground\": \"hsl(var(--sidebar-primary-foreground))\",\n          accent: \"hsl(var(--sidebar-accent))\",\n          \"accent-foreground\": \"hsl(var(--sidebar-accent-foreground))\",\n          border: \"hsl(var(--sidebar-border))\",\n          ring: \"hsl(var(--sidebar-ring))\",\n        },\n      },\n      fontFamily: {\n        sans: [\"var(--font-story)\", \"system-ui\", \"sans-serif\"],\n        magical: [\"var(--font-magical)\", \"cursive\"],\n        story: [\"var(--font-story)\", \"sans-serif\"],\n        handwritten: [\"var(--font-handwritten)\", \"cursive\"],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n        twinkle: {\n          \"0%, 100%\": { \n            opacity: \"0.3\", \n            transform: \"scale(1)\" \n          },\n          \"50%\": { \n            opacity: \"1\", \n            transform: \"scale(1.2)\" \n          },\n        },\n        glow: {\n          from: { \n            boxShadow: \"0 0 20px hsl(243 75% 59% / 0.5)\" \n          },\n          to: { \n            boxShadow: \"0 0 40px hsl(243 75% 59% / 0.8), 0 0 60px hsl(45 93% 57% / 0.4)\" \n          },\n        },\n        float: {\n          \"0%, 100%\": { \n            transform: \"translateY(0px) rotate(0deg)\" \n          },\n          \"50%\": { \n            transform: \"translateY(-20px) rotate(180deg)\" \n          },\n        },\n        flip: {\n          \"0%\": { transform: \"rotateY(0)\" },\n          \"50%\": { transform: \"rotateY(90deg)\" },\n          \"100%\": { transform: \"rotateY(0)\" },\n        },\n        typewriter: {\n          from: { width: \"0\" },\n          to: { width: \"100%\" },\n        },\n        \"gradient-shift\": {\n          \"0%, 100%\": { backgroundPosition: \"0% 50%\" },\n          \"50%\": { backgroundPosition: \"100% 50%\" },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n        twinkle: \"twinkle 3s ease-in-out infinite\",\n        glow: \"glow 2s ease-in-out infinite alternate\",\n        float: \"float 6s ease-in-out infinite\",\n        flip: \"flip 0.8s ease-in-out\",\n        typewriter: \"typewriter 3s steps(40) forwards\",\n        \"gradient-shift\": \"gradient-shift 4s ease infinite\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":4452},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":971},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2066},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { z } from \"zod\";\nimport { getRandomTarotCard, getTarotCardByName, allTarotCards } from \"../client/src/lib/tarotCards\";\nimport { getZodiacSign, zodiacSigns } from \"../client/src/lib/zodiacData\";\n\nconst generateHoroscopeSchema = z.object({\n  childName: z.string().min(2),\n  birthDate: z.string(),\n  birthTime: z.string().optional(),\n  birthLocation: z.string().min(2),\n});\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Get all zodiac signs\n  app.get(\"/api/zodiac\", (req, res) => {\n    res.json({ signs: zodiacSigns });\n  });\n\n  // Get zodiac sign by birth date\n  app.get(\"/api/zodiac/:birthDate\", (req, res) => {\n    try {\n      const { birthDate } = req.params;\n      const zodiacSign = getZodiacSign(birthDate);\n      res.json({ zodiacSign });\n    } catch (error) {\n      res.status(400).json({ error: \"Invalid birth date format\" });\n    }\n  });\n\n  // Get all tarot cards\n  app.get(\"/api/tarot\", (req, res) => {\n    res.json({ cards: allTarotCards });\n  });\n\n  // Get random tarot card\n  app.get(\"/api/tarot/random\", (req, res) => {\n    const card = getRandomTarotCard();\n    res.json({ card });\n  });\n\n  // Get specific tarot card by name\n  app.get(\"/api/tarot/:name\", (req, res) => {\n    const { name } = req.params;\n    const card = getTarotCardByName(decodeURIComponent(name));\n    \n    if (!card) {\n      return res.status(404).json({ error: \"Tarot card not found\" });\n    }\n    \n    res.json({ card });\n  });\n\n  // Generate horoscope story\n  app.post(\"/api/horoscope/generate\", (req, res) => {\n    try {\n      const validation = generateHoroscopeSchema.safeParse(req.body);\n      \n      if (!validation.success) {\n        return res.status(400).json({ \n          error: \"Validation failed\", \n          details: validation.error.errors \n        });\n      }\n\n      const { childName, birthDate, birthTime, birthLocation } = validation.data;\n      \n      // Get zodiac sign and random tarot card\n      const zodiacSign = getZodiacSign(birthDate);\n      const tarotCard = getRandomTarotCard();\n      \n      // Generate story chapters\n      const story = {\n        chapter1: `Once upon a time, in a land where stars whisper secrets and planets dance in the cosmic ballet, there was born a very special child named ${childName}. On the day of their birth, the universe itself smiled, knowing that someone truly magical had entered the world...`,\n        \n        chapter2: `On the day ${childName} was born, the ${zodiacSign.name} constellation shimmered brighter than ever before. The ${zodiacSign.symbol} symbol appeared in the clouds, marking this child as one blessed with the gifts of ${zodiacSign.element}. ${zodiacSign.childPersonality}`,\n        \n        chapter3: `As ${childName} grew, wonderful magical abilities began to bloom. Being ruled by ${zodiacSign.ruling_planet}, this special child discovered they had ${zodiacSign.magicalPowers}. Their favorite colors of ${zodiacSign.favoriteColors.join(', ')} would appear wherever they went, bringing joy and wonder to all who saw them.`\n      };\n\n      // Create personalized tarot message\n      const personalizedTarotCard = {\n        ...tarotCard,\n        childMessage: `Dear ${childName}, ${tarotCard.childMessage}`\n      };\n\n      const horoscope = {\n        childName,\n        birthDate,\n        birthTime,\n        birthLocation,\n        zodiacSign,\n        story,\n        tarotCard: personalizedTarotCard,\n        generatedAt: new Date().toISOString()\n      };\n\n      res.json({ horoscope });\n      \n    } catch (error) {\n      console.error('Error generating horoscope:', error);\n      res.status(500).json({ error: \"Failed to generate horoscope\" });\n    }\n  });\n\n  const httpServer = createServer(app);\n  return httpServer;\n}\n","size_bytes":3821},"server/storage.ts":{"content":"import { type User, type InsertUser } from \"@shared/schema\";\nimport { randomUUID } from \"crypto\";\n\n// modify the interface with any CRUD methods\n// you might need\n\nexport interface IStorage {\n  getUser(id: string): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n}\n\nexport class MemStorage implements IStorage {\n  private users: Map<string, User>;\n\n  constructor() {\n    this.users = new Map();\n  }\n\n  async getUser(id: string): Promise<User | undefined> {\n    return this.users.get(id);\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    return Array.from(this.users.values()).find(\n      (user) => user.username === username,\n    );\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const id = randomUUID();\n    const user: User = { ...insertUser, id };\n    this.users.set(id, user);\n    return user;\n  }\n}\n\nexport const storage = new MemStorage();\n","size_bytes":993},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar, timestamp } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  username: text(\"username\").notNull().unique(),\n  password: text(\"password\").notNull(),\n});\n\nexport const horoscopes = pgTable(\"horoscopes\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  childName: text(\"child_name\").notNull(),\n  birthDate: text(\"birth_date\").notNull(),\n  birthTime: text(\"birth_time\"),\n  birthLocation: text(\"birth_location\").notNull(),\n  zodiacSign: text(\"zodiac_sign\").notNull(),\n  story: text(\"story\").notNull(),\n  tarotCard: text(\"tarot_card\").notNull(),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\nexport const insertUserSchema = createInsertSchema(users).pick({\n  username: true,\n  password: true,\n});\n\nexport const insertHoroscopeSchema = createInsertSchema(horoscopes).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type User = typeof users.$inferSelect;\nexport type InsertHoroscope = z.infer<typeof insertHoroscopeSchema>;\nexport type Horoscope = typeof horoscopes.$inferSelect;\n","size_bytes":1295},"client/src/App.tsx":{"content":"import { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\nimport { Route, Switch, Router } from \"wouter\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport Landing from \"@/pages/landing\";\nimport InputForm from \"@/pages/input-form\";\nimport Storybook from \"@/pages/storybook\";\nimport TarotPage from \"@/pages/tarot\";\nimport About from \"@/pages/about\";\nimport NotFound from \"@/pages/not-found\";\nimport Sidebar from \"@/components/Sidebar\";\nimport StarsBackground from \"@/components/StarsBackground\";\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n\nexport default function App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <Router>\n        <div className=\"min-h-screen bg-background text-foreground font-story overflow-x-hidden\">\n          <StarsBackground />\n          <Sidebar />\n          \n          <div id=\"mainContent\" className=\"transition-all duration-300\">\n            <Switch>\n              <Route path=\"/\" component={Landing} />\n              <Route path=\"/input\" component={InputForm} />\n              <Route path=\"/storybook\" component={Storybook} />\n              <Route path=\"/tarot\" component={TarotPage} />\n              <Route path=\"/about\" component={About} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n          \n          <Toaster />\n        </div>\n      </Router>\n    </QueryClientProvider>\n  );\n}\n","size_bytes":1601},"client/src/index.css":{"content":"@import url('https://fonts.googleapis.com/css2?family=Pacifico&family=Quicksand:wght@300;400;500;600;700&family=Caveat:wght@400;600;700&display=swap');\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --background: hsl(249, 47%, 8%);\n  --foreground: hsl(0, 0%, 98%);\n  --card: hsl(249, 39%, 14%);\n  --card-foreground: hsl(0, 0%, 98%);\n  --popover: hsl(249, 39%, 14%);\n  --popover-foreground: hsl(0, 0%, 98%);\n  --primary: hsl(243, 75%, 59%);\n  --primary-foreground: hsl(0, 0%, 98%);\n  --secondary: hsl(45, 93%, 57%);\n  --secondary-foreground: hsl(249, 47%, 8%);\n  --muted: hsl(244, 71%, 91%);\n  --muted-foreground: hsl(249, 47%, 8%);\n  --accent: hsl(213, 93%, 68%);\n  --accent-foreground: hsl(249, 47%, 8%);\n  --destructive: hsl(0, 62%, 30%);\n  --destructive-foreground: hsl(0, 85%, 97%);\n  --border: hsl(249, 39%, 24%);\n  --input: hsl(249, 39%, 14%);\n  --ring: hsl(243, 75%, 59%);\n  --radius: 0.75rem;\n  --chart-1: hsl(12, 76%, 61%);\n  --chart-2: hsl(173, 58%, 39%);\n  --chart-3: hsl(197, 37%, 24%);\n  --chart-4: hsl(43, 74%, 66%);\n  --chart-5: hsl(27, 87%, 67%);\n  --sidebar-background: hsl(249, 39%, 14%);\n  --sidebar-foreground: hsl(0, 0%, 98%);\n  --sidebar-primary: hsl(243, 75%, 59%);\n  --sidebar-primary-foreground: hsl(0, 0%, 98%);\n  --sidebar-accent: hsl(213, 93%, 68%);\n  --sidebar-accent-foreground: hsl(249, 47%, 8%);\n  --sidebar-border: hsl(249, 39%, 24%);\n  --sidebar-ring: hsl(243, 75%, 59%);\n  --font-magical: 'Pacifico', cursive;\n  --font-story: 'Quicksand', sans-serif;\n  --font-handwritten: 'Caveat', cursive;\n}\n\n* {\n  border-color: hsl(var(--border));\n}\n\nbody {\n  background-color: hsl(var(--background));\n  color: hsl(var(--foreground));\n  font-family: var(--font-story);\n}\n\n/* Custom animations */\n@keyframes twinkle {\n  0%, 100% { \n    opacity: 0.3; \n    transform: scale(1); \n  }\n  50% { \n    opacity: 1; \n    transform: scale(1.2); \n  }\n}\n\n@keyframes glow {\n  from { \n    box-shadow: 0 0 20px hsl(243, 75%, 59%, 0.5); \n  }\n  to { \n    box-shadow: 0 0 40px hsl(243, 75%, 59%, 0.8), 0 0 60px hsl(45, 93%, 57%, 0.4); \n  }\n}\n\n@keyframes float {\n  0%, 100% { \n    transform: translateY(0px) rotate(0deg); \n  }\n  50% { \n    transform: translateY(-20px) rotate(180deg); \n  }\n}\n\n@keyframes flip {\n  0% { transform: rotateY(0); }\n  50% { transform: rotateY(90deg); }\n  100% { transform: rotateY(0); }\n}\n\n@keyframes typewriter {\n  from { width: 0; }\n  to { width: 100%; }\n}\n\n@keyframes gradient-shift {\n  0%, 100% { background-position: 0% 50%; }\n  50% { background-position: 100% 50%; }\n}\n\n.font-magical {\n  font-family: var(--font-magical);\n}\n\n.font-story {\n  font-family: var(--font-story);\n}\n\n.font-handwritten {\n  font-family: var(--font-handwritten);\n}\n\n.animate-twinkle {\n  animation: twinkle 3s ease-in-out infinite;\n}\n\n.animate-glow {\n  animation: glow 2s ease-in-out infinite alternate;\n}\n\n.animate-float {\n  animation: float 6s ease-in-out infinite;\n}\n\n.animate-flip {\n  animation: flip 0.8s ease-in-out;\n}\n\n.animate-typewriter {\n  animation: typewriter 3s steps(40) forwards;\n}\n\n.stars {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  pointer-events: none;\n  z-index: 0;\n}\n\n.star {\n  position: absolute;\n  width: 2px;\n  height: 2px;\n  background: white;\n  border-radius: 50%;\n  animation: twinkle 3s infinite;\n}\n\n.card-flip {\n  perspective: 1000px;\n}\n\n.card-flip-inner {\n  transition: transform 0.8s;\n  transform-style: preserve-3d;\n  position: relative;\n  width: 100%;\n  height: 100%;\n}\n\n.card-flip.flipped .card-flip-inner {\n  transform: rotateY(180deg);\n}\n\n.card-front, .card-back {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  backface-visibility: hidden;\n  border-radius: 0.75rem;\n}\n\n.card-back {\n  transform: rotateY(180deg);\n}\n\n.magical-border {\n  background: linear-gradient(45deg, hsl(243, 75%, 59%), hsl(45, 93%, 57%), hsl(213, 93%, 68%), hsl(243, 75%, 59%));\n  background-size: 400% 400%;\n  animation: gradient-shift 4s ease infinite;\n  padding: 3px;\n  border-radius: 1rem;\n}\n\n.sidebar-transition {\n  transition: transform 0.3s ease-in-out;\n}\n\n.typewriter-text {\n  overflow: hidden;\n  white-space: nowrap;\n  border-right: 2px solid hsl(45, 93%, 57%);\n  animation: typewriter 3s steps(40) forwards;\n}\n\n/* Responsive adjustments */\n@media (max-width: 768px) {\n  .font-magical {\n    font-size: 2.5rem;\n  }\n}\n\n/* Ensure proper text contrast */\n.bg-gradient-to-r {\n  color: hsl(var(--primary-foreground));\n}\n\n/* Scrollbar styling */\n::-webkit-scrollbar {\n  width: 8px;\n}\n\n::-webkit-scrollbar-track {\n  background: hsl(var(--muted));\n}\n\n::-webkit-scrollbar-thumb {\n  background: hsl(var(--primary));\n  border-radius: 4px;\n}\n\n::-webkit-scrollbar-thumb:hover {\n  background: hsl(var(--primary), 0.8);\n}\n","size_bytes":4690},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/components/BackgroundMusic.tsx":{"content":"import { useEffect, useRef, useState } from \"react\";\nimport { Volume2, VolumeX } from \"lucide-react\";\nimport { Button } from \"./ui/button\";\n\nconst BackgroundMusic: React.FC = () => {\n  const audioRef = useRef<HTMLAudioElement>(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isMuted, setIsMuted] = useState(false);\n\n  useEffect(() => {\n    const audio = audioRef.current;\n    if (!audio) return;\n\n    // Set audio properties for a more calm experience\n    audio.loop = true;\n    audio.volume = 0.15; // Much softer, more ambient volume\n    audio.playbackRate = 0.9; // Slightly slower for a more calming effect\n    \n    // Auto-play after user interaction\n    const startMusic = () => {\n      if (audio && !isPlaying) {\n        audio.play().then(() => {\n          setIsPlaying(true);\n        }).catch((error) => {\n          console.log(\"Auto-play prevented:\", error);\n        });\n      }\n    };\n\n    // Start music on first user interaction\n    document.addEventListener(\"click\", startMusic, { once: true });\n    document.addEventListener(\"keydown\", startMusic, { once: true });\n\n    return () => {\n      document.removeEventListener(\"click\", startMusic);\n      document.removeEventListener(\"keydown\", startMusic);\n    };\n  }, [isPlaying]);\n\n  const togglePlay = () => {\n    const audio = audioRef.current;\n    if (!audio) return;\n\n    if (isPlaying) {\n      audio.pause();\n      setIsPlaying(false);\n    } else {\n      audio.play().then(() => {\n        setIsPlaying(true);\n      }).catch((error) => {\n        console.log(\"Play failed:\", error);\n      });\n    }\n  };\n\n  const toggleMute = () => {\n    const audio = audioRef.current;\n    if (!audio) return;\n\n    audio.muted = !audio.muted;\n    setIsMuted(audio.muted);\n  };\n\n  return (\n    <div className=\"fixed top-4 right-4 z-50 flex space-x-2\">\n      <Button\n        onClick={togglePlay}\n        variant=\"outline\"\n        size=\"sm\"\n        className=\"bg-purple-900/50 border-purple-300/30 text-purple-200 hover:bg-purple-800/50\"\n      >\n        {isPlaying ? \"⏸️\" : \"▶️\"}\n      </Button>\n      \n      <Button\n        onClick={toggleMute}\n        variant=\"outline\"\n        size=\"sm\"\n        className=\"bg-purple-900/50 border-purple-300/30 text-purple-200 hover:bg-purple-800/50\"\n      >\n        {isMuted ? <VolumeX className=\"w-4 h-4\" /> : <Volume2 className=\"w-4 h-4\" />}\n      </Button>\n\n      <audio ref={audioRef} preload=\"auto\">\n        <source src=\"/sounds/background.mp3\" type=\"audio/mpeg\" />\n        Your browser does not support the audio element.\n      </audio>\n    </div>\n  );\n};\n\nexport default BackgroundMusic;","size_bytes":2604},"client/src/components/BirthDetailsForm.tsx":{"content":"import { useState } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { Calendar, Clock, MapPin, Sparkles } from \"lucide-react\";\nimport { Button } from \"./ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"./ui/card\";\nimport { Input } from \"./ui/input\";\nimport { Label } from \"./ui/label\";\n\nexport interface BirthDetails {\n  date: string;\n  time: string;\n  location: string;\n  timezone: string;\n}\n\ninterface BirthDetailsFormProps {\n  onSubmit: (details: BirthDetails) => void;\n  onBack: () => void;\n}\n\nconst BirthDetailsForm: React.FC<BirthDetailsFormProps> = ({ onSubmit, onBack }) => {\n  const [formData, setFormData] = useState<BirthDetails>({\n    date: \"\",\n    time: \"\",\n    location: \"\",\n    timezone: Intl.DateTimeFormat().resolvedOptions().timeZone\n  });\n  \n  const [errors, setErrors] = useState<Partial<BirthDetails>>({});\n\n  const validateForm = () => {\n    const newErrors: Partial<BirthDetails> = {};\n    \n    if (!formData.date) {\n      newErrors.date = \"Please enter your birth date\";\n    }\n    \n    if (!formData.time) {\n      newErrors.time = \"Please enter your birth time\";\n    }\n    \n    if (!formData.location) {\n      newErrors.location = \"Please enter your birth location\";\n    }\n    \n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (validateForm()) {\n      onSubmit(formData);\n    }\n  };\n\n  const handleInputChange = (field: keyof BirthDetails, value: string) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n    if (errors[field]) {\n      setErrors(prev => ({ ...prev, [field]: undefined }));\n    }\n  };\n\n  return (\n    <div className=\"w-full max-w-2xl mx-auto\">\n      <motion.div\n        initial={{ opacity: 0, y: 30 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.6 }}\n      >\n        <Card className=\"bg-gradient-to-br from-pink-900/30 to-blue-900/30 border-pink-300/20 backdrop-blur-sm\">\n          <CardHeader className=\"text-center pb-6\">\n            <CardTitle className=\"flex items-center justify-center space-x-3 text-2xl md:text-3xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-yellow-200 to-pink-300\">\n              <Sparkles className=\"w-8 h-8 text-yellow-400\" />\n              <span>Tell Us About Your Birth</span>\n              <Sparkles className=\"w-8 h-8 text-yellow-400\" />\n            </CardTitle>\n            <p className=\"text-pink-200 mt-3\">\n              We need your birth details to create the most accurate star reading just for you!\n            </p>\n          </CardHeader>\n          \n          <CardContent className=\"space-y-6\">\n            <form onSubmit={handleSubmit} className=\"space-y-6\">\n              {/* Birth Date */}\n              <motion.div\n                initial={{ opacity: 0, x: -20 }}\n                animate={{ opacity: 1, x: 0 }}\n                transition={{ delay: 0.2, duration: 0.5 }}\n                className=\"space-y-2\"\n              >\n                <Label htmlFor=\"date\" className=\"flex items-center space-x-2 text-pink-200 font-medium\">\n                  <Calendar className=\"w-4 h-4\" />\n                  <span>Birth Date</span>\n                </Label>\n                <Input\n                  id=\"date\"\n                  type=\"date\"\n                  value={formData.date}\n                  onChange={(e) => handleInputChange(\"date\", e.target.value)}\n                  className=\"bg-purple-800/20 border-pink-300/30 text-pink-100 focus:border-yellow-300/60\"\n                />\n                {errors.date && (\n                  <p className=\"text-red-300 text-sm\">{errors.date}</p>\n                )}\n              </motion.div>\n\n              {/* Birth Time */}\n              <motion.div\n                initial={{ opacity: 0, x: -20 }}\n                animate={{ opacity: 1, x: 0 }}\n                transition={{ delay: 0.3, duration: 0.5 }}\n                className=\"space-y-2\"\n              >\n                <Label htmlFor=\"time\" className=\"flex items-center space-x-2 text-pink-200 font-medium\">\n                  <Clock className=\"w-4 h-4\" />\n                  <span>Birth Time</span>\n                </Label>\n                <Input\n                  id=\"time\"\n                  type=\"time\"\n                  value={formData.time}\n                  onChange={(e) => handleInputChange(\"time\", e.target.value)}\n                  className=\"bg-purple-800/20 border-pink-300/30 text-pink-100 focus:border-yellow-300/60\"\n                />\n                {errors.time && (\n                  <p className=\"text-red-300 text-sm\">{errors.time}</p>\n                )}\n                <p className=\"text-pink-300 text-xs\">\n                  Don't know your exact time? Ask your parents or check your birth certificate!\n                </p>\n              </motion.div>\n\n              {/* Birth Location */}\n              <motion.div\n                initial={{ opacity: 0, x: -20 }}\n                animate={{ opacity: 1, x: 0 }}\n                transition={{ delay: 0.4, duration: 0.5 }}\n                className=\"space-y-2\"\n              >\n                <Label htmlFor=\"location\" className=\"flex items-center space-x-2 text-pink-200 font-medium\">\n                  <MapPin className=\"w-4 h-4\" />\n                  <span>Birth Location</span>\n                </Label>\n                <Input\n                  id=\"location\"\n                  type=\"text\"\n                  placeholder=\"City, Country (e.g., New York, USA)\"\n                  value={formData.location}\n                  onChange={(e) => handleInputChange(\"location\", e.target.value)}\n                  className=\"bg-purple-800/20 border-pink-300/30 text-pink-100 placeholder-pink-300/50 focus:border-yellow-300/60\"\n                />\n                {errors.location && (\n                  <p className=\"text-red-300 text-sm\">{errors.location}</p>\n                )}\n              </motion.div>\n\n              {/* Action Buttons */}\n              <motion.div\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ delay: 0.6, duration: 0.5 }}\n                className=\"flex flex-col sm:flex-row gap-4 pt-6\"\n              >\n                <Button\n                  type=\"button\"\n                  onClick={onBack}\n                  variant=\"outline\"\n                  className=\"bg-purple-900/50 border-purple-300/30 text-purple-200 hover:bg-purple-800/50\"\n                >\n                  ← Back to Magic\n                </Button>\n                \n                <Button\n                  type=\"submit\"\n                  className=\"bg-gradient-to-r from-pink-600 to-blue-600 hover:from-pink-700 hover:to-blue-700 text-white font-semibold flex-1\"\n                >\n                  ✨ Create My Star Reading ✨\n                </Button>\n              </motion.div>\n            </form>\n          </CardContent>\n        </Card>\n      </motion.div>\n    </div>\n  );\n};\n\nexport default BirthDetailsForm;","size_bytes":7025},"client/src/components/CelestialBackground.tsx":{"content":"import { useEffect, useRef } from \"react\";\nimport { motion } from \"framer-motion\";\n\nconst CelestialBackground: React.FC = () => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext(\"2d\");\n    if (!ctx) return;\n\n    const resizeCanvas = () => {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n    };\n\n    resizeCanvas();\n    window.addEventListener(\"resize\", resizeCanvas);\n\n    // Generate stars\n    const stars: Array<{ x: number; y: number; size: number; opacity: number; speed: number }> = [];\n    for (let i = 0; i < 200; i++) {\n      stars.push({\n        x: Math.random() * canvas.width,\n        y: Math.random() * canvas.height,\n        size: Math.random() * 2 + 0.5,\n        opacity: Math.random() * 0.8 + 0.2,\n        speed: Math.random() * 0.5 + 0.1,\n      });\n    }\n\n    let animationId: number;\n\n    const animate = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      // Draw stars\n      stars.forEach((star) => {\n        ctx.beginPath();\n        ctx.arc(star.x, star.y, star.size, 0, Math.PI * 2);\n        ctx.fillStyle = `rgba(255, 255, 255, ${star.opacity})`;\n        ctx.fill();\n\n        // Twinkling effect\n        star.opacity += (Math.random() - 0.5) * 0.02;\n        star.opacity = Math.max(0.1, Math.min(1, star.opacity));\n\n        // Slow movement\n        star.x += star.speed * (Math.random() - 0.5);\n        star.y += star.speed * (Math.random() - 0.5);\n\n        // Wrap around edges\n        if (star.x < 0) star.x = canvas.width;\n        if (star.x > canvas.width) star.x = 0;\n        if (star.y < 0) star.y = canvas.height;\n        if (star.y > canvas.height) star.y = 0;\n      });\n\n      animationId = requestAnimationFrame(animate);\n    };\n\n    animate();\n\n    return () => {\n      window.removeEventListener(\"resize\", resizeCanvas);\n      cancelAnimationFrame(animationId);\n    };\n  }, []);\n\n  return (\n    <>\n      {/* Animated Stars Canvas */}\n      <canvas\n        ref={canvasRef}\n        className=\"absolute inset-0 w-full h-full\"\n        style={{ zIndex: 1 }}\n      />\n      \n      {/* Gradient Overlays */}\n      <div className=\"absolute inset-0 bg-gradient-to-r from-purple-900/20 via-transparent to-indigo-900/20\" style={{ zIndex: 2 }} />\n      \n      {/* Floating Celestial Elements */}\n      <div className=\"absolute inset-0\" style={{ zIndex: 3 }}>\n        {/* Floating Moons */}\n        <motion.div\n          className=\"absolute top-20 left-20 text-6xl opacity-20\"\n          animate={{\n            y: [-20, 20, -20],\n            rotate: [0, 360],\n          }}\n          transition={{\n            y: { duration: 8, repeat: Infinity, ease: \"easeInOut\" },\n            rotate: { duration: 20, repeat: Infinity, ease: \"linear\" },\n          }}\n        >\n          🌙\n        </motion.div>\n        \n        <motion.div\n          className=\"absolute top-40 right-32 text-4xl opacity-30\"\n          animate={{\n            y: [20, -20, 20],\n            x: [-10, 10, -10],\n          }}\n          transition={{\n            y: { duration: 6, repeat: Infinity, ease: \"easeInOut\" },\n            x: { duration: 4, repeat: Infinity, ease: \"easeInOut\" },\n          }}\n        >\n          ✨\n        </motion.div>\n        \n        <motion.div\n          className=\"absolute bottom-32 left-40 text-5xl opacity-25\"\n          animate={{\n            rotate: [0, -360],\n            scale: [1, 1.2, 1],\n          }}\n          transition={{\n            rotate: { duration: 15, repeat: Infinity, ease: \"linear\" },\n            scale: { duration: 5, repeat: Infinity, ease: \"easeInOut\" },\n          }}\n        >\n          ⭐\n        </motion.div>\n        \n        <motion.div\n          className=\"absolute bottom-20 right-20 text-3xl opacity-40\"\n          animate={{\n            y: [-15, 15, -15],\n            opacity: [0.2, 0.6, 0.2],\n          }}\n          transition={{\n            y: { duration: 7, repeat: Infinity, ease: \"easeInOut\" },\n            opacity: { duration: 3, repeat: Infinity, ease: \"easeInOut\" },\n          }}\n        >\n          🌟\n        </motion.div>\n      </div>\n      \n      {/* Subtle Light Rays */}\n      <div \n        className=\"absolute inset-0 opacity-10\" \n        style={{ \n          background: \"conic-gradient(from 0deg at 20% 80%, transparent 0deg, rgba(255, 255, 255, 0.1) 60deg, transparent 120deg, rgba(255, 255, 255, 0.05) 180deg, transparent 240deg, rgba(255, 255, 255, 0.1) 300deg, transparent 360deg)\",\n          zIndex: 2 \n        }} \n      />\n    </>\n  );\n};\n\nexport default CelestialBackground;\n","size_bytes":4627},"client/src/components/HoroscopeDisplay.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { ArrowLeft, Calendar, Star, Moon, Sun, Sunrise } from \"lucide-react\";\nimport { ZodiacSign } from \"../lib/zodiacData\";\nimport { generatePersonalizedHoroscope } from \"../lib/horoscopeGenerator\";\nimport { AstrologicalProfile } from \"../lib/astroCalculations\";\nimport { BirthDetails } from \"./BirthDetailsForm\";\nimport { Button } from \"./ui/button\";\nimport { Card, CardContent } from \"./ui/card\";\n\ninterface HoroscopeDisplayProps {\n  astroProfile: AstrologicalProfile;\n  birthDetails: BirthDetails;\n  onBack: () => void;\n}\n\nconst HoroscopeDisplay: React.FC<HoroscopeDisplayProps> = ({ astroProfile, birthDetails, onBack }) => {\n  const horoscope = generatePersonalizedHoroscope(astroProfile);\n  \n  const today = new Date().toLocaleDateString('en-US', { \n    weekday: 'long', \n    year: 'numeric', \n    month: 'long', \n    day: 'numeric' \n  });\n\n  return (\n    <div className=\"w-full max-w-4xl mx-auto space-y-6\">\n      {/* Header */}\n      <motion.div\n        initial={{ y: -30, opacity: 0 }}\n        animate={{ y: 0, opacity: 1 }}\n        transition={{ duration: 0.6 }}\n        className=\"flex items-center justify-between mb-8\"\n      >\n        <Button\n          onClick={onBack}\n          variant=\"outline\"\n          size=\"lg\"\n          className=\"bg-pink-900/50 border-pink-300/30 text-pink-200 hover:bg-pink-800/50\"\n        >\n          <ArrowLeft className=\"w-5 h-5 mr-2\" />\n          ← Back to Celestial Horoscope\n        </Button>\n        \n        <div className=\"flex items-center space-x-2 text-purple-200\">\n          <Calendar className=\"w-5 h-5\" />\n          <span className=\"text-sm\">{today}</span>\n        </div>\n      </motion.div>\n\n      {/* Astrological Profile Header */}\n      <motion.div\n        initial={{ scale: 0.8, opacity: 0 }}\n        animate={{ scale: 1, opacity: 1 }}\n        transition={{ delay: 0.2, duration: 0.6 }}\n        className=\"text-center mb-8\"\n      >\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-6\">\n          {/* Sun Sign */}\n          <div className=\"bg-gradient-to-br from-yellow-800/20 to-orange-800/20 rounded-lg p-4 border border-yellow-300/20\">\n            <div className=\"flex items-center justify-center space-x-2 mb-2\">\n              <Sun className=\"w-5 h-5 text-yellow-400\" />\n              <h3 className=\"text-lg font-semibold text-yellow-200\">Sun Sign</h3>\n            </div>\n            <div className=\"text-3xl mb-1\">{astroProfile.sunSign.symbol}</div>\n            <div className=\"text-yellow-200 font-medium\">{astroProfile.sunSign.name}</div>\n            <div className=\"text-yellow-300/70 text-sm\">Your Core Self</div>\n          </div>\n          \n          {/* Moon Sign */}\n          <div className=\"bg-gradient-to-br from-blue-800/20 to-purple-800/20 rounded-lg p-4 border border-blue-300/20\">\n            <div className=\"flex items-center justify-center space-x-2 mb-2\">\n              <Moon className=\"w-5 h-5 text-blue-400\" />\n              <h3 className=\"text-lg font-semibold text-blue-200\">Moon Sign</h3>\n            </div>\n            <div className=\"text-3xl mb-1\">{astroProfile.moonSign.symbol}</div>\n            <div className=\"text-blue-200 font-medium\">{astroProfile.moonSign.name}</div>\n            <div className=\"text-blue-300/70 text-sm\">Your Emotions</div>\n          </div>\n          \n          {/* Rising Sign */}\n          <div className=\"bg-gradient-to-br from-pink-800/20 to-purple-800/20 rounded-lg p-4 border border-pink-300/20\">\n            <div className=\"flex items-center justify-center space-x-2 mb-2\">\n              <Sunrise className=\"w-5 h-5 text-pink-400\" />\n              <h3 className=\"text-lg font-semibold text-pink-200\">Rising Sign</h3>\n            </div>\n            <div className=\"text-3xl mb-1\">{astroProfile.risingSign.symbol}</div>\n            <div className=\"text-pink-200 font-medium\">{astroProfile.risingSign.name}</div>\n            <div className=\"text-pink-300/70 text-sm\">How Others See You</div>\n          </div>\n        </div>\n        \n        {/* Your Personal Tarot Card */}\n        {horoscope.tarotCard && (\n          <motion.div\n            initial={{ y: 20, opacity: 0 }}\n            animate={{ y: 0, opacity: 1 }}\n            transition={{ delay: 0.4, duration: 0.6 }}\n            className=\"bg-gradient-to-br from-purple-800/20 to-pink-800/20 rounded-lg p-6 border border-purple-300/20\"\n          >\n            <div className=\"text-center mb-4\">\n              <h3 className=\"text-xl font-semibold text-purple-200 mb-3\">🔮 Your Personal Tarot Card 🔮</h3>\n              \n              {/* Tarot Card Image */}\n              <div className=\"mb-4 flex justify-center\">\n                <div className=\"relative w-32 h-48 bg-gradient-to-b from-purple-900 to-indigo-900 rounded-lg border-2 border-yellow-400 shadow-2xl overflow-hidden\">\n                  <div className=\"absolute inset-0 bg-gradient-to-b from-purple-800/50 to-transparent\"></div>\n                  <div className=\"absolute inset-0 flex flex-col items-center justify-center text-center p-3\">\n                    <div className=\"text-yellow-300 text-lg font-bold mb-2\">{horoscope.tarotCard.name}</div>\n                    <div className=\"text-purple-200 text-xs space-y-1\">\n                      {horoscope.tarotCard.keywords.slice(0, 3).map((keyword, index) => (\n                        <div key={index} className=\"px-2 py-1 bg-purple-900/60 rounded text-xs\">{keyword}</div>\n                      ))}\n                    </div>\n                  </div>\n                  {/* Card border decoration */}\n                  <div className=\"absolute inset-1 border border-yellow-400/30 rounded\"></div>\n                </div>\n              </div>\n              \n              {/* Card Name and Keywords */}\n              <div className=\"text-2xl font-bold text-yellow-300 mb-2\">{horoscope.tarotCard.name}</div>\n              <div className=\"flex justify-center flex-wrap gap-2 mb-3\">\n                {horoscope.tarotCard.keywords.map((keyword, index) => (\n                  <span\n                    key={index}\n                    className=\"px-3 py-1 bg-purple-800/40 rounded-full text-sm text-purple-200 border border-purple-400/30\"\n                  >\n                    {keyword}\n                  </span>\n                ))}\n              </div>\n            </div>\n            \n            {/* Card Description */}\n            <div className=\"space-y-3 text-purple-100\">\n              <div className=\"p-3 bg-purple-800/20 rounded-lg\">\n                <p className=\"text-sm leading-relaxed text-center\">{horoscope.tarotCard.meaningUpright}</p>\n              </div>\n            </div>\n          </motion.div>\n        )}\n      </motion.div>\n\n      {/* Horoscope Content */}\n      <motion.div\n        initial={{ y: 50, opacity: 0 }}\n        animate={{ y: 0, opacity: 1 }}\n        transition={{ delay: 0.4, duration: 0.6 }}\n      >\n        <Card className=\"bg-gradient-to-br from-pink-900/30 to-blue-900/30 border-pink-300/20 backdrop-blur-sm\">\n          <CardContent className=\"p-8\">\n            {/* Title */}\n            <div className=\"flex items-center justify-center space-x-3 mb-6\">\n              <Star className=\"w-8 h-8 text-yellow-400 animate-pulse\" />\n              <h2 className=\"text-2xl md:text-3xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-yellow-200 to-pink-300 text-center\">\n                Your Magical Daily Message!\n              </h2>\n              <Star className=\"w-8 h-8 text-yellow-400 animate-pulse\" />\n            </div>\n\n            {/* Horoscope Paragraphs */}\n            <div className=\"space-y-6 text-pink-100 leading-relaxed\">\n              {horoscope.content.map((paragraph: string, index: number) => (\n                <motion.div\n                  key={index}\n                  initial={{ opacity: 0, y: 20 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ delay: 0.6 + (index * 0.2), duration: 0.5 }}\n                  className=\"text-lg p-4 bg-gradient-to-r from-purple-800/20 to-pink-800/20 rounded-lg border border-pink-300/10\"\n                >\n                  {paragraph}\n                </motion.div>\n              ))}\n            </div>\n\n            {/* Daily Mantra */}\n            <motion.div\n              initial={{ opacity: 0, scale: 0.9 }}\n              animate={{ opacity: 1, scale: 1 }}\n              transition={{ delay: 1.4, duration: 0.6 }}\n              className=\"mt-8 p-6 bg-gradient-to-r from-pink-800/30 to-blue-800/30 rounded-lg border border-pink-300/20\"\n            >\n              <div className=\"text-center\">\n                <h3 className=\"text-xl font-semibold text-yellow-300 mb-3\">✨ Your Special Words for Today ✨</h3>\n                <p className=\"text-xl italic text-pink-100 font-medium\">\n                  \"{horoscope.mantra}\"\n                </p>\n              </div>\n            </motion.div>\n\n            {/* Planetary Influences */}\n            <motion.div\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              transition={{ delay: 1.6, duration: 0.6 }}\n              className=\"mt-6\"\n            >\n              <h4 className=\"text-center text-yellow-300 mb-3 font-semibold\">🌟 Your Star Powers Today 🌟</h4>\n              <div className=\"flex flex-wrap justify-center gap-3\">\n                {horoscope.influences.map((influence: string, index: number) => (\n                  <span\n                    key={index}\n                    className=\"px-4 py-2 bg-pink-800/40 rounded-full text-sm text-pink-200 border border-pink-400/30 font-medium\"\n                  >\n                    ✨ {influence}\n                  </span>\n                ))}\n              </div>\n            </motion.div>\n\n            {/* Detailed Tarot Guidance */}\n            {horoscope.tarotCard && (\n              <motion.div\n                initial={{ opacity: 0, y: 30 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ delay: 1.8, duration: 0.8 }}\n                className=\"mt-8 grid grid-cols-1 md:grid-cols-2 gap-6\"\n              >\n                <div className=\"p-6 bg-gradient-to-br from-purple-900/30 to-pink-900/30 rounded-lg border border-purple-300/20\">\n                  <h4 className=\"font-semibold text-purple-200 mb-3 text-center\">🌟 Emotional Guidance</h4>\n                  <p className=\"text-sm leading-relaxed text-purple-100\">{horoscope.tarotCard.emotionalGuidance}</p>\n                </div>\n                \n                <div className=\"p-6 bg-gradient-to-br from-pink-900/30 to-purple-900/30 rounded-lg border border-pink-300/20\">\n                  <h4 className=\"font-semibold text-pink-200 mb-3 text-center\">💪 Mental Encouragement</h4>\n                  <p className=\"text-sm leading-relaxed text-pink-100\">{horoscope.tarotCard.mentalEncouragement}</p>\n                </div>\n              </motion.div>\n            )}\n            \n            {/* Creator Credit */}\n            <motion.div\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              transition={{ delay: 1.8, duration: 0.6 }}\n              className=\"mt-6 text-center\"\n            >\n              <motion.p \n                className=\"text-pink-300 text-sm font-medium\"\n                animate={{\n                  opacity: [0.7, 1, 0.7],\n                }}\n                transition={{\n                  duration: 2,\n                  repeat: Infinity,\n                  ease: \"easeInOut\"\n                }}\n              >\n                Created by Souhail & Maria\n              </motion.p>\n            </motion.div>\n          </CardContent>\n        </Card>\n      </motion.div>\n    </div>\n  );\n};\n\nexport default HoroscopeDisplay;\n","size_bytes":11695},"client/src/components/MagicalLanding.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { Sparkles } from \"lucide-react\";\nimport { Button } from \"./ui/button\";\nimport { zodiacSigns } from \"../lib/zodiacData\";\n\ninterface MagicalLandingProps {\n  onStartMagic: () => void;\n}\n\nconst MagicalLanding: React.FC<MagicalLandingProps> = ({ onStartMagic }) => {\n  return (\n    <div className=\"relative min-h-screen flex flex-col items-center justify-center overflow-hidden\">\n      {/* Realistic Space Background */}\n      <div className=\"absolute inset-0\">\n        {/* Deep Space Gradient Base */}\n        <div \n          className=\"absolute inset-0\"\n          style={{\n            background: `\n              radial-gradient(ellipse at top, rgba(15, 23, 42, 0.9) 0%, rgba(2, 6, 23, 1) 40%),\n              radial-gradient(ellipse at bottom left, rgba(67, 56, 202, 0.2) 0%, transparent 50%),\n              radial-gradient(ellipse at bottom right, rgba(219, 39, 119, 0.2) 0%, transparent 50%),\n              radial-gradient(ellipse at top right, rgba(147, 51, 234, 0.15) 0%, transparent 60%),\n              linear-gradient(180deg, rgba(0, 0, 20, 1) 0%, rgba(10, 0, 30, 1) 50%, rgba(20, 0, 40, 1) 100%)\n            `\n          }}\n        />\n\n        {/* Twinkling Stars */}\n        {Array.from({ length: 150 }).map((_, i) => (\n          <motion.div\n            key={`star-${i}`}\n            className=\"absolute w-1 h-1 bg-white rounded-full\"\n            initial={{\n              x: Math.random() * window.innerWidth,\n              y: Math.random() * window.innerHeight,\n              opacity: 0\n            }}\n            animate={{\n              opacity: [0, 1, 0.3, 1, 0],\n              scale: [0.5, 1.5, 0.8, 1.2, 0.5]\n            }}\n            transition={{\n              duration: 3 + Math.random() * 4,\n              repeat: Infinity,\n              delay: Math.random() * 8,\n              ease: \"easeInOut\"\n            }}\n            style={{\n              boxShadow: `0 0 ${2 + Math.random() * 4}px rgba(255, 255, 255, 0.8)`\n            }}\n          />\n        ))}\n\n        {/* Larger Bright Stars */}\n        {Array.from({ length: 20 }).map((_, i) => (\n          <motion.div\n            key={`bright-star-${i}`}\n            className=\"absolute\"\n            initial={{\n              x: Math.random() * window.innerWidth,\n              y: Math.random() * window.innerHeight,\n            }}\n            animate={{\n              opacity: [0.4, 1, 0.6, 1, 0.4],\n              scale: [1, 1.3, 0.9, 1.2, 1]\n            }}\n            transition={{\n              duration: 4 + Math.random() * 3,\n              repeat: Infinity,\n              delay: Math.random() * 6,\n              ease: \"easeInOut\"\n            }}\n          >\n            <div \n              className=\"w-2 h-2 bg-gradient-to-r from-blue-200 to-white rounded-full\"\n              style={{\n                boxShadow: \"0 0 10px rgba(147, 197, 253, 0.8), 0 0 20px rgba(255, 255, 255, 0.4)\"\n              }}\n            />\n          </motion.div>\n        ))}\n\n        {/* Realistic Sun */}\n        <motion.div\n          className=\"absolute top-20 right-20 w-32 h-32\"\n          animate={{\n            rotate: [0, 360],\n            scale: [0.9, 1.1, 0.9]\n          }}\n          transition={{\n            duration: 20,\n            repeat: Infinity,\n            ease: \"linear\"\n          }}\n        >\n          <div \n            className=\"w-full h-full rounded-full\"\n            style={{\n              background: \"radial-gradient(circle at 30% 30%, #fbbf24, #f59e0b, #d97706)\",\n              boxShadow: `\n                0 0 40px rgba(251, 191, 36, 0.6),\n                0 0 80px rgba(245, 158, 11, 0.4),\n                0 0 120px rgba(217, 119, 6, 0.2),\n                inset -10px -10px 20px rgba(217, 119, 6, 0.3)\n              `\n            }}\n          />\n          {/* Sun rays */}\n          {Array.from({ length: 8 }).map((_, i) => (\n            <motion.div\n              key={i}\n              className=\"absolute w-1 bg-gradient-to-t from-transparent via-yellow-300 to-transparent\"\n              style={{\n                height: \"60px\",\n                left: \"50%\",\n                top: \"-30px\",\n                transformOrigin: \"bottom center\",\n                transform: `translateX(-50%) rotate(${i * 45}deg)`\n              }}\n              animate={{\n                opacity: [0.3, 0.8, 0.3],\n                scaleY: [0.8, 1.2, 0.8]\n              }}\n              transition={{\n                duration: 3,\n                repeat: Infinity,\n                delay: i * 0.2,\n                ease: \"easeInOut\"\n              }}\n            />\n          ))}\n        </motion.div>\n\n        {/* Realistic Moon */}\n        <motion.div\n          className=\"absolute top-32 left-20 w-24 h-24\"\n          animate={{\n            y: [-10, 10, -10],\n            rotate: [0, 5, -5, 0]\n          }}\n          transition={{\n            duration: 8,\n            repeat: Infinity,\n            ease: \"easeInOut\"\n          }}\n        >\n          <div \n            className=\"w-full h-full rounded-full relative\"\n            style={{\n              background: `\n                radial-gradient(circle at 35% 35%, #e2e8f0, #cbd5e1, #94a3b8),\n                radial-gradient(circle at 60% 20%, rgba(148, 163, 184, 0.3) 0%, transparent 40%),\n                radial-gradient(circle at 80% 60%, rgba(100, 116, 139, 0.4) 0%, transparent 30%)\n              `,\n              boxShadow: `\n                0 0 30px rgba(203, 213, 225, 0.4),\n                0 0 60px rgba(148, 163, 184, 0.2),\n                inset -8px -8px 15px rgba(100, 116, 139, 0.3)\n              `\n            }}\n          />\n          {/* Moon craters */}\n          <div className=\"absolute top-2 left-3 w-2 h-2 rounded-full bg-slate-400 opacity-40\" />\n          <div className=\"absolute bottom-3 right-2 w-1.5 h-1.5 rounded-full bg-slate-500 opacity-30\" />\n          <div className=\"absolute top-8 right-4 w-1 h-1 rounded-full bg-slate-400 opacity-50\" />\n        </motion.div>\n\n        {/* Floating Zodiac Symbols with Enhanced Visibility */}\n        {zodiacSigns.map((sign, index) => (\n          <motion.div\n            key={sign.name}\n            className=\"absolute text-4xl md:text-5xl text-yellow-200\"\n            initial={{ \n              x: Math.random() * window.innerWidth,\n              y: Math.random() * window.innerHeight,\n              rotate: 0,\n              scale: 0.5\n            }}\n            animate={{\n              x: [\n                Math.random() * window.innerWidth,\n                Math.random() * window.innerWidth,\n                Math.random() * window.innerWidth\n              ],\n              y: [\n                Math.random() * window.innerHeight,\n                Math.random() * window.innerHeight,\n                Math.random() * window.innerHeight\n              ],\n              rotate: [0, 360, 720],\n              scale: [0.6, 1, 0.8, 1],\n              opacity: [0.2, 0.5, 0.3, 0.4]\n            }}\n            transition={{\n              duration: 25 + Math.random() * 10,\n              repeat: Infinity,\n              ease: \"linear\",\n              delay: index * 2.5\n            }}\n            style={{\n              filter: \"drop-shadow(0 0 8px rgba(251, 191, 36, 0.6)) drop-shadow(0 0 15px rgba(59, 130, 246, 0.3))\",\n              textShadow: \"0 0 10px rgba(251, 191, 36, 0.8)\"\n            }}\n          >\n            {sign.symbol}\n          </motion.div>\n        ))}\n\n        {/* Colorful Nebula Clouds */}\n        {Array.from({ length: 4 }).map((_, i) => (\n          <motion.div\n            key={`nebula-${i}`}\n            className=\"absolute rounded-full opacity-20\"\n            style={{\n              width: `${200 + Math.random() * 300}px`,\n              height: `${150 + Math.random() * 200}px`,\n              left: `${Math.random() * 80}%`,\n              top: `${Math.random() * 80}%`,\n              background: i % 2 === 0 \n                ? \"radial-gradient(ellipse, rgba(139, 92, 246, 0.3) 0%, rgba(67, 56, 202, 0.2) 40%, transparent 70%)\"\n                : \"radial-gradient(ellipse, rgba(236, 72, 153, 0.3) 0%, rgba(219, 39, 119, 0.2) 40%, transparent 70%)\",\n              filter: \"blur(1px)\"\n            }}\n            animate={{\n              scale: [1, 1.2, 0.9, 1],\n              opacity: [0.1, 0.3, 0.15, 0.25],\n              x: [0, 20, -10, 0],\n              y: [0, -15, 10, 0]\n            }}\n            transition={{\n              duration: 15 + Math.random() * 10,\n              repeat: Infinity,\n              ease: \"easeInOut\",\n              delay: i * 3\n            }}\n          />\n        ))}\n\n        {/* Shooting Stars with Trails */}\n        {Array.from({ length: 3 }).map((_, i) => (\n          <motion.div\n            key={`shooting-${i}`}\n            className=\"absolute\"\n            initial={{\n              x: -100,\n              y: Math.random() * window.innerHeight * 0.6,\n              opacity: 0\n            }}\n            animate={{\n              x: window.innerWidth + 100,\n              y: Math.random() * window.innerHeight * 0.6 + 100,\n              opacity: [0, 1, 0.8, 0]\n            }}\n            transition={{\n              duration: 2,\n              repeat: Infinity,\n              delay: i * 12 + Math.random() * 8,\n              ease: \"easeOut\"\n            }}\n          >\n            <div className=\"relative\">\n              <div \n                className=\"w-2 h-2 bg-white rounded-full\"\n                style={{\n                  boxShadow: \"0 0 10px rgba(255, 255, 255, 0.8)\"\n                }}\n              />\n              <div \n                className=\"absolute top-0 left-0 w-20 h-0.5 bg-gradient-to-l from-white to-transparent\"\n                style={{\n                  filter: \"blur(0.5px)\"\n                }}\n              />\n            </div>\n          </motion.div>\n        ))}\n      </div>\n\n      {/* Main Content */}\n      <div className=\"relative z-10 text-center px-4 max-w-4xl mx-auto\">\n        {/* Title */}\n        <motion.div\n          initial={{ y: -50, opacity: 0 }}\n          animate={{ y: 0, opacity: 1 }}\n          transition={{ duration: 1, delay: 0.5 }}\n          className=\"mb-12\"\n        >\n          <motion.h1 \n            className=\"text-6xl md:text-8xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-yellow-200 via-pink-300 to-blue-300 mb-6\"\n            style={{\n              fontFamily: \"'Cinzel', 'Playfair Display', serif\",\n              textShadow: \"0 0 30px rgba(251, 191, 36, 0.5), 0 0 60px rgba(236, 72, 153, 0.3)\",\n              filter: \"drop-shadow(0 0 15px rgba(59, 130, 246, 0.4))\"\n            }}\n            animate={{\n              textShadow: [\n                \"0 0 30px rgba(251, 191, 36, 0.5), 0 0 60px rgba(236, 72, 153, 0.3)\",\n                \"0 0 40px rgba(251, 191, 36, 0.8), 0 0 80px rgba(236, 72, 153, 0.5)\",\n                \"0 0 30px rgba(251, 191, 36, 0.5), 0 0 60px rgba(236, 72, 153, 0.3)\"\n              ]\n            }}\n            transition={{\n              duration: 3,\n              repeat: Infinity,\n              ease: \"easeInOut\"\n            }}\n          >\n            Celestial Horoscope\n          </motion.h1>\n          \n          <motion.p\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ delay: 1, duration: 1 }}\n            className=\"text-3xl md:text-4xl font-semibold mb-8\"\n            style={{\n              background: \"linear-gradient(45deg, #fbbf24, #f59e0b, #fbbf24)\",\n              backgroundSize: \"200% 200%\",\n              WebkitBackgroundClip: \"text\",\n              WebkitTextFillColor: \"transparent\",\n              textShadow: \"0 0 20px rgba(251, 191, 36, 0.5)\",\n              filter: \"drop-shadow(0 0 10px rgba(245, 158, 11, 0.7))\"\n            }}\n          >\n            Discover the magic written in the stars just for you!\n          </motion.p>\n          \n          <motion.div\n            initial={{ scaleX: 0 }}\n            animate={{ scaleX: 1 }}\n            transition={{ delay: 1.5, duration: 1 }}\n            className=\"w-48 h-1 bg-gradient-to-r from-yellow-400 via-pink-400 to-purple-500 mx-auto rounded-full\"\n          />\n        </motion.div>\n\n        {/* Start Magic Button */}\n        <motion.div\n          initial={{ scale: 0 }}\n          animate={{ scale: 1 }}\n          transition={{ delay: 2, duration: 0.8, type: \"spring\", bounce: 0.4 }}\n          className=\"mb-8\"\n        >\n          <Button\n            onClick={onStartMagic}\n            className=\"group relative px-12 py-6 text-xl md:text-2xl font-bold bg-gradient-to-r from-purple-600 via-pink-600 to-blue-600 hover:from-purple-700 hover:via-pink-700 hover:to-blue-700 text-white rounded-full border-4 border-yellow-300/50 hover:border-yellow-300 transition-all duration-300 transform hover:scale-110\"\n            style={{\n              boxShadow: \"0 0 30px rgba(139, 92, 246, 0.5), inset 0 0 30px rgba(255, 255, 255, 0.1)\"\n            }}\n          >\n            <motion.div\n              className=\"flex items-center space-x-3\"\n              whileHover={{ scale: 1.05 }}\n              whileTap={{ scale: 0.95 }}\n            >\n              <span className=\"text-3xl animate-pulse\">⭐</span>\n              <span>Start the Magic</span>\n              <span className=\"text-3xl animate-pulse\">⭐</span>\n            </motion.div>\n            \n            {/* Button Glow Effect */}\n            <motion.div\n              className=\"absolute inset-0 rounded-full bg-gradient-to-r from-yellow-400/20 to-pink-400/20\"\n              animate={{\n                scale: [1, 1.2, 1],\n                opacity: [0.5, 0.8, 0.5]\n              }}\n              transition={{\n                duration: 2,\n                repeat: Infinity,\n                ease: \"easeInOut\"\n              }}\n            />\n          </Button>\n        </motion.div>\n\n        {/* Creator Credit */}\n        <motion.div\n          initial={{ y: 50, opacity: 0 }}\n          animate={{ y: 0, opacity: 1 }}\n          transition={{ delay: 2.5, duration: 1 }}\n          className=\"text-center\"\n        >\n          <motion.p \n            className=\"text-lg text-transparent bg-clip-text bg-gradient-to-r from-yellow-300 via-pink-300 to-purple-300 font-medium\"\n            animate={{\n              backgroundPosition: [\"0% 50%\", \"100% 50%\", \"0% 50%\"],\n            }}\n            transition={{\n              duration: 3,\n              repeat: Infinity,\n              ease: \"easeInOut\"\n            }}\n            style={{\n              fontFamily: \"'Dancing Script', cursive, sans-serif\",\n              backgroundSize: \"200% 200%\",\n              textShadow: \"0 0 15px rgba(251, 191, 36, 0.4)\",\n              filter: \"drop-shadow(0 0 8px rgba(236, 72, 153, 0.4))\"\n            }}\n          >\n            Created by Souhail & Maria\n          </motion.p>\n        </motion.div>\n\n        {/* Floating Magic Particles */}\n        <div className=\"absolute inset-0 pointer-events-none\">\n          {Array.from({ length: 20 }).map((_, i) => (\n            <motion.div\n              key={`particle-${i}`}\n              className=\"absolute w-2 h-2 bg-yellow-300 rounded-full opacity-60\"\n              initial={{\n                x: Math.random() * 800,\n                y: window.innerHeight,\n                scale: 0\n              }}\n              animate={{\n                y: -100,\n                scale: [0, 1, 0],\n                opacity: [0, 0.8, 0],\n                rotate: [0, 360]\n              }}\n              transition={{\n                duration: 6 + Math.random() * 4,\n                repeat: Infinity,\n                delay: Math.random() * 8,\n                ease: \"easeOut\"\n              }}\n              style={{\n                filter: \"drop-shadow(0 0 5px rgba(251, 191, 36, 0.8))\"\n              }}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MagicalLanding;","size_bytes":15752},"client/src/components/ZodiacWheel.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { zodiacSigns, ZodiacSign } from \"../lib/zodiacData\";\n\ninterface ZodiacWheelProps {\n  onSignSelect: (sign: ZodiacSign) => void;\n}\n\nconst ZodiacWheel: React.FC<ZodiacWheelProps> = ({ onSignSelect }) => {\n  return (\n    <div className=\"relative w-full max-w-2xl mx-auto\">\n      {/* Outer Ring */}\n      <motion.div\n        initial={{ rotate: 0 }}\n        animate={{ rotate: 360 }}\n        transition={{ duration: 100, repeat: Infinity, ease: \"linear\" }}\n        className=\"absolute inset-0 rounded-full border border-purple-300/30\"\n        style={{ \n          background: \"conic-gradient(from 0deg, transparent, rgba(139, 92, 246, 0.1), transparent)\" \n        }}\n      />\n      \n      {/* Inner Ring */}\n      <motion.div\n        initial={{ rotate: 0 }}\n        animate={{ rotate: -360 }}\n        transition={{ duration: 80, repeat: Infinity, ease: \"linear\" }}\n        className=\"absolute inset-4 rounded-full border border-yellow-300/20\"\n        style={{ \n          background: \"conic-gradient(from 180deg, transparent, rgba(251, 191, 36, 0.1), transparent)\" \n        }}\n      />\n\n      {/* Zodiac Signs */}\n      <div className=\"relative w-full aspect-square\">\n        {zodiacSigns.map((sign, index) => {\n          const angle = (index * 30) - 90; // 30 degrees apart, starting from top\n          const radius = 45; // Percentage of container\n          \n          const x = Math.cos((angle * Math.PI) / 180) * radius;\n          const y = Math.sin((angle * Math.PI) / 180) * radius;\n          \n          return (\n            <motion.button\n              key={sign.name}\n              className=\"absolute w-20 h-20 md:w-24 md:h-24 transform -translate-x-1/2 -translate-y-1/2 \n                         bg-gradient-to-br from-pink-900/80 to-blue-900/80 \n                         rounded-full border-2 border-pink-300/30 \n                         flex flex-col items-center justify-center\n                         hover:border-yellow-300/60 hover:shadow-lg hover:shadow-pink-500/20\n                         transition-all duration-300 group hover:scale-110\"\n              style={{\n                left: `${50 + x}%`,\n                top: `${50 + y}%`,\n              }}\n              initial={{ scale: 0, opacity: 0 }}\n              animate={{ scale: 1, opacity: 1 }}\n              transition={{ delay: index * 0.1, duration: 0.5 }}\n              whileHover={{ scale: 1.1 }}\n              whileTap={{ scale: 0.95 }}\n              onClick={() => onSignSelect(sign)}\n            >\n              <div className=\"text-2xl md:text-3xl mb-1 group-hover:scale-110 transition-transform\">\n                {sign.symbol}\n              </div>\n              <div className=\"text-xs md:text-sm text-purple-200 font-medium text-center\">\n                {sign.name}\n              </div>\n              <div className=\"text-xs text-purple-300/70\">\n                {sign.dates}\n              </div>\n            </motion.button>\n          );\n        })}\n        \n        {/* Center Decoration */}\n        <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 \n                        w-24 h-24 bg-gradient-to-br from-yellow-400/20 to-purple-500/20 \n                        rounded-full border-2 border-yellow-300/40 flex items-center justify-center\">\n          <motion.div\n            animate={{ rotate: 360 }}\n            transition={{ duration: 20, repeat: Infinity, ease: \"linear\" }}\n            className=\"text-4xl\"\n          >\n            ✨\n          </motion.div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ZodiacWheel;\n","size_bytes":3601},"client/src/hooks/use-is-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/lib/astroCalculations.ts":{"content":"import { ZodiacSign, zodiacSigns } from \"./zodiacData\";\n\nexport interface AstrologicalProfile {\n  sunSign: ZodiacSign;\n  moonSign: ZodiacSign;\n  risingSign: ZodiacSign;\n  moonPhase: MoonPhase;\n  currentMoonSign: ZodiacSign;\n}\n\nexport interface MoonPhase {\n  name: string;\n  phase: number; // 0-1, where 0 is new moon, 0.5 is full moon\n  emoji: string;\n  energy: string;\n  description: string;\n}\n\n// Simple ephemeris data for moon sign calculation (simplified for demo)\n// In a real app, you'd use a proper astronomy library like Swiss Ephemeris\nconst moonSignData: Record<string, number> = {\n  \"2024-01-01\": 0,  // Aries = 0, Taurus = 1, etc.\n  \"2024-01-15\": 2,\n  \"2024-02-01\": 4,\n  \"2024-02-15\": 6,\n  \"2024-03-01\": 8,\n  \"2024-03-15\": 10,\n  \"2024-04-01\": 0,\n  \"2024-04-15\": 2,\n  \"2024-05-01\": 4,\n  \"2024-05-15\": 6,\n  \"2024-06-01\": 8,\n  \"2024-06-15\": 10,\n  \"2024-07-01\": 0,\n  \"2024-07-15\": 2,\n  \"2024-08-01\": 4,\n  \"2024-08-15\": 6,\n  \"2024-09-01\": 8,\n  \"2024-09-15\": 10,\n  \"2024-10-01\": 0,\n  \"2024-10-15\": 2,\n  \"2024-11-01\": 4,\n  \"2024-11-15\": 6,\n  \"2024-12-01\": 8,\n  \"2024-12-15\": 10,\n};\n\nexport function getSunSign(birthDate: string): ZodiacSign {\n  const date = new Date(birthDate);\n  const month = date.getMonth() + 1; // 1-12\n  const day = date.getDate();\n  \n  // Determine zodiac sign based on birth date\n  if ((month === 3 && day >= 21) || (month === 4 && day <= 19)) return zodiacSigns.find(s => s.name === \"Aries\")!;\n  if ((month === 4 && day >= 20) || (month === 5 && day <= 20)) return zodiacSigns.find(s => s.name === \"Taurus\")!;\n  if ((month === 5 && day >= 21) || (month === 6 && day <= 20)) return zodiacSigns.find(s => s.name === \"Gemini\")!;\n  if ((month === 6 && day >= 21) || (month === 7 && day <= 22)) return zodiacSigns.find(s => s.name === \"Cancer\")!;\n  if ((month === 7 && day >= 23) || (month === 8 && day <= 22)) return zodiacSigns.find(s => s.name === \"Leo\")!;\n  if ((month === 8 && day >= 23) || (month === 9 && day <= 22)) return zodiacSigns.find(s => s.name === \"Virgo\")!;\n  if ((month === 9 && day >= 23) || (month === 10 && day <= 22)) return zodiacSigns.find(s => s.name === \"Libra\")!;\n  if ((month === 10 && day >= 23) || (month === 11 && day <= 21)) return zodiacSigns.find(s => s.name === \"Scorpio\")!;\n  if ((month === 11 && day >= 22) || (month === 12 && day <= 21)) return zodiacSigns.find(s => s.name === \"Sagittarius\")!;\n  if ((month === 12 && day >= 22) || (month === 1 && day <= 19)) return zodiacSigns.find(s => s.name === \"Capricorn\")!;\n  if ((month === 1 && day >= 20) || (month === 2 && day <= 18)) return zodiacSigns.find(s => s.name === \"Aquarius\")!;\n  return zodiacSigns.find(s => s.name === \"Pisces\")!;\n}\n\nexport function getMoonSign(birthDate: string): ZodiacSign {\n  // Simplified moon sign calculation\n  // In reality, this requires complex astronomical calculations\n  const hash = birthDate.split('-').reduce((acc, part) => acc + parseInt(part), 0);\n  const signIndex = hash % 12;\n  return zodiacSigns[signIndex];\n}\n\nexport function getRisingSign(birthDate: string, birthTime: string): ZodiacSign {\n  // Simplified rising sign calculation\n  // Rising sign changes every 2 hours approximately\n  const [hours, minutes] = birthTime.split(':').map(Number);\n  const totalMinutes = hours * 60 + minutes;\n  \n  // Each sign gets about 120 minutes (2 hours)\n  const signIndex = Math.floor(totalMinutes / 120) % 12;\n  return zodiacSigns[signIndex];\n}\n\nexport function getCurrentMoonPhase(): MoonPhase {\n  const now = new Date();\n  const knownNewMoon = new Date('2024-01-11'); // Known new moon date\n  const lunarCycle = 29.53059; // days\n  \n  const daysSinceNewMoon = (now.getTime() - knownNewMoon.getTime()) / (1000 * 60 * 60 * 24);\n  const phase = (daysSinceNewMoon % lunarCycle) / lunarCycle;\n  \n  if (phase < 0.0625 || phase > 0.9375) {\n    return {\n      name: \"New Moon\",\n      phase,\n      emoji: \"🌑\",\n      energy: \"New Beginnings\",\n      description: \"Perfect time to start new adventures and make wishes!\"\n    };\n  } else if (phase < 0.1875) {\n    return {\n      name: \"Waxing Crescent\",\n      phase,\n      emoji: \"🌒\",\n      energy: \"Growing Dreams\",\n      description: \"Your ideas are growing stronger every day!\"\n    };\n  } else if (phase < 0.3125) {\n    return {\n      name: \"First Quarter\",\n      phase,\n      emoji: \"🌓\",\n      energy: \"Taking Action\",\n      description: \"Time to work hard and push through challenges!\"\n    };\n  } else if (phase < 0.4375) {\n    return {\n      name: \"Waxing Gibbous\",\n      phase,\n      emoji: \"🌔\",\n      energy: \"Almost There\",\n      description: \"Keep going! You're so close to reaching your goals!\"\n    };\n  } else if (phase < 0.5625) {\n    return {\n      name: \"Full Moon\",\n      phase,\n      emoji: \"🌕\",\n      energy: \"Big Feelings\",\n      description: \"Emotions are extra strong today - feel all your feelings!\"\n    };\n  } else if (phase < 0.6875) {\n    return {\n      name: \"Waning Gibbous\",\n      phase,\n      emoji: \"🌖\",\n      energy: \"Sharing Wisdom\",\n      description: \"Time to share what you've learned with friends!\"\n    };\n  } else if (phase < 0.8125) {\n    return {\n      name: \"Last Quarter\",\n      phase,\n      emoji: \"🌗\",\n      energy: \"Letting Go\",\n      description: \"Release old worries and make room for new happiness!\"\n    };\n  } else {\n    return {\n      name: \"Waning Crescent\",\n      phase,\n      emoji: \"🌘\",\n      energy: \"Rest and Reflect\",\n      description: \"Take time to rest and think about all the good things in your life!\"\n    };\n  }\n}\n\nexport function getCurrentMoonSign(): ZodiacSign {\n  // Simplified current moon sign calculation\n  const now = new Date();\n  const dayOfYear = Math.floor((now.getTime() - new Date(now.getFullYear(), 0, 0).getTime()) / (1000 * 60 * 60 * 24));\n  const signIndex = Math.floor(dayOfYear / 30.44) % 12; // Approximate 30.44 days per sign\n  return zodiacSigns[signIndex];\n}\n\nexport function calculateAstrologicalProfile(\n  birthDate: string,\n  birthTime: string,\n  location: string\n): AstrologicalProfile {\n  return {\n    sunSign: getSunSign(birthDate),\n    moonSign: getMoonSign(birthDate),\n    risingSign: getRisingSign(birthDate, birthTime),\n    moonPhase: getCurrentMoonPhase(),\n    currentMoonSign: getCurrentMoonSign()\n  };\n}\n\n// Moon phase themes for horoscope generation\nexport const moonPhaseThemes = {\n  \"New Moon\": {\n    energy: \"Fresh starts and new beginnings are calling your name! Like planting a seed in magical soil, today is perfect for starting something amazing.\",\n    action: \"Set a new goal or make a wish - the universe is listening extra carefully right now!\"\n  },\n  \"Waxing Crescent\": {\n    energy: \"Your dreams are growing stronger, like a tiny plant reaching toward the sun. Small steps today lead to big adventures tomorrow!\",\n    action: \"Take one small action toward your biggest dream - every journey starts with a single step!\"\n  },\n  \"First Quarter\": {\n    energy: \"You have extra power to tackle challenges today! Like a superhero facing a big test, you have everything you need to succeed.\",\n    action: \"Don't give up on something difficult - push through and you'll feel so proud of yourself!\"\n  },\n  \"Waxing Gibbous\": {\n    energy: \"You're so close to achieving something amazing! Like climbing almost to the top of a mountain, keep going just a little bit more.\",\n    action: \"Finish something you've been working on - victory is just around the corner!\"\n  },\n  \"Full Moon\": {\n    energy: \"Your feelings are extra bright and strong today, like the moon lighting up the whole night sky. It's okay to feel everything deeply!\",\n    action: \"Express your feelings to someone you trust - your emotions are valuable and worth sharing!\"\n  },\n  \"Waning Gibbous\": {\n    energy: \"You have special wisdom to share with others, like a wise owl who's learned many secrets. Your knowledge can help your friends!\",\n    action: \"Teach someone something new or share a lesson you've learned - you're wiser than you know!\"\n  },\n  \"Last Quarter\": {\n    energy: \"It's time to let go of worries and fears, like releasing balloons into the sky. Make room for new happiness to enter your life!\",\n    action: \"Forgive someone (including yourself) or stop worrying about something that's bothering you!\"\n  },\n  \"Waning Crescent\": {\n    energy: \"Your soul needs rest and quiet time, like a tired butterfly resting on a flower. Take time to think about all the good things in your life.\",\n    action: \"Spend some quiet time alone, reading, drawing, or just thinking about what makes you happy!\"\n  }\n};","size_bytes":8493},"client/src/lib/horoscopeGenerator.ts":{"content":"import { ZodiacSign } from \"./zodiacData\";\nimport { AstrologicalProfile, moonPhaseThemes } from \"./astroCalculations\";\nimport { getRandomTarotCard, TarotCard } from \"./tarotCards\";\n\nexport interface Horoscope {\n  title: string;\n  content: string[];\n  mantra: string;\n  influences: string[];\n  tarotCard?: TarotCard;\n  moonGuidance?: string;\n}\n\nconst emotionalThemes = {\n  \"Aries\": [\n    \"Today you feel as brave as a superhero! Your heart is full of exciting energy, like a bouncing ball that never stops moving.\",\n    \"You're feeling strong and ready for adventure today, like a knight on a magical quest to help your friends.\",\n    \"The moon is sending you special courage powers today, making you feel like you can do anything you set your mind to!\"\n  ],\n  \"Taurus\": [\n    \"You feel calm and happy today, like a cozy bear in a warm cave full of your favorite snacks and toys.\",\n    \"The moon is giving you extra patience today, like when you're building the most amazing tower with blocks.\",\n    \"Today your heart feels like a beautiful garden where all the flowers are blooming just for you!\"\n  ],\n  \"Gemini\": [\n    \"Your brain is buzzing with fun ideas today, like a busy bee flying from flower to flower collecting sweet honey!\",\n    \"Today you might feel happy one minute and excited the next - that's okay! You're like a rainbow with lots of beautiful colors.\",\n    \"Your thoughts are dancing around like butterflies in a magical garden, bringing you lots of creative ideas!\"\n  ],\n  \"Cancer\": [\n    \"Today you're feeling extra caring, like a mama bear protecting her cubs or a superhero looking after everyone!\",\n    \"Your heart is like a lighthouse that helps everyone feel safe and loved, especially your family and friends.\",\n    \"The moon is wrapping you in a cozy blanket of love today, making you feel warm and special inside.\"\n  ],\n  \"Leo\": [\n    \"Today you shine as bright as the sun! Everyone around you feels happy because of your amazing, cheerful energy.\",\n    \"You feel like a king or queen today, wearing an invisible crown that makes you feel confident and special.\",\n    \"Your spirit is soaring high like a beautiful eagle, and you feel proud of all the wonderful things you can do!\"\n  ],\n  \"Virgo\": [\n    \"Today you're like a helpful robot that fixes everything perfectly! You love making things neat and helping others.\",\n    \"The moon is helping you see things clearly, like when you clean your glasses and everything looks super sharp!\",\n    \"Your heart is like a magical garden where you plant seeds of kindness that grow into beautiful friendships.\"\n  ],\n  \"Libra\": [\n    \"Today you're like a peace-making superhero who helps everyone get along and feel happy together!\",\n    \"The moon is helping you balance everything perfectly, like when you ride a bike without wobbling.\",\n    \"You move through today like a graceful dancer, making everything around you feel beautiful and fair.\"\n  ],\n  \"Scorpio\": [\n    \"Today you're like a detective with super powers, able to figure out mysteries and understand things deeply!\",\n    \"The moon is helping you transform and grow, like a caterpillar becoming a beautiful butterfly.\",\n    \"Your special intuition is working extra strong today, like having magical powers that help you know things!\"\n  ],\n  \"Sagittarius\": [\n    \"Today you feel like an explorer ready for the biggest adventure ever! Your heart is excited to discover new things.\",\n    \"The moon is lighting up your path like a magical flashlight, helping you find amazing new adventures!\",\n    \"Your happy thoughts are flying high like a superhero, bringing you lots of dreams and exciting possibilities!\"\n  ],\n  \"Capricorn\": [\n    \"Today you feel strong and steady like a mountain that can handle anything! You're really good at reaching your goals.\",\n    \"The moon is shining on your path like a magical star, showing you the smart way to do things.\",\n    \"Your heart is building amazing castles out of your dreams, one magical block at a time!\"\n  ],\n  \"Aquarius\": [\n    \"Today you're buzzing with creative energy like a friendly robot full of amazing ideas to help everyone!\",\n    \"The moon is showing off your special uniqueness, like colorful northern lights dancing in the sky just for you!\",\n    \"Your heart is creating the most fantastic ideas for the future, like an inventor building tomorrow's coolest inventions!\"\n  ],\n  \"Pisces\": [\n    \"Today you're swimming in an ocean of imagination, collecting starlight and moon magic in your kind heart!\",\n    \"The moon is blending your dreams with reality like the most beautiful painting with all your favorite colors.\",\n    \"Your magical intuition is flowing like a gentle river, bringing you special messages and wonderful feelings!\"\n  ]\n};\n\nconst relationshipThemes = {\n  \"Aries\": [\n    \"Today you're an amazing friend who makes everyone feel excited and happy, like the first day of summer vacation!\",\n    \"You bring lots of energy to your friendships, like a puppy who's always ready to play and have fun with everyone.\",\n    \"You're brave when making new friends, always ready to say hi and include others in your games and adventures!\"\n  ],\n  \"Taurus\": [\n    \"You're the most loyal friend ever, like a faithful dog who never leaves your side and always makes you feel loved!\",\n    \"Your friendships grow stronger every day, like planting seeds that turn into the most beautiful flower garden.\",\n    \"Friends know they can always count on you, like having a cozy blanket that's always there when they need comfort.\"\n  ],\n  \"Gemini\": [\n    \"You're the friend who always has the funniest jokes and the most interesting stories to share with everyone!\",\n    \"You love talking and sharing ideas with friends, like having the best show-and-tell every single day.\",\n    \"You're amazing at making friends laugh and feel special with all your creative stories and fun conversations!\"\n  ],\n  \"Cancer\": [\n    \"You're the caring friend who always makes sure everyone feels included and loved, like a gentle hug in human form!\",\n    \"You create the safest, most comfortable friendships where everyone can be themselves and feel protected.\",\n    \"You remember all the special moments with friends, like keeping a treasure box full of happy memories!\"\n  ],\n  \"Leo\": [\n    \"You're the friend who makes everyone feel like stars! You love giving compliments and making others feel super special.\",\n    \"Your heart is so generous, like the sun that gives warmth and happiness to everyone around you.\",\n    \"You create the most fun friendships that shine bright like a rainbow after a storm!\"\n  ],\n  \"Virgo\": [\n    \"You're the friend who always helps others and remembers exactly what makes each person happy!\",\n    \"You show you care by doing lots of little helpful things, like a fairy godparent spreading kindness everywhere.\",\n    \"Friends love you because you're always there to help fix problems and make everything better!\"\n  ],\n  \"Libra\": [\n    \"You're the peacemaker friend who helps everyone get along and makes sure no one feels left out!\",\n    \"You love creating beautiful, fair friendships where everyone feels equal and valued.\",\n    \"You're amazing at helping friends solve problems and understand each other, like a friendship superhero!\"\n  ],\n  \"Scorpio\": [\n    \"You're the friend who creates the deepest, most loyal friendships that last forever and ever!\",\n    \"Your friendship burns bright like the most amazing fireworks, full of excitement and wonder.\",\n    \"You turn regular friendships into magical connections where you understand each other perfectly!\"\n  ],\n  \"Sagittarius\": [\n    \"You're the adventurous friend who always suggests the coolest games and most exciting explorations!\",\n    \"Your friendships are like amazing adventures where you discover new things and have the best times together.\",\n    \"You love asking big questions with friends and dreaming up the most fantastic possibilities together!\"\n  ],\n  \"Capricorn\": [\n    \"You build the strongest friendships ever, like constructing the most amazing fort that will last forever!\",\n    \"Your friendships get better and better over time, like collecting the most precious treasures year after year.\",\n    \"You help your friends reach their biggest dreams, like a guide helping them climb the highest mountains!\"\n  ],\n  \"Aquarius\": [\n    \"You create the most unique and special friendships that are unlike anyone else's - totally original and amazing!\",\n    \"Your friendships help make the world a better place by bringing people together in new and wonderful ways.\",\n    \"You see the most fantastic possibilities for friendship that other people haven't even thought of yet!\"\n  ],\n  \"Pisces\": [\n    \"You're the most caring friend who can feel what others are feeling and always knows just how to help!\",\n    \"Your friendship flows like a gentle river, bringing comfort and healing dreams to everyone you meet.\",\n    \"You understand your friends in magical ways, even without words, like you can read their hearts!\"\n  ]\n};\n\nconst careerThemes = {\n  \"Aries\": [\n    \"At school today, you're like a superhero student ready to tackle any challenge with courage and excitement!\",\n    \"You're blazing through your activities and homework like a shooting star, doing amazing things everywhere you go.\",\n    \"You're the brave leader in group projects, always ready to try new things and help your team succeed!\"\n  ],\n  \"Taurus\": [\n    \"At school, you're like a steady, strong tree that grows a little bit better every single day through hard work!\",\n    \"You're patient and careful with your work, like an artist creating a masterpiece one beautiful stroke at a time.\",\n    \"Your classmates can always count on you to be reliable and help keep everyone organized and on track!\"\n  ],\n  \"Gemini\": [\n    \"At school, you're amazing at explaining things to classmates and sharing ideas like seeds of knowledge everywhere!\",\n    \"You love trying different subjects and activities, like a colorful butterfly visiting all the most interesting flowers.\",\n    \"You're the best at helping classmates understand each other and work together on cool projects!\"\n  ],\n  \"Cancer\": [\n    \"At school, the moon helps you make smart decisions and understand things with your special intuition!\",\n    \"You create the kindest classroom environment where everyone feels safe, happy, and ready to learn together.\",\n    \"You're like the guardian of friendship, making sure everyone is included and that kindness comes first!\"\n  ],\n  \"Leo\": [\n    \"At school, you shine like a star on stage! Everyone notices your natural leadership and creative talents.\",\n    \"Your creative energy lights up every classroom and activity, inspiring your friends and teachers too!\",\n    \"You're like a director of fun, organizing projects and activities that everyone wants to be part of!\"\n  ],\n  \"Virgo\": [\n    \"At school, you have the sharpest focus, like a detective finding all the important details others might miss!\",\n    \"You're amazing at paying attention to the little things that make big projects work perfectly together.\",\n    \"You're like a master builder who turns rough ideas into polished, perfect finished work through careful attention!\"\n  ],\n  \"Libra\": [\n    \"At school, you bring harmony to group work like a conductor making beautiful music with different instruments!\",\n    \"You love working with others and make everything better through teamwork, like flowers growing stronger together.\",\n    \"You're the peacemaker who finds fair solutions that make everyone happy and excited to work together!\"\n  ],\n  \"Scorpio\": [\n    \"At school, you transform challenges into opportunities like a magician creating something amazing from nothing!\",\n    \"You see things others can't, like a treasure hunter discovering hidden gems beneath the surface.\",\n    \"You're like a detective who solves mysteries and finds answers that help everyone understand better!\"\n  ],\n  \"Sagittarius\": [\n    \"At school, you're expanding your horizons like an astronaut discovering new planets full of amazing possibilities!\",\n    \"You love exploring and learning new things, like a brave captain sailing to discover magical new lands.\",\n    \"You're the adventurer who brings excitement and big questions to every subject and activity!\"\n  ],\n  \"Capricorn\": [\n    \"At school, your hard work is rewarded like climbing a mountain - each step gets you higher toward your goals!\",\n    \"You climb toward success steadily like a skilled mountain climber, carefully planning each step to the top.\",\n    \"You're like an architect building your future, creating structures of learning that will last forever!\"\n  ],\n  \"Aquarius\": [\n    \"At school, your unique ideas light up like lightning, showing everyone new and exciting ways to do things!\",\n    \"You see things differently, like a scientist discovering amazing new things that help everyone understand better.\",\n    \"You're the inventor creating solutions that help not just today, but make the future even more awesome!\"\n  ],\n  \"Pisces\": [\n    \"At school, your creativity flows like magical morning mist that turns dreams into real, amazing projects!\",\n    \"You do your best work when following your heart, like a gentle river flowing naturally toward the ocean.\",\n    \"You're the healer of feelings, bringing kindness and understanding to every classroom and activity!\"\n  ]\n};\n\nconst growthThemes = {\n  \"Aries\": [\n    \"Today you're growing stronger inside, like a superhero learning new powers! You're becoming braver and wiser by facing challenges and learning from them. Remember, every challenge makes you more awesome!\"\n  ],\n  \"Taurus\": [\n    \"You're growing like a beautiful garden, learning to be flexible and try new things while staying true to yourself. Like a strong tree that can dance in the wind but never falls down, you're learning to bend without breaking!\"\n  ],\n  \"Gemini\": [\n    \"Your amazing brain is like a library getting reorganized with all the coolest books! You're learning the difference between just knowing facts and really understanding things. Sometimes it's good to quiet your busy thoughts and listen to your heart's wisdom too!\"\n  ],\n  \"Cancer\": [\n    \"Your feelings are like a magical lake touched by moonlight, full of special understanding and wisdom! Your sensitivity is actually a superpower that helps you understand others. You're learning to protect your energy while still sharing your love with the world!\"\n  ],\n  \"Leo\": [\n    \"You're like a beautiful sculpture being carved by a master artist, revealing the amazing leader inside you! You're learning that the best leaders help others shine too. Your light is brightest when you help your friends see how awesome they are!\"\n  ],\n  \"Virgo\": [\n    \"You're learning to be gentler with yourself and others, like morning dew softening sharp edges. It's okay if things aren't perfect - sometimes the most beautiful things are the ones that are still growing and learning, just like you!\"\n  ],\n  \"Libra\": [\n    \"Sometimes things get shaken up to show you new possibilities, like rearranging your room to make it even better! You're learning to find balance and peace inside yourself first, then you can share that peace with everyone around you!\"\n  ],\n  \"Scorpio\": [\n    \"Your powerful abilities are being touched by gentle compassion, like soft light making shadows less scary. You're learning that being open and vulnerable actually makes you stronger, and the biggest mysteries reveal themselves to those with open hearts!\"\n  ],\n  \"Sagittarius\": [\n    \"Like a wise teacher asking amazing questions, you're discovering deeper truths about yourself and the world! The biggest adventures happen inside your heart and mind. Real wisdom comes from asking great questions, not just knowing all the answers!\"\n  ],\n  \"Capricorn\": [\n    \"Like gentle water slowly reshaping stone, you're learning to be more flexible and flowing. Some of the most beautiful things in life can't be built or earned - they're gifts that come when you open your heart to receive them!\"\n  ],\n  \"Aquarius\": [\n    \"Your ideas about helping others are transforming like lightning that changes everything it touches! Real change starts inside you first. The world becomes better when you become the amazing future you dream about!\"\n  ],\n  \"Pisces\": [\n    \"Your magical, dreamy nature is getting grounded like an anchor helping a ship stay steady in any weather. You're learning to take your beautiful dreams and make them real in the world, like building a bridge between your imagination and reality!\"\n  ]\n};\n\nconst mantras = {\n  \"Aries\": [\n    \"I am brave and strong like a superhero!\",\n    \"I have courage that shines like the brightest stars\",\n    \"Every challenge helps me grow bigger and stronger\",\n    \"I use my brave heart to help others\"\n  ],\n  \"Taurus\": [\n    \"I am loved and have everything I need\",\n    \"Good things come to those who wait patiently\",\n    \"I listen to my heart because it knows what's right\",\n    \"I see and create beauty everywhere I go\"\n  ],\n  \"Gemini\": [\n    \"I speak clearly and connect with everyone\",\n    \"My mind is like a magical bridge full of ideas\",\n    \"Being curious opens doors to amazing possibilities\",\n    \"I share my truth with words that fly like butterflies\"\n  ],\n  \"Cancer\": [\n    \"I am safe and loved by the whole universe\",\n    \"My feelings help guide me like a magical compass\",\n    \"I take care of others and let them take care of me\",\n    \"The moon's love flows through my caring heart\"\n  ],\n  \"Leo\": [\n    \"I shine my light to help everyone feel happy\",\n    \"My heart is like the sun that always shines\",\n    \"I lead with love and make others smile\",\n    \"I wear my confidence like a beautiful crown\"\n  ],\n  \"Virgo\": [\n    \"I help the world by doing my best, even if it's not perfect\",\n    \"I notice small details that create big magic\",\n    \"My hands heal and help with lots of love\",\n    \"I can organize chaos and make everything better\"\n  ],\n  \"Libra\": [\n    \"I bring harmony and balance to everything around me\",\n    \"Beauty flows through me like the most wonderful music\",\n    \"I create peace wherever I go\",\n    \"I understand fairness and kindness go hand in hand\"\n  ],\n  \"Scorpio\": [\n    \"I turn scary things into beautiful things with brave love\",\n    \"My heart contains oceans full of hidden treasures\",\n    \"I trust that endings lead to new beginnings\",\n    \"I can see the truth that others might miss\"\n  ],\n  \"Sagittarius\": [\n    \"I am like an arrow flying toward truth and wisdom\",\n    \"Adventure calls and I answer with excitement\",\n    \"My spirit can soar higher than any mountain\",\n    \"I am free to explore with wisdom as my guide\"\n  ],\n  \"Capricorn\": [\n    \"I climb mountains of possibility step by step\",\n    \"Time helps me build amazing things that last\",\n    \"I turn my dreams into real achievements\",\n    \"I lead others with kindness and responsibility\"\n  ],\n  \"Aquarius\": [\n    \"I help create the amazing future I dream about\",\n    \"Creative ideas flow through me like magical electricity\",\n    \"My uniqueness helps make the world better\",\n    \"I become the positive changes I want to see\"\n  ],\n  \"Pisces\": [\n    \"I swim in oceans of endless love and kindness\",\n    \"My dreams are doorways to magical possibilities\",\n    \"I trust the flow of life's magical currents\",\n    \"Love helps me understand and connect with everyone\"\n  ]\n};\n\nconst influences = {\n  \"Aries\": [\"Brave Heart\", \"Moon Magic\", \"Sun Power\"],\n  \"Taurus\": [\"Love Energy\", \"Earth Strength\", \"Moon Hugs\"],\n  \"Gemini\": [\"Chatty Magic\", \"Wind Whispers\", \"Twin Powers\"],\n  \"Cancer\": [\"Moon Love\", \"Ocean Feelings\", \"Caring Magic\"],\n  \"Leo\": [\"Sun Shine\", \"Fire Spirit\", \"Heart Magic\"],\n  \"Virgo\": [\"Helper Magic\", \"Earth Wisdom\", \"Healing Hands\"],\n  \"Libra\": [\"Peace Magic\", \"Balance Powers\", \"Fair Play\"],\n  \"Scorpio\": [\"Change Magic\", \"Deep Feelings\", \"Phoenix Fire\"],\n  \"Sagittarius\": [\"Adventure Magic\", \"Explorer Spirit\", \"Big Dreams\"],\n  \"Capricorn\": [\"Builder Magic\", \"Mountain Strength\", \"Goal Power\"],\n  \"Aquarius\": [\"Future Magic\", \"Freedom Wings\", \"Creative Sparks\"],\n  \"Pisces\": [\"Dream Magic\", \"Ocean Love\", \"Gentle Flow\"]\n};\n\nfunction getRandomElement<T>(array: T[]): T {\n  return array[Math.floor(Math.random() * array.length)];\n}\n\nexport function generateHoroscope(sign: ZodiacSign): Horoscope {\n  const today = new Date().toLocaleDateString('en-US', { \n    weekday: 'long',\n    year: 'numeric', \n    month: 'long', \n    day: 'numeric' \n  });\n  \n  const title = `${sign.symbol} ${sign.name} – Daily Horoscope for ${today}`;\n  \n  const content = [\n    getRandomElement(emotionalThemes[sign.name as keyof typeof emotionalThemes]),\n    getRandomElement(relationshipThemes[sign.name as keyof typeof relationshipThemes]),\n    getRandomElement(careerThemes[sign.name as keyof typeof careerThemes]),\n    getRandomElement(growthThemes[sign.name as keyof typeof growthThemes])\n  ];\n  \n  const mantra = getRandomElement(mantras[sign.name as keyof typeof mantras]);\n  const signInfluences = influences[sign.name as keyof typeof influences];\n  \n  return {\n    title,\n    content,\n    mantra,\n    influences: signInfluences\n  };\n}\n\n// Enhanced moon phase guidance\nconst moonPhaseGuidance = {\n  \"New Moon\": \"This is a time for setting intentions and planting seeds for the future. Your emotional energy is perfect for new beginnings and fresh starts. Trust your inner wisdom and embrace the blank canvas that lies before you.\",\n  \"Waxing Crescent\": \"Your emotions are building momentum like a gentle wave. This is the perfect time to take small, consistent actions toward your dreams. Your patience and persistence will be rewarded.\",\n  \"First Quarter\": \"You may feel some emotional tension as you push through challenges. This is normal - you're breaking through barriers to reach the next level. Stay strong and trust your ability to overcome obstacles.\",\n  \"Waxing Gibbous\": \"Your emotional energy is almost at its peak. Fine-tune your approach and prepare for the culmination of your efforts. You're so close to your breakthrough - keep going!\",\n  \"Full Moon\": \"Your emotions are at their most powerful and intense. This is a time of completion, celebration, and emotional release. Honor your feelings and let go of what no longer serves you.\",\n  \"Waning Gibbous\": \"Your emotional energy is shifting toward gratitude and sharing your wisdom. This is a time to reflect on your growth and help others with what you've learned.\",\n  \"Last Quarter\": \"Release what's holding you back emotionally. This is a time for forgiveness, letting go, and making space for new opportunities. Trust that endings lead to beautiful beginnings.\",\n  \"Waning Crescent\": \"Your emotional energy is quiet and reflective. Rest, recharge, and connect with your inner wisdom. This peaceful time is preparing you for your next cycle of growth.\"\n};\n\nexport function generatePersonalizedHoroscope(profile: AstrologicalProfile): Horoscope {\n  const today = new Date().toLocaleDateString('en-US', { \n    weekday: 'long',\n    year: 'numeric', \n    month: 'long', \n    day: 'numeric' \n  });\n  \n  const title = `Your Personal Star Reading for ${today}`;\n  \n  // Combine influences from Sun, Moon, and Rising signs\n  const sunTheme = getRandomElement(emotionalThemes[profile.sunSign.name as keyof typeof emotionalThemes]);\n  const moonTheme = getRandomElement(relationshipThemes[profile.moonSign.name as keyof typeof relationshipThemes]);\n  const risingTheme = getRandomElement(careerThemes[profile.risingSign.name as keyof typeof careerThemes]);\n  const growthTheme = getRandomElement(growthThemes[profile.sunSign.name as keyof typeof growthThemes]);\n  \n  // Add moon phase influence\n  const moonPhaseTheme = moonPhaseThemes[profile.moonPhase.name as keyof typeof moonPhaseThemes];\n  \n  // Get a random tarot card for emotional/mental guidance\n  const tarotCard = getRandomTarotCard();\n  \n  // Get enhanced moon guidance\n  const moonGuidance = moonPhaseGuidance[profile.moonPhase.name as keyof typeof moonPhaseGuidance] || moonPhaseGuidance[\"New Moon\"];\n  \n  const content = [\n    `✨ **Your ${profile.sunSign.name} Sun Energy**: ${sunTheme}`,\n    `🌙 **Your ${profile.moonSign.name} Moon Feelings**: ${moonTheme}`,\n    `🌅 **Your ${profile.risingSign.name} Rising Power**: ${risingTheme}`,\n    `${profile.moonPhase.emoji} **${profile.moonPhase.name} Magic**: ${moonPhaseTheme.energy}`,\n    `💫 **Your Growth Journey**: ${growthTheme}`,\n    `🎯 **Moon Phase Action**: ${moonPhaseTheme.action}`,\n    `🔮 **Tarot Card Guidance**: The ${tarotCard.name} brings you this message: ${tarotCard.emotionalGuidance}`,\n    `🌙 **Moon Phase Emotional Guide**: ${moonGuidance}`,\n    `💪 **Mental Strength**: ${tarotCard.mentalEncouragement}`\n  ];\n  \n  // Combine mantras from different signs\n  const sunMantra = getRandomElement(mantras[profile.sunSign.name as keyof typeof mantras]);\n  const moonMantra = getRandomElement(mantras[profile.moonSign.name as keyof typeof mantras]);\n  const combinedMantra = `${sunMantra} Your ${profile.moonSign.name} moon adds: ${moonMantra.toLowerCase()}`;\n  \n  // Combine influences\n  const allInfluences = [\n    ...influences[profile.sunSign.name as keyof typeof influences],\n    ...influences[profile.moonSign.name as keyof typeof influences].slice(0, 1),\n    ...influences[profile.risingSign.name as keyof typeof influences].slice(0, 1),\n    profile.moonPhase.energy\n  ];\n  \n  return {\n    title,\n    content,\n    mantra: combinedMantra,\n    influences: allInfluences,\n    tarotCard,\n    moonGuidance\n  };\n}\n","size_bytes":25452},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/lib/zodiacData.ts":{"content":"export interface ZodiacSign {\n  name: string;\n  symbol: string;\n  dates: string;\n  element: string;\n  quality: string;\n  ruling_planet: string;\n  traits: string[];\n  childPersonality: string;\n  magicalPowers: string;\n  favoriteColors: string[];\n  luckyNumbers: number[];\n}\n\nexport const zodiacSigns: ZodiacSign[] = [\n  {\n    name: \"Aries\",\n    symbol: \"♈\",\n    dates: \"Mar 21 - Apr 19\",\n    element: \"Fire\",\n    quality: \"Cardinal\",\n    ruling_planet: \"Mars\",\n    traits: [\"Brave\", \"Energetic\", \"Leader\", \"Adventurous\"],\n    childPersonality: \"You're a natural leader who loves adventures and isn't afraid to try new things!\",\n    magicalPowers: \"The power to inspire courage in others and start amazing new adventures\",\n    favoriteColors: [\"Red\", \"Orange\", \"Bright Yellow\"],\n    luckyNumbers: [1, 8, 17]\n  },\n  {\n    name: \"Taurus\",\n    symbol: \"♉\",\n    dates: \"Apr 20 - May 20\",\n    element: \"Earth\",\n    quality: \"Fixed\",\n    ruling_planet: \"Venus\",\n    traits: [\"Loyal\", \"Patient\", \"Artistic\", \"Loving\"],\n    childPersonality: \"You're a loving friend who appreciates beautiful things and enjoys peaceful moments!\",\n    magicalPowers: \"The ability to help things grow and create beauty wherever you go\",\n    favoriteColors: [\"Green\", \"Pink\", \"Earth Brown\"],\n    luckyNumbers: [2, 6, 24]\n  },\n  {\n    name: \"Gemini\",\n    symbol: \"♊\",\n    dates: \"May 21 - Jun 20\",\n    element: \"Air\",\n    quality: \"Mutable\",\n    ruling_planet: \"Mercury\",\n    traits: [\"Curious\", \"Talkative\", \"Smart\", \"Funny\"],\n    childPersonality: \"You're incredibly curious and love learning new things and making people laugh!\",\n    magicalPowers: \"The gift of communication and the ability to understand any language\",\n    favoriteColors: [\"Yellow\", \"Light Blue\", \"Silver\"],\n    luckyNumbers: [5, 14, 23]\n  },\n  {\n    name: \"Cancer\",\n    symbol: \"♋\",\n    dates: \"Jun 21 - Jul 22\",\n    element: \"Water\",\n    quality: \"Cardinal\",\n    ruling_planet: \"Moon\",\n    traits: [\"Caring\", \"Intuitive\", \"Protective\", \"Imaginative\"],\n    childPersonality: \"You have a big heart and amazing intuition that helps you care for others!\",\n    magicalPowers: \"The power to sense emotions and create safe, cozy spaces for everyone\",\n    favoriteColors: [\"Silver\", \"Sea Blue\", \"White\"],\n    luckyNumbers: [2, 7, 11]\n  },\n  {\n    name: \"Leo\",\n    symbol: \"♌\",\n    dates: \"Jul 23 - Aug 22\",\n    element: \"Fire\",\n    quality: \"Fixed\",\n    ruling_planet: \"Sun\",\n    traits: [\"Confident\", \"Creative\", \"Generous\", \"Dramatic\"],\n    childPersonality: \"You shine brightly like the sun and love to perform and make others happy!\",\n    magicalPowers: \"The ability to light up any room and inspire confidence in others\",\n    favoriteColors: [\"Gold\", \"Orange\", \"Bright Yellow\"],\n    luckyNumbers: [1, 3, 10]\n  },\n  {\n    name: \"Virgo\",\n    symbol: \"♍\",\n    dates: \"Aug 23 - Sep 22\",\n    element: \"Earth\",\n    quality: \"Mutable\",\n    ruling_planet: \"Mercury\",\n    traits: [\"Helpful\", \"Organized\", \"Kind\", \"Detail-oriented\"],\n    childPersonality: \"You're incredibly helpful and notice details that others miss!\",\n    magicalPowers: \"The gift of healing and the ability to solve any problem with patience\",\n    favoriteColors: [\"Navy Blue\", \"Grey\", \"Brown\"],\n    luckyNumbers: [6, 15, 20]\n  },\n  {\n    name: \"Libra\",\n    symbol: \"♎\",\n    dates: \"Sep 23 - Oct 22\",\n    element: \"Air\",\n    quality: \"Cardinal\",\n    ruling_planet: \"Venus\",\n    traits: [\"Fair\", \"Social\", \"Peaceful\", \"Artistic\"],\n    childPersonality: \"You're a natural peacemaker who brings harmony and beauty to the world!\",\n    magicalPowers: \"The power to create balance and help everyone get along peacefully\",\n    favoriteColors: [\"Pink\", \"Light Blue\", \"Lavender\"],\n    luckyNumbers: [6, 15, 24]\n  },\n  {\n    name: \"Scorpio\",\n    symbol: \"♏\",\n    dates: \"Oct 23 - Nov 21\",\n    element: \"Water\",\n    quality: \"Fixed\",\n    ruling_planet: \"Pluto\",\n    traits: [\"Mysterious\", \"Loyal\", \"Brave\", \"Intuitive\"],\n    childPersonality: \"You're incredibly loyal and have amazing intuition that helps you understand deep mysteries!\",\n    magicalPowers: \"The ability to see hidden truths and transform anything negative into something positive\",\n    favoriteColors: [\"Deep Red\", \"Black\", \"Maroon\"],\n    luckyNumbers: [4, 13, 27]\n  },\n  {\n    name: \"Sagittarius\",\n    symbol: \"♐\",\n    dates: \"Nov 22 - Dec 21\",\n    element: \"Fire\",\n    quality: \"Mutable\",\n    ruling_planet: \"Jupiter\",\n    traits: [\"Adventurous\", \"Honest\", \"Optimistic\", \"Funny\"],\n    childPersonality: \"You're an eternal optimist who loves adventures and making people laugh!\",\n    magicalPowers: \"The gift of bringing joy and the ability to find adventure anywhere\",\n    favoriteColors: [\"Purple\", \"Turquoise\", \"Orange\"],\n    luckyNumbers: [3, 9, 21]\n  },\n  {\n    name: \"Capricorn\",\n    symbol: \"♑\",\n    dates: \"Dec 22 - Jan 19\",\n    element: \"Earth\",\n    quality: \"Cardinal\",\n    ruling_planet: \"Saturn\",\n    traits: [\"Responsible\", \"Patient\", \"Ambitious\", \"Wise\"],\n    childPersonality: \"You're wise beyond your years and have the patience to achieve amazing things!\",\n    magicalPowers: \"The power of persistence and the ability to climb any mountain of challenges\",\n    favoriteColors: [\"Dark Green\", \"Brown\", \"Grey\"],\n    luckyNumbers: [8, 10, 26]\n  },\n  {\n    name: \"Aquarius\",\n    symbol: \"♒\",\n    dates: \"Jan 20 - Feb 18\",\n    element: \"Air\",\n    quality: \"Fixed\",\n    ruling_planet: \"Uranus\",\n    traits: [\"Unique\", \"Friendly\", \"Independent\", \"Inventive\"],\n    childPersonality: \"You're wonderfully unique and have amazing ideas that can change the world!\",\n    magicalPowers: \"The gift of innovation and the ability to see the future possibilities\",\n    favoriteColors: [\"Electric Blue\", \"Silver\", \"Turquoise\"],\n    luckyNumbers: [4, 7, 11]\n  },\n  {\n    name: \"Pisces\",\n    symbol: \"♓\",\n    dates: \"Feb 19 - Mar 20\",\n    element: \"Water\",\n    quality: \"Mutable\",\n    ruling_planet: \"Neptune\",\n    traits: [\"Imaginative\", \"Compassionate\", \"Artistic\", \"Intuitive\"],\n    childPersonality: \"You have an amazing imagination and the biggest, most compassionate heart!\",\n    magicalPowers: \"The ability to dream amazing dreams and understand the feelings of all living things\",\n    favoriteColors: [\"Sea Green\", \"Lavender\", \"Silver\"],\n    luckyNumbers: [7, 12, 29]\n  }\n];\n\nexport function getZodiacSign(birthDate: string): ZodiacSign {\n  const date = new Date(birthDate);\n  const month = date.getMonth() + 1; // JavaScript months are 0-indexed\n  const day = date.getDate();\n  \n  // Determine zodiac sign based on birth date\n  if ((month === 3 && day >= 21) || (month === 4 && day <= 19)) return zodiacSigns[0]; // Aries\n  if ((month === 4 && day >= 20) || (month === 5 && day <= 20)) return zodiacSigns[1]; // Taurus\n  if ((month === 5 && day >= 21) || (month === 6 && day <= 20)) return zodiacSigns[2]; // Gemini\n  if ((month === 6 && day >= 21) || (month === 7 && day <= 22)) return zodiacSigns[3]; // Cancer\n  if ((month === 7 && day >= 23) || (month === 8 && day <= 22)) return zodiacSigns[4]; // Leo\n  if ((month === 8 && day >= 23) || (month === 9 && day <= 22)) return zodiacSigns[5]; // Virgo\n  if ((month === 9 && day >= 23) || (month === 10 && day <= 22)) return zodiacSigns[6]; // Libra\n  if ((month === 10 && day >= 23) || (month === 11 && day <= 21)) return zodiacSigns[7]; // Scorpio\n  if ((month === 11 && day >= 22) || (month === 12 && day <= 21)) return zodiacSigns[8]; // Sagittarius\n  if ((month === 12 && day >= 22) || (month === 1 && day <= 19)) return zodiacSigns[9]; // Capricorn\n  if ((month === 1 && day >= 20) || (month === 2 && day <= 18)) return zodiacSigns[10]; // Aquarius\n  return zodiacSigns[11]; // Pisces\n}\n\nexport function getZodiacSignByName(name: string): ZodiacSign | undefined {\n  return zodiacSigns.find(sign => sign.name.toLowerCase() === name.toLowerCase());\n}\n","size_bytes":7792},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/styles/astrology.css":{"content":"/* Custom animations for celestial effects */\n@keyframes float {\n  0%, 100% { transform: translateY(0px); }\n  50% { transform: translateY(-20px); }\n}\n\n@keyframes twinkle {\n  0%, 100% { opacity: 1; }\n  50% { opacity: 0.3; }\n}\n\n@keyframes rotate-slow {\n  from { transform: rotate(0deg); }\n  to { transform: rotate(360deg); }\n}\n\n@keyframes cosmic-pulse {\n  0%, 100% { \n    box-shadow: 0 0 20px rgba(139, 92, 246, 0.3);\n    transform: scale(1);\n  }\n  50% { \n    box-shadow: 0 0 40px rgba(139, 92, 246, 0.6);\n    transform: scale(1.05);\n  }\n}\n\n/* Celestial background effects */\n.celestial-bg {\n  background: radial-gradient(ellipse at center, rgba(139, 92, 246, 0.1) 0%, transparent 70%);\n}\n\n.star-field {\n  background-image: \n    radial-gradient(2px 2px at 20px 30px, #ffffff, transparent),\n    radial-gradient(2px 2px at 40px 70px, rgba(255, 255, 255, 0.8), transparent),\n    radial-gradient(1px 1px at 90px 40px, #ffffff, transparent),\n    radial-gradient(1px 1px at 130px 80px, rgba(255, 255, 255, 0.6), transparent),\n    radial-gradient(2px 2px at 160px 30px, #ffffff, transparent);\n  background-repeat: repeat;\n  background-size: 200px 100px;\n  animation: twinkle 4s ease-in-out infinite alternate;\n}\n\n/* Zodiac wheel specific styles */\n.zodiac-wheel {\n  animation: rotate-slow 120s linear infinite;\n}\n\n.zodiac-sign-button {\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n  backdrop-filter: blur(10px);\n}\n\n.zodiac-sign-button:hover {\n  animation: cosmic-pulse 2s ease-in-out infinite;\n}\n\n/* Mystical text effects */\n.mystical-text {\n  text-shadow: 0 0 10px rgba(139, 92, 246, 0.5);\n}\n\n.golden-text {\n  background: linear-gradient(45deg, #fbbf24, #f59e0b, #d97706);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n}\n\n/* Floating elements */\n.float-animation {\n  animation: float 6s ease-in-out infinite;\n}\n\n.float-animation:nth-child(2n) {\n  animation-delay: -2s;\n}\n\n.float-animation:nth-child(3n) {\n  animation-delay: -4s;\n}\n\n/* Custom scrollbar for horoscope content */\n.horoscope-content::-webkit-scrollbar {\n  width: 8px;\n}\n\n.horoscope-content::-webkit-scrollbar-track {\n  background: rgba(139, 92, 246, 0.1);\n  border-radius: 4px;\n}\n\n.horoscope-content::-webkit-scrollbar-thumb {\n  background: rgba(139, 92, 246, 0.3);\n  border-radius: 4px;\n}\n\n.horoscope-content::-webkit-scrollbar-thumb:hover {\n  background: rgba(139, 92, 246, 0.5);\n}\n\n/* Responsive adjustments */\n@media (max-width: 768px) {\n  .zodiac-sign-button {\n    width: 60px;\n    height: 60px;\n  }\n  \n  .mystical-text {\n    font-size: 2rem;\n  }\n}\n\n/* Gradient borders for cards */\n.cosmic-border {\n  position: relative;\n}\n\n.cosmic-border::before {\n  content: '';\n  position: absolute;\n  inset: -2px;\n  background: linear-gradient(45deg, #8b5cf6, #06b6d4, #10b981, #f59e0b);\n  border-radius: inherit;\n  opacity: 0.7;\n  z-index: -1;\n  animation: rotate-slow 20s linear infinite;\n}\n\n/* Particle effect overlay */\n.particles {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  pointer-events: none;\n}\n\n.particle {\n  position: absolute;\n  width: 2px;\n  height: 2px;\n  background: rgba(255, 255, 255, 0.8);\n  border-radius: 50%;\n  animation: float 8s linear infinite;\n}\n","size_bytes":3191},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/interface.tsx":{"content":"import { useEffect } from \"react\";\nimport { useGame } from \"@/lib/stores/useGame\";\nimport { useAudio } from \"@/lib/stores/useAudio\";\nimport { Button } from \"./button\";\nimport { Card, CardContent, CardFooter, CardHeader, CardTitle } from \"./card\";\nimport { VolumeX, Volume2, RotateCw, Trophy } from \"lucide-react\";\n\nexport function Interface() {\n  const restart = useGame((state) => state.restart);\n  const phase = useGame((state) => state.phase);\n  const { isMuted, toggleMute } = useAudio();\n\n  // Handle clicks on the interface in the ready phase to start the game\n  useEffect(() => {\n    if (phase === \"ready\") {\n      const handleClick = () => {\n        const activeElement = document.activeElement;\n        if (activeElement && 'blur' in activeElement) {\n          (activeElement as HTMLElement).blur();\n        }\n        const event = new KeyboardEvent(\"keydown\", { code: \"Space\" });\n        window.dispatchEvent(event);\n      };\n\n      window.addEventListener(\"click\", handleClick);\n      return () => window.removeEventListener(\"click\", handleClick);\n    }\n  }, [phase]);\n\n  return (\n    <>\n      {/* Top-right corner UI controls */}\n      <div className=\"fixed top-4 right-4 flex gap-2 z-10\">\n        <Button\n          variant=\"outline\"\n          size=\"icon\"\n          onClick={toggleMute}\n          title={isMuted ? \"Unmute\" : \"Mute\"}\n        >\n          {isMuted ? <VolumeX size={18} /> : <Volume2 size={18} />}\n        </Button>\n        \n        <Button\n          variant=\"outline\"\n          size=\"icon\"\n          onClick={restart}\n          title=\"Restart Game\"\n        >\n          <RotateCw size={18} />\n        </Button>\n      </div>\n      \n      {/* Game completion overlay */}\n      {phase === \"ended\" && (\n        <div className=\"fixed inset-0 flex items-center justify-center z-20 bg-black/30\">\n          <Card className=\"w-full max-w-md mx-4 shadow-lg\">\n            <CardHeader>\n              <CardTitle className=\"flex items-center justify-center gap-2\">\n                <Trophy className=\"text-yellow-500\" />\n                Level Complete!\n              </CardTitle>\n            </CardHeader>\n            \n            <CardContent>\n              <p className=\"text-center text-muted-foreground\">\n                Congratulations! You successfully navigated the course.\n              </p>\n            </CardContent>\n            \n            <CardFooter className=\"flex justify-center\">\n              <Button onClick={restart} className=\"w-full\">\n                Play Again\n              </Button>\n            </CardFooter>\n          </Card>\n        </div>\n      )}\n      \n      {/* Instructions panel */}\n      <div className=\"fixed bottom-4 left-4 z-10\">\n        <Card className=\"w-auto max-w-xs bg-background/80 backdrop-blur-sm\">\n          <CardContent className=\"p-4\">\n            <h3 className=\"font-medium mb-2\">Controls:</h3>\n            <ul className=\"text-sm space-y-1 text-muted-foreground\">\n              <li>WASD or Arrow Keys: Move the ball</li>\n              <li>Space: Jump</li>\n              <li>R: Restart game</li>\n              <li>M: Toggle sound</li>\n            </ul>\n          </CardContent>\n        </Card>\n      </div>\n    </>\n  );\n}\n","size_bytes":3180},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/sonner.tsx":{"content":"\"use client\"\n\nimport { useTheme } from \"next-themes\"\nimport { Toaster as Sonner } from \"sonner\"\n\ntype ToasterProps = React.ComponentProps<typeof Sonner>\n\nconst Toaster = ({ ...props }: ToasterProps) => {\n  const { theme = \"system\" } = useTheme()\n\n  return (\n    <Sonner\n      theme={theme as ToasterProps[\"theme\"]}\n      className=\"toaster group\"\n      toastOptions={{\n        classNames: {\n          toast:\n            \"group toast group-[.toaster]:bg-background group-[.toaster]:text-foreground group-[.toaster]:border-border group-[.toaster]:shadow-lg\",\n          description: \"group-[.toast]:text-muted-foreground\",\n          actionButton:\n            \"group-[.toast]:bg-primary group-[.toast]:text-primary-foreground\",\n          cancelButton:\n            \"group-[.toast]:bg-muted group-[.toast]:text-muted-foreground\",\n        },\n      }}\n      {...props}\n    />\n  )\n}\n\nexport { Toaster }\n","size_bytes":894},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},"client/src/lib/stores/useAudio.tsx":{"content":"import { create } from \"zustand\";\n\ninterface AudioState {\n  backgroundMusic: HTMLAudioElement | null;\n  hitSound: HTMLAudioElement | null;\n  successSound: HTMLAudioElement | null;\n  isMuted: boolean;\n  \n  // Setter functions\n  setBackgroundMusic: (music: HTMLAudioElement) => void;\n  setHitSound: (sound: HTMLAudioElement) => void;\n  setSuccessSound: (sound: HTMLAudioElement) => void;\n  \n  // Control functions\n  toggleMute: () => void;\n  playHit: () => void;\n  playSuccess: () => void;\n}\n\nexport const useAudio = create<AudioState>((set, get) => ({\n  backgroundMusic: null,\n  hitSound: null,\n  successSound: null,\n  isMuted: true, // Start muted by default\n  \n  setBackgroundMusic: (music) => set({ backgroundMusic: music }),\n  setHitSound: (sound) => set({ hitSound: sound }),\n  setSuccessSound: (sound) => set({ successSound: sound }),\n  \n  toggleMute: () => {\n    const { isMuted } = get();\n    const newMutedState = !isMuted;\n    \n    // Just update the muted state\n    set({ isMuted: newMutedState });\n    \n    // Log the change\n    console.log(`Sound ${newMutedState ? 'muted' : 'unmuted'}`);\n  },\n  \n  playHit: () => {\n    const { hitSound, isMuted } = get();\n    if (hitSound) {\n      // If sound is muted, don't play anything\n      if (isMuted) {\n        console.log(\"Hit sound skipped (muted)\");\n        return;\n      }\n      \n      // Clone the sound to allow overlapping playback\n      const soundClone = hitSound.cloneNode() as HTMLAudioElement;\n      soundClone.volume = 0.3;\n      soundClone.play().catch(error => {\n        console.log(\"Hit sound play prevented:\", error);\n      });\n    }\n  },\n  \n  playSuccess: () => {\n    const { successSound, isMuted } = get();\n    if (successSound) {\n      // If sound is muted, don't play anything\n      if (isMuted) {\n        console.log(\"Success sound skipped (muted)\");\n        return;\n      }\n      \n      successSound.currentTime = 0;\n      successSound.play().catch(error => {\n        console.log(\"Success sound play prevented:\", error);\n      });\n    }\n  }\n}));\n","size_bytes":2025},"client/src/lib/stores/useGame.tsx":{"content":"import { create } from \"zustand\";\nimport { subscribeWithSelector } from \"zustand/middleware\";\n\nexport type GamePhase = \"ready\" | \"playing\" | \"ended\";\n\ninterface GameState {\n  phase: GamePhase;\n  \n  // Actions\n  start: () => void;\n  restart: () => void;\n  end: () => void;\n}\n\nexport const useGame = create<GameState>()(\n  subscribeWithSelector((set) => ({\n    phase: \"ready\",\n    \n    start: () => {\n      set((state) => {\n        // Only transition from ready to playing\n        if (state.phase === \"ready\") {\n          return { phase: \"playing\" };\n        }\n        return {};\n      });\n    },\n    \n    restart: () => {\n      set(() => ({ phase: \"ready\" }));\n    },\n    \n    end: () => {\n      set((state) => {\n        // Only transition from playing to ended\n        if (state.phase === \"playing\") {\n          return { phase: \"ended\" };\n        }\n        return {};\n      });\n    }\n  }))\n);\n","size_bytes":893},"client/src/lib/tarotCards.ts":{"content":"export interface TarotCard {\n  name: string;\n  suit?: string;\n  number?: number;\n  arcana: 'Major' | 'Minor';\n  upright?: string[];\n  reversed?: string[];\n  description?: string;\n  meaning?: string;\n  keywords?: string[];\n  meaningUpright?: string;\n  meaningReversed?: string;\n  emotionalGuidance?: string;\n  mentalEncouragement?: string;\n  childMessage?: string;\n  imageUrl: string;\n}\n\n// Major Arcana - Based on user's provided JSON data\nexport const majorArcana: TarotCard[] = [\n  {\n    name: \"The Fool\",\n    arcana: \"Major\",\n    number: 0,\n    upright: [\"Beginnings\", \"Innocence\", \"Spontaneity\", \"A free spirit\"],\n    reversed: [\"Recklessness\", \"Naivety\", \"Poor judgment\", \"Holding back\"],\n    description: \"The Fool dances at the edge of the unknown, carrying only hope and faith into new journeys.\",\n    meaningUpright: \"The Fool represents new beginnings, innocence, and the courage to take the first step into the unknown. This card encourages you to embrace spontaneity and trust in the journey ahead.\",\n    emotionalGuidance: \"Trust your heart and embrace the unknown with childlike wonder. Every ending is a new beginning waiting to unfold.\",\n    mentalEncouragement: \"Your open mind is your greatest strength. Approach challenges with curiosity rather than fear, and watch how magical solutions appear.\",\n    childMessage: \"Just like starting a new adventure, you're brave enough to try new things and explore the world around you!\",\n    imageUrl: \"https://images.unsplash.com/photo-1518709268805-4e9042af2176?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"The Magician\",\n    arcana: \"Major\",\n    number: 1,\n    upright: [\"Manifestation\", \"Resourcefulness\", \"Power\", \"Inspired action\"],\n    reversed: [\"Manipulation\", \"Untapped potential\", \"Deception\", \"Misuse of power\"],\n    description: \"The Magician channels divine energy into reality, reminding us that we already hold the tools to shape destiny.\",\n    meaningUpright: \"The Magician represents manifestation and the power to create your reality. You have all the tools you need to succeed.\",\n    emotionalGuidance: \"You are a powerful creator of your own destiny. Channel your emotions into positive action and watch your dreams come to life.\",\n    mentalEncouragement: \"Your mind is incredibly powerful and focused. Trust in your abilities and use your talents to manifest the life you desire.\",\n    childMessage: \"You have amazing talents and abilities! Like a magician, you can make wonderful things happen when you believe in yourself.\",\n    imageUrl: \"https://images.unsplash.com/photo-1578662996442-48f60103fc96?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"The High Priestess\",\n    arcana: \"Major\",\n    number: 2,\n    upright: [\"Intuition\", \"Subconscious wisdom\", \"Mystery\", \"Sacred knowledge\"],\n    reversed: [\"Secrets\", \"Hidden motives\", \"Disconnected intuition\", \"Silence\"],\n    description: \"The High Priestess guards the veil between worlds, whispering truths to those who dare to listen within.\",\n    meaningUpright: \"The High Priestess represents intuition and inner wisdom. Trust your inner voice and pay attention to your dreams.\",\n    emotionalGuidance: \"Your emotional intelligence is incredibly deep. Trust the feelings that come from your soul - they're guiding you toward truth.\",\n    mentalEncouragement: \"Your intuitive mind sees what others cannot. Listen to that quiet inner voice - it holds the answers you seek.\",\n    childMessage: \"You have a special gift for knowing things in your heart. Trust your feelings - they often know what's right before your mind does!\",\n    imageUrl: \"https://images.unsplash.com/photo-1551269901-5c5e14c25df7?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"The Empress\",\n    arcana: \"Major\",\n    number: 3,\n    upright: [\"Abundance\", \"Fertility\", \"Nurturing\", \"Beauty\"],\n    reversed: [\"Dependence\", \"Creative block\", \"Neglect\", \"Smothering\"],\n    description: \"The Empress embodies creation itself, wrapping the world in love, growth, and boundless beauty.\",\n    meaningUpright: \"The Empress represents creativity, fertility, and abundance. You are in a phase of growth and creative expansion.\",\n    emotionalGuidance: \"Nurture yourself and others with the same love you'd give to a beautiful garden. Your caring nature is a gift to the world.\",\n    mentalEncouragement: \"Your creative mind is blooming with possibilities. Trust your artistic vision and let your imagination flow freely.\",\n    childMessage: \"You're like a gardener who helps beautiful things grow! Your creativity and kindness make the world a more wonderful place.\",\n    imageUrl: \"https://images.unsplash.com/photo-1502134249126-9f3755a50d78?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"The Emperor\",\n    arcana: \"Major\",\n    number: 4,\n    upright: [\"Authority\", \"Structure\", \"Stability\", \"Leadership\"],\n    reversed: [\"Domination\", \"Rigidity\", \"Chaos from control\", \"Lack of discipline\"],\n    description: \"The Emperor builds order upon chaos, ruling with strength, discipline, and a protective hand.\",\n    meaningUpright: \"The Emperor represents leadership and structure. You have the power to create order and achieve your goals through discipline.\",\n    emotionalGuidance: \"Find strength in self-discipline while remaining compassionate. True leadership comes from serving others with wisdom and kindness.\",\n    mentalEncouragement: \"Your strategic mind can solve any challenge. Trust your ability to lead and make decisions that benefit everyone involved.\",\n    childMessage: \"You have natural leadership abilities! Like a wise ruler, you can help organize things and take care of others around you.\",\n    imageUrl: \"https://images.unsplash.com/photo-1519904981063-b0cf448d479e?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"The Hierophant\",\n    arcana: \"Major\",\n    number: 5,\n    upright: [\"Tradition\", \"Spiritual wisdom\", \"Conformity\", \"Mentorship\"],\n    reversed: [\"Rebellion\", \"Personal beliefs\", \"Restriction\", \"Dogma\"],\n    description: \"The Hierophant stands as a bridge between the divine and the human, guiding through sacred tradition.\",\n    meaningUpright: \"The Hierophant represents tradition and spiritual wisdom. Seek guidance from those who have walked the path before you.\",\n    emotionalGuidance: \"Honor the wisdom of your ancestors while staying true to your own path. Tradition can guide you without limiting your growth.\",\n    mentalEncouragement: \"You have valuable wisdom to share with others. Your knowledge and experience can light the way for those who follow.\",\n    childMessage: \"You're both a wonderful learner and teacher! You love learning from wise people and sharing what you know with friends.\",\n    imageUrl: \"https://images.unsplash.com/photo-1578662996442-48f60103fc96?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"The Lovers\",\n    arcana: \"Major\",\n    number: 6,\n    upright: [\"Love\", \"Harmony\", \"Partnerships\", \"Choices\"],\n    reversed: [\"Disharmony\", \"Imbalance\", \"Indecision\", \"Temptation\"],\n    description: \"The Lovers embody union and the crossroads of the heart, where choice shapes destiny.\",\n    meaningUpright: \"The Lovers represents love and important choices. You are called to make decisions based on your values and desires.\",\n    emotionalGuidance: \"Open your heart to love in all its forms. Whether romantic, friendship, or self-love, you deserve deep connection and happiness.\",\n    mentalEncouragement: \"Trust your heart when making important choices. Your values and intuition will guide you to decisions that bring lasting joy.\",\n    childMessage: \"You have so much love to give and receive! Your friendships and family relationships are precious treasures that make life magical.\",\n    imageUrl: \"https://images.unsplash.com/photo-1518709268805-4e9042af2176?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"The Chariot\",\n    arcana: \"Major\",\n    number: 7,\n    upright: [\"Willpower\", \"Victory\", \"Determination\", \"Control\"],\n    reversed: [\"Lack of direction\", \"Aggression\", \"Obstacles\", \"Losing control\"],\n    description: \"The Chariot charges forward with focus and courage, mastering opposing forces to achieve triumph.\",\n    meaningUpright: \"The Chariot represents triumph and success through determination. You have the willpower to overcome any obstacle.\",\n    emotionalGuidance: \"Balance your emotions like a skilled charioteer. When you master your inner world, you can achieve anything in the outer world.\",\n    mentalEncouragement: \"Your determination is unstoppable. Focus your mind on your goals and drive forward with confidence and purpose.\",\n    childMessage: \"You're incredibly determined! Like a brave chariot driver, you can steer through any challenge and reach your dreams.\",\n    imageUrl: \"https://images.unsplash.com/photo-1551269901-5c5e14c25df7?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"Strength\",\n    arcana: \"Major\",\n    number: 8,\n    upright: [\"Courage\", \"Compassion\", \"Inner strength\", \"Patience\"],\n    reversed: [\"Self-doubt\", \"Weakness\", \"Fear\", \"Insecurity\"],\n    description: \"Strength is the quiet power of compassion and resilience, taming the wild with gentle courage.\",\n    meaningUpright: \"Strength represents inner courage and the power of compassion. True strength comes from gentleness and understanding.\",\n    emotionalGuidance: \"Your gentle strength can tame any wild emotion. Approach challenges with love and patience rather than force.\",\n    mentalEncouragement: \"You possess incredible inner strength and wisdom. Trust your ability to handle any situation with grace and compassion.\",\n    childMessage: \"You're stronger than you know! Your kindness and gentle heart are actually your greatest superpowers.\",\n    imageUrl: \"https://images.unsplash.com/photo-1502134249126-9f3755a50d78?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"The Hermit\",\n    arcana: \"Major\",\n    number: 9,\n    upright: [\"Soul-searching\", \"Wisdom\", \"Introspection\", \"Guidance\"],\n    reversed: [\"Isolation\", \"Withdrawal\", \"Loneliness\", \"Misguided journey\"],\n    description: \"The Hermit walks alone with a lantern of wisdom, seeking truth in silence and solitude.\",\n    meaningUpright: \"The Hermit represents soul searching and inner wisdom. Take time for introspection and listen to your inner voice.\",\n    emotionalGuidance: \"Sometimes solitude brings the greatest insights. Use quiet moments to reconnect with your true self and deepest desires.\",\n    mentalEncouragement: \"Your inner light can illuminate any darkness. Trust the wisdom you find in quiet reflection and contemplation.\",\n    childMessage: \"Sometimes you need quiet time to think and dream. Your imagination and inner wisdom help you understand the world better!\",\n    imageUrl: \"https://images.unsplash.com/photo-1519904981063-b0cf448d479e?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"Wheel of Fortune\",\n    arcana: \"Major\",\n    number: 10,\n    upright: [\"Cycles\", \"Destiny\", \"Good fortune\", \"Karma\"],\n    reversed: [\"Bad luck\", \"Resistance to change\", \"Unexpected setbacks\", \"Stagnation\"],\n    description: \"The Wheel of Fortune turns endlessly, reminding us of life's cycles of rise and fall.\",\n    meaningUpright: \"The Wheel of Fortune represents change and cycles. What goes down must come up - good fortune is coming your way.\",\n    emotionalGuidance: \"Embrace the natural cycles of life. Every low moment is followed by a high one - trust that good times are coming.\",\n    mentalEncouragement: \"You are exactly where you need to be in life's grand design. Trust the process and know that positive change is on the horizon.\",\n    childMessage: \"Life is like a magical wheel that keeps turning! Even when things seem difficult, wonderful surprises are always coming your way.\",\n    imageUrl: \"https://images.unsplash.com/photo-1578662996442-48f60103fc96?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"Justice\",\n    arcana: \"Major\",\n    number: 11,\n    upright: [\"Fairness\", \"Truth\", \"Law\", \"Cause and effect\"],\n    reversed: [\"Dishonesty\", \"Unfairness\", \"Corruption\", \"Avoidance\"],\n    description: \"Justice balances the scales of truth, demanding honesty and responsibility for every action.\",\n    meaningUpright: \"Justice represents fairness and balance. The truth will be revealed and justice will be served in your situation.\",\n    emotionalGuidance: \"Seek emotional balance and fairness in all your relationships. Your integrity and honesty will lead to positive outcomes.\",\n    mentalEncouragement: \"Your sense of justice and fairness is a guiding light. Trust your ability to see truth and make balanced decisions.\",\n    childMessage: \"You have a strong sense of right and wrong! Like a wise judge, you always try to be fair and help others do the right thing.\",\n    imageUrl: \"https://images.unsplash.com/photo-1518709268805-4e9042af2176?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"The Hanged Man\",\n    arcana: \"Major\",\n    number: 12,\n    upright: [\"Surrender\", \"Perspective\", \"Letting go\", \"Sacrifice\"],\n    reversed: [\"Delays\", \"Resistance\", \"Stagnation\", \"Missed opportunities\"],\n    description: \"The Hanged Man pauses between worlds, teaching wisdom through surrender and altered vision.\",\n    meaningUpright: \"The Hanged Man represents surrender and new perspectives. Sometimes you must let go to move forward.\",\n    emotionalGuidance: \"Release the need to control every outcome. Sometimes the best action is patient acceptance and trust in divine timing.\",\n    mentalEncouragement: \"Your willingness to see things differently opens up new possibilities. Embrace fresh perspectives with an open mind.\",\n    childMessage: \"Sometimes looking at things upside down helps you see them in a whole new way! Patience and different viewpoints are magical tools.\",\n    imageUrl: \"https://images.unsplash.com/photo-1551269901-5c5e14c25df7?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"Death\",\n    arcana: \"Major\",\n    number: 13,\n    upright: [\"Transformation\", \"Endings\", \"Change\", \"Transition\"],\n    reversed: [\"Resistance to change\", \"Fear of endings\", \"Stagnation\", \"Clinging\"],\n    description: \"Death closes one door so another may open, carrying the promise of renewal through release.\",\n    meaningUpright: \"Death represents transformation and new beginnings. An old phase of your life is ending to make way for something better.\",\n    emotionalGuidance: \"Allow yourself to grieve what's ending while celebrating what's beginning. Transformation is a natural part of growth.\",\n    mentalEncouragement: \"Your ability to adapt and transform is remarkable. Embrace change as an opportunity for growth and renewal.\",\n    childMessage: \"Just like a caterpillar becomes a beautiful butterfly, you're always growing and changing into something even more wonderful!\",\n    imageUrl: \"https://images.unsplash.com/photo-1502134249126-9f3755a50d78?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"Temperance\",\n    arcana: \"Major\",\n    number: 14,\n    upright: [\"Balance\", \"Harmony\", \"Patience\", \"Moderation\"],\n    reversed: [\"Excess\", \"Discord\", \"Imbalance\", \"Overindulgence\"],\n    description: \"Temperance blends opposites into unity, teaching balance and the art of flow.\",\n    meaningUpright: \"Temperance represents balance and moderation. Find the middle path and blend opposing forces harmoniously.\",\n    emotionalGuidance: \"Emotional balance brings lasting peace. Practice patience and moderation in all your feelings and reactions.\",\n    mentalEncouragement: \"Your ability to find balance and compromise is a true gift. Use this skill to create harmony in all areas of life.\",\n    childMessage: \"You're wonderful at helping things balance perfectly! Like mixing colors to make beautiful art, you know how to blend different ideas.\",\n    imageUrl: \"https://images.unsplash.com/photo-1519904981063-b0cf448d479e?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"The Devil\",\n    arcana: \"Major\",\n    number: 15,\n    upright: [\"Bondage\", \"Materialism\", \"Addiction\", \"Shadow self\"],\n    reversed: [\"Freedom\", \"Breaking chains\", \"Awareness\", \"Release\"],\n    description: \"The Devil reveals the chains of illusion, daring us to break free from our own shadows.\",\n    meaningUpright: \"The Devil represents bondage and the need for liberation. You have the power to break free from what binds you.\",\n    emotionalGuidance: \"Recognize the patterns that no longer serve you. Your emotional freedom is within reach - you just need to claim it.\",\n    mentalEncouragement: \"You are stronger than any limitation or addiction. Your mind has the power to break free and create positive change.\",\n    childMessage: \"Sometimes we feel stuck, but you always have the power to make better choices! You're stronger than any problem you face.\",\n    imageUrl: \"https://images.unsplash.com/photo-1578662996442-48f60103fc96?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"The Tower\",\n    arcana: \"Major\",\n    number: 16,\n    upright: [\"Sudden change\", \"Upheaval\", \"Awakening\", \"Chaos\"],\n    reversed: [\"Avoidance of disaster\", \"Fear of change\", \"Lingering collapse\", \"Resistance\"],\n    description: \"The Tower crumbles without warning, but from its ruins, truth and liberation rise.\",\n    meaningUpright: \"The Tower represents sudden change and awakening. Old structures must fall to make way for new growth.\",\n    emotionalGuidance: \"Though change can feel scary, it's clearing space for something much better. Trust that this upheaval serves your highest good.\",\n    mentalEncouragement: \"Your resilience in the face of change is remarkable. Use this as an opportunity to rebuild something even better.\",\n    childMessage: \"Sometimes things need to change quickly, like cleaning your room to make space for new toys! Change helps make room for better things.\",\n    imageUrl: \"https://images.unsplash.com/photo-1518709268805-4e9042af2176?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"The Star\",\n    arcana: \"Major\",\n    number: 17,\n    upright: [\"Hope\", \"Healing\", \"Inspiration\", \"Faith\"],\n    reversed: [\"Despair\", \"Lack of faith\", \"Discouragement\", \"Confusion\"],\n    description: \"The Star shines after the storm, offering hope and guiding light on the path forward.\",\n    meaningUpright: \"The Star represents hope and inspiration. After hardship comes healing and renewed faith in the future.\",\n    emotionalGuidance: \"Your emotional healing is supported by the universe. Trust that hope is justified and better times are truly coming.\",\n    mentalEncouragement: \"You are a beacon of hope and inspiration to others. Your positive vision for the future will manifest in reality.\",\n    childMessage: \"You shine bright like a star and bring hope to everyone around you! Your dreams and wishes are like stars guiding you to happiness.\",\n    imageUrl: \"https://images.unsplash.com/photo-1551269901-5c5e14c25df7?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"The Moon\",\n    arcana: \"Major\",\n    number: 18,\n    upright: [\"Illusion\", \"Intuition\", \"Dreams\", \"Subconscious\"],\n    reversed: [\"Deception\", \"Fear\", \"Confusion\", \"Repressed emotions\"],\n    description: \"The Moon reflects hidden truths, casting light upon shadows and the realm of dreams.\",\n    meaningUpright: \"The Moon represents illusion and the need to trust your intuition. Not everything is as it seems on the surface.\",\n    emotionalGuidance: \"Trust your emotional instincts even when logic says otherwise. Your feelings are picking up on important truths.\",\n    mentalEncouragement: \"Your intuitive mind sees through illusions to the truth beneath. Trust your psychic insights and inner knowing.\",\n    childMessage: \"Just like the moon lights up the night, your intuition helps you see things that others might miss. Trust your special inner knowing!\",\n    imageUrl: \"https://images.unsplash.com/photo-1502134249126-9f3755a50d78?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"The Sun\",\n    arcana: \"Major\",\n    number: 19,\n    upright: [\"Joy\", \"Success\", \"Vitality\", \"Positivity\"],\n    reversed: [\"Temporary sadness\", \"Clouded clarity\", \"Ego\", \"Overconfidence\"],\n    description: \"The Sun radiates life and clarity, filling the world with joy and boundless energy.\",\n    meaningUpright: \"The Sun represents joy, success, and vitality. This is a time of happiness and positive energy in your life.\",\n    emotionalGuidance: \"Let your inner child come out to play. Joy and optimism are your natural state - embrace the happiness that's yours.\",\n    mentalEncouragement: \"Your positive mindset attracts success and happiness. Continue to shine your light brightly - the world needs your joy.\",\n    childMessage: \"Just like the sun brings warmth and joy to everyone, you bring happiness wherever you go! Your smile can brighten anyone's day.\",\n    imageUrl: \"https://images.unsplash.com/photo-1519904981063-b0cf448d479e?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"Judgement\",\n    arcana: \"Major\",\n    number: 20,\n    upright: [\"Rebirth\", \"Awakening\", \"Renewal\", \"Inner calling\"],\n    reversed: [\"Self-doubt\", \"Refusal\", \"Stagnation\", \"Avoidance of truth\"],\n    description: \"Judgement calls us to awaken, to rise renewed, and embrace higher purpose.\",\n    meaningUpright: \"Judgement represents rebirth and spiritual awakening. You are being called to a higher purpose in life.\",\n    emotionalGuidance: \"Forgive yourself and others as you move into this new phase. Your heart is opening to greater love and compassion.\",\n    mentalEncouragement: \"You are awakening to your true calling and purpose. Trust the voice within that's guiding you toward your destiny.\",\n    childMessage: \"You're growing into exactly who you're meant to be! Like a beautiful butterfly, you're transforming into your best self every day.\",\n    imageUrl: \"https://images.unsplash.com/photo-1578662996442-48f60103fc96?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"The World\",\n    arcana: \"Major\",\n    number: 21,\n    upright: [\"Completion\", \"Achievement\", \"Wholeness\", \"Fulfillment\"],\n    reversed: [\"Incomplete cycles\", \"Delays\", \"Lack of closure\", \"Stagnation\"],\n    description: \"The World represents the grand completion of cycles, celebrating unity and fulfillment.\",\n    meaningUpright: \"The World represents completion and achievement. You have successfully completed a major cycle in your life.\",\n    emotionalGuidance: \"Celebrate your emotional growth and the wisdom you've gained. You are whole, complete, and ready for new adventures.\",\n    mentalEncouragement: \"Your hard work and dedication have paid off beautifully. You've achieved something truly meaningful - be proud of yourself.\",\n    childMessage: \"You've accomplished something amazing! Like completing a puzzle, you've put all the pieces together to create something wonderful.\",\n    imageUrl: \"https://images.unsplash.com/photo-1518709268805-4e9042af2176?w=400&h=600&fit=crop\"\n  }\n];\n\n// Minor Arcana - Based on user's provided JSON data\nexport const minorArcana: TarotCard[] = [\n  // Wands Suit\n  {\n    name: \"Ace of Wands\",\n    suit: \"Wands\",\n    number: 1,\n    arcana: \"Minor\",\n    meaning: \"New beginnings, inspiration, creative spark, enthusiasm.\",\n    meaningUpright: \"The Ace of Wands represents new creative energy, inspiration, and the spark of new ideas. It's a powerful beginning filled with potential.\",\n    emotionalGuidance: \"Trust your creative instincts and let your enthusiasm guide you toward new adventures.\",\n    mentalEncouragement: \"Your mind is brimming with fresh ideas and creative potential. Now is the time to act on your inspiration.\",\n    childMessage: \"You have amazing creative energy! Like a magical wand, you can create wonderful things when you follow your inspiration.\",\n    imageUrl: \"https://images.unsplash.com/photo-1578662996442-48f60103fc96?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"Two of Wands\",\n    suit: \"Wands\",\n    number: 2,\n    arcana: \"Minor\",\n    meaning: \"Planning, making choices, looking ahead, expansion.\",\n    meaningUpright: \"The Two of Wands represents planning and making important decisions about your future. You're ready to expand your horizons.\",\n    emotionalGuidance: \"Take time to consider your options carefully. Your heart knows which path will bring you the most joy.\",\n    mentalEncouragement: \"Your strategic thinking and planning abilities are excellent. Trust your vision for the future.\",\n    childMessage: \"You're great at making plans and thinking about the future! Like a wise explorer, you can choose the best path for your adventures.\",\n    imageUrl: \"https://images.unsplash.com/photo-1578662996442-48f60103fc96?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"Three of Wands\",\n    suit: \"Wands\",\n    number: 3,\n    arcana: \"Minor\",\n    meaning: \"Progress, foresight, overseas opportunities, momentum.\",\n    meaningUpright: \"The Three of Wands shows your plans are working and progress is being made. New opportunities are on the horizon.\",\n    emotionalGuidance: \"Feel confident about the progress you're making. Your patience and planning are paying off beautifully.\",\n    mentalEncouragement: \"Your foresight and preparation have set you up for success. Keep moving forward with confidence.\",\n    childMessage: \"Your hard work and planning are paying off! Like a ship sailing toward new lands, you're headed for exciting discoveries.\",\n    imageUrl: \"https://images.unsplash.com/photo-1578662996442-48f60103fc96?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"Four of Wands\",\n    suit: \"Wands\",\n    number: 4,\n    arcana: \"Minor\",\n    meaning: \"Celebration, harmony, homecoming, community.\",\n    meaningUpright: \"The Four of Wands represents celebration, harmony, and coming together with loved ones. It's time to celebrate your achievements.\",\n    emotionalGuidance: \"Share your joy with others and celebrate the love and support in your life. Community brings happiness.\",\n    mentalEncouragement: \"You've created stability and harmony in your life. Take time to appreciate and celebrate your accomplishments.\",\n    childMessage: \"It's time to celebrate! Like a happy party with all your favorite people, you deserve to enjoy the good things in your life.\",\n    imageUrl: \"https://images.unsplash.com/photo-1578662996442-48f60103fc96?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"Five of Wands\",\n    suit: \"Wands\",\n    number: 5,\n    arcana: \"Minor\",\n    meaning: \"Conflict, competition, disagreements, challenges.\",\n    meaningUpright: \"The Five of Wands represents conflict and competition. You may need to work through disagreements or face challenges.\",\n    emotionalGuidance: \"Stay calm during conflicts and remember that different opinions can lead to better solutions. Keep your heart open.\",\n    mentalEncouragement: \"Use challenges as opportunities to grow stronger and learn new skills. Competition can bring out your best.\",\n    childMessage: \"Sometimes friends disagree, but that's okay! Like players in a game, you can compete fairly and still be friends afterward.\",\n    imageUrl: \"https://images.unsplash.com/photo-1578662996442-48f60103fc96?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"Six of Wands\",\n    suit: \"Wands\",\n    number: 6,\n    arcana: \"Minor\",\n    meaning: \"Victory, recognition, public reward, success.\",\n    meaningUpright: \"The Six of Wands represents victory and public recognition. Your efforts are being acknowledged and celebrated by others.\",\n    emotionalGuidance: \"Feel proud of your achievements and accept the recognition you deserve. Your success brings joy to others too.\",\n    mentalEncouragement: \"Your hard work and determination have led to well-deserved success. Continue to believe in your abilities.\",\n    childMessage: \"You did it! Like a champion crossing the finish line, you've achieved something amazing and everyone is cheering for you!\",\n    imageUrl: \"https://images.unsplash.com/photo-1578662996442-48f60103fc96?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"Seven of Wands\",\n    suit: \"Wands\",\n    number: 7,\n    arcana: \"Minor\",\n    meaning: \"Defensiveness, standing ground, perseverance.\",\n    meaningUpright: \"The Seven of Wands represents standing your ground and defending your position. You have the strength to persevere.\",\n    emotionalGuidance: \"Stand up for what you believe in, but remember to stay kind and fair. Your principles are worth defending.\",\n    mentalEncouragement: \"Your determination and courage will help you overcome any challenges. Don't give up on what matters to you.\",\n    childMessage: \"You're brave and strong! Like a guardian protecting something precious, you can stand up for what's right and important to you.\",\n    imageUrl: \"https://images.unsplash.com/photo-1578662996442-48f60103fc96?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"Eight of Wands\",\n    suit: \"Wands\",\n    number: 8,\n    arcana: \"Minor\",\n    meaning: \"Speed, progress, swift action, communication.\",\n    meaningUpright: \"The Eight of Wands represents rapid progress and swift communication. Things are moving quickly in a positive direction.\",\n    emotionalGuidance: \"Embrace the excitement of fast-moving changes. Trust that this rapid progress is leading you to good places.\",\n    mentalEncouragement: \"Your quick thinking and fast action are serving you well. Keep up with the momentum and stay focused.\",\n    childMessage: \"Things are happening fast! Like messages flying through the air, exciting news and changes are coming your way quickly.\",\n    imageUrl: \"https://images.unsplash.com/photo-1578662996442-48f60103fc96?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"Nine of Wands\",\n    suit: \"Wands\",\n    number: 9,\n    arcana: \"Minor\",\n    meaning: \"Resilience, courage, persistence, last stand.\",\n    meaningUpright: \"The Nine of Wands represents resilience and persistence. You're almost there - don't give up now!\",\n    emotionalGuidance: \"You've been through challenges and come out stronger. Trust in your ability to persist through any difficulty.\",\n    mentalEncouragement: \"Your resilience and determination are admirable. You have the strength to overcome any final obstacles.\",\n    childMessage: \"You're so strong and brave! Like a hero who never gives up, you can keep going even when things get tough.\",\n    imageUrl: \"https://images.unsplash.com/photo-1578662996442-48f60103fc96?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"Ten of Wands\",\n    suit: \"Wands\",\n    number: 10,\n    arcana: \"Minor\",\n    meaning: \"Burden, responsibility, hard work, stress.\",\n    meaningUpright: \"The Ten of Wands represents carrying a heavy load or taking on too much responsibility. It may be time to ask for help.\",\n    emotionalGuidance: \"It's okay to feel tired when you're working hard. Remember to ask for help and take breaks when you need them.\",\n    mentalEncouragement: \"You're capable of handling responsibility, but don't forget to share the load with others when possible.\",\n    childMessage: \"Sometimes we carry too much at once. Like asking friends to help carry heavy books, it's okay to ask for help when you need it.\",\n    imageUrl: \"https://images.unsplash.com/photo-1578662996442-48f60103fc96?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"Page of Wands\",\n    suit: \"Wands\",\n    number: 11,\n    arcana: \"Minor\",\n    meaning: \"Exploration, enthusiasm, discovery, a free spirit.\",\n    meaningUpright: \"The Page of Wands represents enthusiasm for new adventures and the joy of discovery. Embrace your curious nature.\",\n    emotionalGuidance: \"Let your enthusiasm and curiosity guide you to new experiences. Your sense of wonder is a beautiful gift.\",\n    mentalEncouragement: \"Your eager mind and love of learning will take you on amazing adventures. Stay curious and open to new ideas.\",\n    childMessage: \"You're like a young explorer ready for adventure! Your curiosity and excitement about new things will lead you to wonderful discoveries.\",\n    imageUrl: \"https://images.unsplash.com/photo-1578662996442-48f60103fc96?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"Knight of Wands\",\n    suit: \"Wands\",\n    number: 12,\n    arcana: \"Minor\",\n    meaning: \"Energy, passion, inspired action, adventure.\",\n    meaningUpright: \"The Knight of Wands represents passionate action and adventurous energy. You're ready to charge forward with enthusiasm.\",\n    emotionalGuidance: \"Channel your passionate energy in positive directions. Your enthusiasm can inspire others to join your adventures.\",\n    mentalEncouragement: \"Your energy and passion are powerful forces. Use them wisely to achieve your goals and help others.\",\n    childMessage: \"You have so much energy and passion! Like a brave knight on a quest, you can use your enthusiasm to do amazing things.\",\n    imageUrl: \"https://images.unsplash.com/photo-1578662996442-48f60103fc96?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"Queen of Wands\",\n    suit: \"Wands\",\n    number: 13,\n    arcana: \"Minor\",\n    meaning: \"Confidence, independence, determination, charisma.\",\n    meaningUpright: \"The Queen of Wands represents confidence, independence, and natural charisma. You have the power to lead and inspire others.\",\n    emotionalGuidance: \"Trust in your natural confidence and ability to inspire others. Your warmth and enthusiasm are magnetic.\",\n    mentalEncouragement: \"Your independent spirit and determination will help you achieve anything you set your mind to.\",\n    childMessage: \"You're confident and charismatic! Like a queen who leads with kindness, you can inspire others and achieve great things.\",\n    imageUrl: \"https://images.unsplash.com/photo-1578662996442-48f60103fc96?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"King of Wands\",\n    suit: \"Wands\",\n    number: 14,\n    arcana: \"Minor\",\n    meaning: \"Leadership, vision, honor, entrepreneur spirit.\",\n    meaningUpright: \"The King of Wands represents natural leadership, vision, and entrepreneurial spirit. You have the ability to lead with honor.\",\n    emotionalGuidance: \"Lead with your heart and inspire others through your vision and integrity. Your leadership brings out the best in people.\",\n    mentalEncouragement: \"Your leadership skills and vision are exceptional. Use them to create positive change and inspire others.\",\n    childMessage: \"You're a natural leader! Like a wise king who cares for his people, you can guide others and create wonderful things together.\",\n    imageUrl: \"https://images.unsplash.com/photo-1578662996442-48f60103fc96?w=400&h=600&fit=crop\"\n  },\n\n  // Cups Suit\n  {\n    name: \"Ace of Cups\",\n    suit: \"Cups\",\n    number: 1,\n    arcana: \"Minor\",\n    meaning: \"New feelings, emotional awakening, love, compassion.\",\n    meaningUpright: \"The Ace of Cups represents new emotional beginnings, love, and compassion flowing into your life.\",\n    emotionalGuidance: \"Open your heart to new feelings and experiences. Love and compassion are flowing your way.\",\n    mentalEncouragement: \"Your emotional intelligence and capacity for love are beautiful gifts. Share them generously with the world.\",\n    childMessage: \"Your heart is full of love and kindness! Like a magical cup that never empties, you have endless love to share with others.\",\n    imageUrl: \"https://images.unsplash.com/photo-1551269901-5c5e14c25df7?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"Two of Cups\",\n    suit: \"Cups\",\n    number: 2,\n    arcana: \"Minor\",\n    meaning: \"Partnership, unity, mutual attraction, harmony.\",\n    meaningUpright: \"The Two of Cups represents partnership, deep connection, and mutual understanding between two people.\",\n    emotionalGuidance: \"Celebrate the special connections in your life. True partnership brings joy and mutual support.\",\n    mentalEncouragement: \"Your ability to connect deeply with others is a wonderful skill. Nurture your important relationships.\",\n    childMessage: \"You have special connections with people you care about! Like two best friends sharing everything, these bonds make life magical.\",\n    imageUrl: \"https://images.unsplash.com/photo-1551269901-5c5e14c25df7?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"Three of Cups\",\n    suit: \"Cups\",\n    number: 3,\n    arcana: \"Minor\",\n    meaning: \"Friendship, celebration, creativity, community.\",\n    meaningUpright: \"The Three of Cups represents friendship, celebration, and joyful community gatherings with people you love.\",\n    emotionalGuidance: \"Celebrate with friends and cherish the joy that comes from sharing happy moments with others.\",\n    mentalEncouragement: \"Your social connections and friendships enrich your life tremendously. Invest in these relationships.\",\n    childMessage: \"Time with friends is the best! Like a happy celebration with all your favorite people, friendship makes everything more fun.\",\n    imageUrl: \"https://images.unsplash.com/photo-1551269901-5c5e14c25df7?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"Four of Cups\",\n    suit: \"Cups\",\n    number: 4,\n    arcana: \"Minor\",\n    meaning: \"Apathy, contemplation, reevaluation, withdrawal.\",\n    meaningUpright: \"The Four of Cups represents taking time to think and reevaluate what's important to you. Sometimes we need quiet reflection.\",\n    emotionalGuidance: \"It's okay to feel contemplative sometimes. Use quiet time to understand your feelings and what you truly want.\",\n    mentalEncouragement: \"Taking time to reflect and reevaluate is wise. Your thoughtful nature helps you make good decisions.\",\n    childMessage: \"Sometimes you need time to think quietly about things. Like sitting under a tree and daydreaming, reflection helps you understand yourself better.\",\n    imageUrl: \"https://images.unsplash.com/photo-1551269901-5c5e14c25df7?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"Five of Cups\",\n    suit: \"Cups\",\n    number: 5,\n    arcana: \"Minor\",\n    meaning: \"Loss, grief, regret, focusing on the negative.\",\n    meaningUpright: \"The Five of Cups represents dealing with loss or disappointment. Remember that not everything is lost - there's still hope.\",\n    emotionalGuidance: \"It's natural to feel sad sometimes, but remember to look for the good things that remain in your life.\",\n    mentalEncouragement: \"Learning from disappointment makes you stronger and wiser. Focus on what you still have and what's possible.\",\n    childMessage: \"When you feel sad about losing something, remember there are still good things around you. Like finding new treasures after losing old ones.\",\n    imageUrl: \"https://images.unsplash.com/photo-1551269901-5c5e14c25df7?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"Six of Cups\",\n    suit: \"Cups\",\n    number: 6,\n    arcana: \"Minor\",\n    meaning: \"Nostalgia, childhood memories, innocence, joy.\",\n    meaningUpright: \"The Six of Cups represents happy memories, innocence, and the joy that comes from simple pleasures and childhood wonder.\",\n    emotionalGuidance: \"Cherish happy memories and let your inner child come out to play. Simple joys are the most precious.\",\n    mentalEncouragement: \"Your ability to find joy in simple things and maintain childlike wonder is a beautiful gift.\",\n    childMessage: \"The best memories are made of simple, happy moments! Like playing with friends or family hugs, these memories are precious treasures.\",\n    imageUrl: \"https://images.unsplash.com/photo-1551269901-5c5e14c25df7?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"Seven of Cups\",\n    suit: \"Cups\",\n    number: 7,\n    arcana: \"Minor\",\n    meaning: \"Illusion, choices, wishful thinking, temptation.\",\n    meaningUpright: \"The Seven of Cups represents many choices and possibilities, but not all of them may be realistic. Choose wisely.\",\n    emotionalGuidance: \"When you have many choices, listen to your heart to find what truly matters most to you.\",\n    mentalEncouragement: \"Use your wisdom to distinguish between realistic goals and impossible dreams. Focus on what's achievable.\",\n    childMessage: \"Sometimes you have lots of choices, like picking from many toys! Think carefully about which ones will really make you happy.\",\n    imageUrl: \"https://images.unsplash.com/photo-1551269901-5c5e14c25df7?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"Eight of Cups\",\n    suit: \"Cups\",\n    number: 8,\n    arcana: \"Minor\",\n    meaning: \"Walking away, seeking truth, deeper meaning.\",\n    meaningUpright: \"The Eight of Cups represents leaving something behind to search for deeper meaning and truth in your life.\",\n    emotionalGuidance: \"Sometimes you need to leave familiar things to grow and find what truly fulfills your heart.\",\n    mentalEncouragement: \"Your search for deeper meaning shows wisdom and courage. Trust your instincts about when it's time to move on.\",\n    childMessage: \"Sometimes you outgrow old things and need to find new adventures! Like a brave explorer, you can discover new and exciting paths.\",\n    imageUrl: \"https://images.unsplash.com/photo-1551269901-5c5e14c25df7?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"Nine of Cups\",\n    suit: \"Cups\",\n    number: 9,\n    arcana: \"Minor\",\n    meaning: \"Contentment, satisfaction, wishes fulfilled.\",\n    meaningUpright: \"The Nine of Cups represents contentment and satisfaction. Your wishes are being fulfilled and you have much to be happy about.\",\n    emotionalGuidance: \"Feel grateful for all the good things in your life. This satisfaction comes from appreciating what you have.\",\n    mentalEncouragement: \"You've worked hard and can now enjoy the fruits of your efforts. Take time to appreciate your achievements.\",\n    childMessage: \"You have so many good things to be happy about! Like having your birthday wishes come true, life is giving you wonderful gifts.\",\n    imageUrl: \"https://images.unsplash.com/photo-1551269901-5c5e14c25df7?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"Ten of Cups\",\n    suit: \"Cups\",\n    number: 10,\n    arcana: \"Minor\",\n    meaning: \"Happiness, fulfillment, family, harmony.\",\n    meaningUpright: \"The Ten of Cups represents complete emotional fulfillment, family happiness, and harmony in relationships.\",\n    emotionalGuidance: \"Celebrate the love and harmony in your family and close relationships. This is true wealth.\",\n    mentalEncouragement: \"You understand what truly matters in life - love, family, and emotional connections. This wisdom serves you well.\",\n    childMessage: \"Your family and the people who love you are your greatest treasures! Like a rainbow of love, they bring color and joy to your life.\",\n    imageUrl: \"https://images.unsplash.com/photo-1551269901-5c5e14c25df7?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"Page of Cups\",\n    suit: \"Cups\",\n    number: 11,\n    arcana: \"Minor\",\n    meaning: \"Imagination, intuition, curiosity, emotional messages.\",\n    meaningUpright: \"The Page of Cups represents imagination, intuition, and being open to emotional messages and creative inspiration.\",\n    emotionalGuidance: \"Trust your intuitive feelings and let your imagination guide you to creative solutions and new ideas.\",\n    mentalEncouragement: \"Your imaginative and intuitive nature is a wonderful gift. Use it to explore creative possibilities.\",\n    childMessage: \"Your imagination is amazing! Like a young artist with endless ideas, you can create beautiful things when you listen to your heart.\",\n    imageUrl: \"https://images.unsplash.com/photo-1551269901-5c5e14c25df7?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"Knight of Cups\",\n    suit: \"Cups\",\n    number: 12,\n    arcana: \"Minor\",\n    meaning: \"Romance, charm, following the heart, idealism.\",\n    meaningUpright: \"The Knight of Cups represents following your heart, romantic idealism, and bringing charm and beauty to the world.\",\n    emotionalGuidance: \"Follow your heart's guidance and bring beauty and romance to everything you do. Your idealism is inspiring.\",\n    mentalEncouragement: \"Your romantic and idealistic nature helps you see the beauty in life. Use this vision to inspire others.\",\n    childMessage: \"You see beauty everywhere and follow your heart! Like a charming knight spreading joy, you make the world more beautiful.\",\n    imageUrl: \"https://images.unsplash.com/photo-1551269901-5c5e14c25df7?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"Queen of Cups\",\n    suit: \"Cups\",\n    number: 13,\n    arcana: \"Minor\",\n    meaning: \"Compassion, nurturing, emotional security, intuition.\",\n    meaningUpright: \"The Queen of Cups represents deep compassion, nurturing nature, and strong intuition. You provide emotional security to others.\",\n    emotionalGuidance: \"Your compassionate and nurturing nature is a gift to everyone around you. Trust your emotional wisdom.\",\n    mentalEncouragement: \"Your emotional intelligence and intuitive abilities are exceptional. Use them to help and heal others.\",\n    childMessage: \"You have the biggest, most caring heart! Like a loving queen who takes care of everyone, you make others feel safe and loved.\",\n    imageUrl: \"https://images.unsplash.com/photo-1551269901-5c5e14c25df7?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"King of Cups\",\n    suit: \"Cups\",\n    number: 14,\n    arcana: \"Minor\",\n    meaning: \"Emotional balance, wisdom, diplomacy, control.\",\n    meaningUpright: \"The King of Cups represents emotional maturity, wisdom, and the ability to balance feelings with logic.\",\n    emotionalGuidance: \"You have the wisdom to balance your emotions with clear thinking. This makes you a natural peacemaker.\",\n    mentalEncouragement: \"Your emotional balance and diplomatic skills help you solve problems and bring people together.\",\n    childMessage: \"You're wise about feelings and help others get along! Like a kind king who brings peace, you help everyone feel understood.\",\n    imageUrl: \"https://images.unsplash.com/photo-1551269901-5c5e14c25df7?w=400&h=600&fit=crop\"\n  },\n\n  // Swords Suit\n  {\n    name: \"Ace of Swords\",\n    suit: \"Swords\",\n    number: 1,\n    arcana: \"Minor\",\n    meaning: \"Breakthrough, clarity, new ideas, truth.\",\n    meaningUpright: \"The Ace of Swords represents mental clarity, breakthrough moments, and powerful new ideas cutting through confusion.\",\n    emotionalGuidance: \"Trust the clarity that comes when you think clearly and honestly about situations.\",\n    mentalEncouragement: \"Your mind is sharp and clear. Use this mental power to cut through problems and find solutions.\",\n    childMessage: \"Your brain is super smart! Like a bright light cutting through darkness, your clear thinking helps you understand things better.\",\n    imageUrl: \"https://images.unsplash.com/photo-1518709268805-4e9042af2176?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"Two of Swords\",\n    suit: \"Swords\",\n    number: 2,\n    arcana: \"Minor\",\n    meaning: \"Difficult choices, indecision, stalemate, balance.\",\n    meaningUpright: \"The Two of Swords represents difficult decisions and the need to weigh options carefully before choosing.\",\n    emotionalGuidance: \"When facing difficult choices, take time to consider both your heart and your mind before deciding.\",\n    mentalEncouragement: \"Your careful consideration of options shows wisdom. Trust yourself to make the right choice when you're ready.\",\n    childMessage: \"Sometimes choices are hard to make! Like choosing between two favorite toys, take your time to think about what feels right.\",\n    imageUrl: \"https://images.unsplash.com/photo-1518709268805-4e9042af2176?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"Three of Swords\",\n    suit: \"Swords\",\n    number: 3,\n    arcana: \"Minor\",\n    meaning: \"Heartbreak, grief, separation, sorrow.\",\n    meaningUpright: \"The Three of Swords represents heartbreak and emotional pain. Healing takes time, but it will come.\",\n    emotionalGuidance: \"It's okay to feel sad when your heart hurts. Allow yourself to heal and know that pain will eventually pass.\",\n    mentalEncouragement: \"Going through difficult emotions makes you stronger and more compassionate. You will heal from this.\",\n    childMessage: \"When your heart feels sad, it's okay to cry and feel hurt. Like a cut that heals with time, your heart will feel better too.\",\n    imageUrl: \"https://images.unsplash.com/photo-1518709268805-4e9042af2176?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"Four of Swords\",\n    suit: \"Swords\",\n    number: 4,\n    arcana: \"Minor\",\n    meaning: \"Rest, recovery, meditation, contemplation.\",\n    meaningUpright: \"The Four of Swords represents the need for rest, recovery, and quiet contemplation to restore your energy.\",\n    emotionalGuidance: \"Give yourself permission to rest and recharge. Quiet time helps your emotions settle and heal.\",\n    mentalEncouragement: \"Your mind needs rest just like your body does. Meditation and quiet time will restore your mental clarity.\",\n    childMessage: \"Everyone needs rest to feel their best! Like sleeping to have sweet dreams, quiet time helps your mind and heart feel peaceful.\",\n    imageUrl: \"https://images.unsplash.com/photo-1518709268805-4e9042af2176?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"Five of Swords\",\n    suit: \"Swords\",\n    number: 5,\n    arcana: \"Minor\",\n    meaning: \"Conflict, defeat, betrayal, loss.\",\n    meaningUpright: \"The Five of Swords represents conflict and the aftermath of disagreements. Not every battle is worth winning.\",\n    emotionalGuidance: \"Learn from conflicts but don't let them make your heart bitter. Choose your battles wisely.\",\n    mentalEncouragement: \"Sometimes losing a battle teaches you more than winning. Use these experiences to grow wiser.\",\n    childMessage: \"Not every argument needs to be won. Sometimes it's better to be kind than to be right, and that shows true wisdom.\",\n    imageUrl: \"https://images.unsplash.com/photo-1518709268805-4e9042af2176?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"Six of Swords\",\n    suit: \"Swords\",\n    number: 6,\n    arcana: \"Minor\",\n    meaning: \"Transition, moving forward, healing, leaving behind.\",\n    meaningUpright: \"The Six of Swords represents moving away from troubled waters toward calmer, more peaceful circumstances.\",\n    emotionalGuidance: \"You're moving toward better times. Trust that leaving difficult situations behind will bring you peace.\",\n    mentalEncouragement: \"Your decision to move forward shows wisdom and courage. Better times are ahead.\",\n    childMessage: \"You're like a brave traveler moving toward better places! Leaving sad times behind helps you find happier adventures.\",\n    imageUrl: \"https://images.unsplash.com/photo-1518709268805-4e9042af2176?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"Seven of Swords\",\n    suit: \"Swords\",\n    number: 7,\n    arcana: \"Minor\",\n    meaning: \"Deception, trickery, strategy, secrecy.\",\n    meaningUpright: \"The Seven of Swords represents the need to be clever and strategic, but be careful not to deceive others unfairly.\",\n    emotionalGuidance: \"Use your intelligence wisely and always try to be honest with others and yourself.\",\n    mentalEncouragement: \"Your strategic thinking is an asset, but make sure to use it ethically and fairly.\",\n    childMessage: \"Being clever is great, but always try to be honest too! Like a smart detective solving mysteries, use your brain for good.\",\n    imageUrl: \"https://images.unsplash.com/photo-1518709268805-4e9042af2176?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"Eight of Swords\",\n    suit: \"Swords\",\n    number: 8,\n    arcana: \"Minor\",\n    meaning: \"Restriction, fear, isolation, feeling trapped.\",\n    meaningUpright: \"The Eight of Swords represents feeling trapped or restricted, but remember that many limitations are self-imposed.\",\n    emotionalGuidance: \"You have more freedom than you think. Don't let fear keep you trapped in situations you can change.\",\n    mentalEncouragement: \"Your mind is powerful enough to find solutions. Look for ways to free yourself from limiting thoughts.\",\n    childMessage: \"Sometimes we feel stuck, but there are usually ways out! Like a bird learning it can fly, you can find your freedom too.\",\n    imageUrl: \"https://images.unsplash.com/photo-1518709268805-4e9042af2176?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"Nine of Swords\",\n    suit: \"Swords\",\n    number: 9,\n    arcana: \"Minor\",\n    meaning: \"Anxiety, worry, guilt, nightmares.\",\n    meaningUpright: \"The Nine of Swords represents anxiety and worry, often about things that may never happen. Try to find peace in your mind.\",\n    emotionalGuidance: \"Worrying doesn't solve problems, but talking about your fears with someone you trust can help.\",\n    mentalEncouragement: \"Your anxious thoughts don't define reality. Focus on what you can control and let go of the rest.\",\n    childMessage: \"When worries make you feel scared, remember that most scary thoughts never come true. Talk to someone who loves you about your worries.\",\n    imageUrl: \"https://images.unsplash.com/photo-1518709268805-4e9042af2176?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"Ten of Swords\",\n    suit: \"Swords\",\n    number: 10,\n    arcana: \"Minor\",\n    meaning: \"Endings, betrayal, painful loss, crisis.\",\n    meaningUpright: \"The Ten of Swords represents a painful ending, but remember that after the darkest night comes the dawn.\",\n    emotionalGuidance: \"Even in the darkest moments, know that this pain will pass and better times will come.\",\n    mentalEncouragement: \"You have the strength to survive this difficult ending and begin anew. This is not your final story.\",\n    childMessage: \"When something really sad happens, it feels like the end of everything. But like the sun rising after the darkest night, good things will come again.\",\n    imageUrl: \"https://images.unsplash.com/photo-1518709268805-4e9042af2176?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"Page of Swords\",\n    suit: \"Swords\",\n    number: 11,\n    arcana: \"Minor\",\n    meaning: \"Curiosity, vigilance, communication, truth-seeking.\",\n    meaningUpright: \"The Page of Swords represents curiosity, eagerness to learn, and the courage to seek truth and communicate clearly.\",\n    emotionalGuidance: \"Your curiosity and desire for truth are admirable. Use these qualities to learn and grow.\",\n    mentalEncouragement: \"Your quick mind and communication skills are developing beautifully. Keep asking questions and seeking knowledge.\",\n    childMessage: \"You love learning new things and asking questions! Like a young detective, your curiosity helps you discover amazing truths about the world.\",\n    imageUrl: \"https://images.unsplash.com/photo-1518709268805-4e9042af2176?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"Knight of Swords\",\n    suit: \"Swords\",\n    number: 12,\n    arcana: \"Minor\",\n    meaning: \"Ambition, determination, swift action, impulsiveness.\",\n    meaningUpright: \"The Knight of Swords represents swift action, determination, and ambitious pursuit of goals.\",\n    emotionalGuidance: \"Your determination is admirable, but remember to consider others' feelings as you pursue your goals.\",\n    mentalEncouragement: \"Your ambition and quick thinking can achieve great things. Channel this energy wisely and effectively.\",\n    childMessage: \"You're determined and quick to act! Like a fast knight riding toward adventure, you can achieve your goals with focus and determination.\",\n    imageUrl: \"https://images.unsplash.com/photo-1518709268805-4e9042af2176?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"Queen of Swords\",\n    suit: \"Swords\",\n    number: 13,\n    arcana: \"Minor\",\n    meaning: \"Independence, clarity, perception, intellect.\",\n    meaningUpright: \"The Queen of Swords represents intellectual clarity, independence, and the ability to see situations objectively.\",\n    emotionalGuidance: \"Balance your sharp intellect with compassion. Your clear thinking helps others, but kindness makes it more effective.\",\n    mentalEncouragement: \"Your intellectual abilities and clear perception are exceptional gifts. Use them to help and guide others.\",\n    childMessage: \"You think clearly and see things as they really are! Like a wise queen who helps people understand, your smart thinking is a wonderful gift.\",\n    imageUrl: \"https://images.unsplash.com/photo-1518709268805-4e9042af2176?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"King of Swords\",\n    suit: \"Swords\",\n    number: 14,\n    arcana: \"Minor\",\n    meaning: \"Authority, truth, discipline, intellectual power.\",\n    meaningUpright: \"The King of Swords represents intellectual authority, pursuit of truth, and disciplined thinking.\",\n    emotionalGuidance: \"Use your intellectual authority wisely and always in service of truth and justice.\",\n    mentalEncouragement: \"Your disciplined mind and intellectual power can solve complex problems and lead others to truth.\",\n    childMessage: \"You're really smart and fair! Like a wise king who makes good decisions, you can use your intelligence to help others and solve problems.\",\n    imageUrl: \"https://images.unsplash.com/photo-1518709268805-4e9042af2176?w=400&h=600&fit=crop\"\n  },\n\n  // Pentacles Suit\n  {\n    name: \"Ace of Pentacles\",\n    suit: \"Pentacles\",\n    number: 1,\n    arcana: \"Minor\",\n    meaning: \"New opportunities, prosperity, abundance, stability.\",\n    meaningUpright: \"The Ace of Pentacles represents new opportunities for prosperity, abundance, and material stability entering your life.\",\n    emotionalGuidance: \"Feel excited about new opportunities and trust that abundance is flowing your way.\",\n    mentalEncouragement: \"Your practical thinking and planning abilities will help you make the most of new opportunities.\",\n    childMessage: \"Exciting new opportunities are coming your way! Like finding a treasure chest, wonderful things are waiting for you to discover.\",\n    imageUrl: \"https://images.unsplash.com/photo-1502134249126-9f3755a50d78?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"Two of Pentacles\",\n    suit: \"Pentacles\",\n    number: 2,\n    arcana: \"Minor\",\n    meaning: \"Balance, adaptability, juggling priorities.\",\n    meaningUpright: \"The Two of Pentacles represents juggling multiple responsibilities and finding balance in a busy life.\",\n    emotionalGuidance: \"Stay flexible and don't stress too much about having many things to do. You can handle it with grace.\",\n    mentalEncouragement: \"Your adaptability and multitasking abilities are impressive. You can balance everything successfully.\",\n    childMessage: \"You're great at doing lots of things at once! Like a skilled juggler keeping balls in the air, you can balance all your activities.\",\n    imageUrl: \"https://images.unsplash.com/photo-1502134249126-9f3755a50d78?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"Three of Pentacles\",\n    suit: \"Pentacles\",\n    number: 3,\n    arcana: \"Minor\",\n    meaning: \"Teamwork, collaboration, learning, building.\",\n    meaningUpright: \"The Three of Pentacles represents successful teamwork, collaboration, and learning from others to build something meaningful.\",\n    emotionalGuidance: \"Working with others brings joy and creates stronger results. Value the contributions of your teammates.\",\n    mentalEncouragement: \"Your ability to collaborate and learn from others is a valuable skill that will serve you well.\",\n    childMessage: \"Working together with others is fun and makes everything better! Like builders creating something amazing, teamwork makes dreams come true.\",\n    imageUrl: \"https://images.unsplash.com/photo-1502134249126-9f3755a50d78?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"Four of Pentacles\",\n    suit: \"Pentacles\",\n    number: 4,\n    arcana: \"Minor\",\n    meaning: \"Security, control, holding on, conservatism.\",\n    meaningUpright: \"The Four of Pentacles represents the desire for security and control, but be careful not to hold on too tightly.\",\n    emotionalGuidance: \"It's good to feel secure, but don't let the need for control prevent you from enjoying life and being generous.\",\n    mentalEncouragement: \"Your careful planning creates security, but remember to balance saving with sharing and enjoying life.\",\n    childMessage: \"It's good to take care of your things, but don't forget to share and have fun too! Like keeping some candy but sharing some with friends.\",\n    imageUrl: \"https://images.unsplash.com/photo-1502134249126-9f3755a50d78?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"Five of Pentacles\",\n    suit: \"Pentacles\",\n    number: 5,\n    arcana: \"Minor\",\n    meaning: \"Hardship, financial loss, insecurity, struggle.\",\n    meaningUpright: \"The Five of Pentacles represents temporary hardship and struggle, but help and better times are available if you look for them.\",\n    emotionalGuidance: \"During difficult times, don't be afraid to ask for help from others who care about you.\",\n    mentalEncouragement: \"Remember that hardships are temporary. Focus on solutions and don't be too proud to accept help.\",\n    childMessage: \"When things feel hard and you need help, it's okay to ask for it! Like knocking on a friend's door when it's cold, help is always available.\",\n    imageUrl: \"https://images.unsplash.com/photo-1502134249126-9f3755a50d78?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"Six of Pentacles\",\n    suit: \"Pentacles\",\n    number: 6,\n    arcana: \"Minor\",\n    meaning: \"Generosity, charity, sharing wealth, fairness.\",\n    meaningUpright: \"The Six of Pentacles represents generosity, fair exchange, and the joy that comes from sharing your abundance with others.\",\n    emotionalGuidance: \"Sharing with others brings wonderful feelings of connection and purpose. Generosity makes your heart happy.\",\n    mentalEncouragement: \"Your understanding of fair exchange and generosity creates positive relationships and communities.\",\n    childMessage: \"Sharing with others feels so good! Like giving gifts that make people smile, your generosity makes the world a happier place.\",\n    imageUrl: \"https://images.unsplash.com/photo-1502134249126-9f3755a50d78?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"Seven of Pentacles\",\n    suit: \"Pentacles\",\n    number: 7,\n    arcana: \"Minor\",\n    meaning: \"Patience, perseverance, investment, long-term view.\",\n    meaningUpright: \"The Seven of Pentacles represents patience, perseverance, and taking a long-term view of your investments and efforts.\",\n    emotionalGuidance: \"Be patient with your progress. Good things take time to grow, and your efforts will eventually pay off.\",\n    mentalEncouragement: \"Your ability to think long-term and persevere through challenges will lead to lasting success.\",\n    childMessage: \"Good things take time to grow! Like planting seeds and waiting for flowers, your hard work will bloom into something beautiful.\",\n    imageUrl: \"https://images.unsplash.com/photo-1502134249126-9f3755a50d78?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"Eight of Pentacles\",\n    suit: \"Pentacles\",\n    number: 8,\n    arcana: \"Minor\",\n    meaning: \"Apprenticeship, diligence, skill development, mastery.\",\n    meaningUpright: \"The Eight of Pentacles represents dedicated practice, skill development, and the path toward mastery through diligent work.\",\n    emotionalGuidance: \"Take pride in learning and developing your skills. The journey toward mastery is rewarding in itself.\",\n    mentalEncouragement: \"Your dedication to learning and improving your skills will lead to mastery and success.\",\n    childMessage: \"Practice makes perfect! Like learning to ride a bike or play an instrument, working hard at something helps you become really good at it.\",\n    imageUrl: \"https://images.unsplash.com/photo-1502134249126-9f3755a50d78?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"Nine of Pentacles\",\n    suit: \"Pentacles\",\n    number: 9,\n    arcana: \"Minor\",\n    meaning: \"Luxury, self-sufficiency, accomplishment, independence.\",\n    meaningUpright: \"The Nine of Pentacles represents financial independence, luxury earned through hard work, and self-sufficiency.\",\n    emotionalGuidance: \"Feel proud of what you've accomplished through your own efforts. You deserve to enjoy the fruits of your labor.\",\n    mentalEncouragement: \"Your independence and self-sufficiency are admirable achievements that you should celebrate.\",\n    childMessage: \"You've worked hard and achieved wonderful things! Like a gardener enjoying beautiful flowers they grew themselves, you can be proud of your success.\",\n    imageUrl: \"https://images.unsplash.com/photo-1502134249126-9f3755a50d78?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"Ten of Pentacles\",\n    suit: \"Pentacles\",\n    number: 10,\n    arcana: \"Minor\",\n    meaning: \"Wealth, legacy, family, long-term success.\",\n    meaningUpright: \"The Ten of Pentacles represents lasting wealth, family prosperity, and creating a legacy that benefits future generations.\",\n    emotionalGuidance: \"Think about the legacy you want to leave and how your success can benefit your family and community.\",\n    mentalEncouragement: \"Your long-term thinking and planning create lasting prosperity that extends beyond yourself to benefit others.\",\n    childMessage: \"The best success is when everyone in your family is happy and secure! Like building a strong house that keeps everyone safe and comfortable.\",\n    imageUrl: \"https://images.unsplash.com/photo-1502134249126-9f3755a50d78?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"Page of Pentacles\",\n    suit: \"Pentacles\",\n    number: 11,\n    arcana: \"Minor\",\n    meaning: \"Manifestation, new job, study, ambition.\",\n    meaningUpright: \"The Page of Pentacles represents new opportunities for learning, ambition beginning to manifest, and practical studies.\",\n    emotionalGuidance: \"Feel excited about new opportunities to learn and grow. Your ambition will guide you toward success.\",\n    mentalEncouragement: \"Your practical approach to learning and your ambition will help you achieve your material goals.\",\n    childMessage: \"You're ready to learn new practical things and work toward your dreams! Like a student excited about a new subject, your eagerness will help you succeed.\",\n    imageUrl: \"https://images.unsplash.com/photo-1502134249126-9f3755a50d78?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"Knight of Pentacles\",\n    suit: \"Pentacles\",\n    number: 12,\n    arcana: \"Minor\",\n    meaning: \"Hard work, responsibility, routine, patience.\",\n    meaningUpright: \"The Knight of Pentacles represents steady progress through hard work, responsibility, and patient dedication to your goals.\",\n    emotionalGuidance: \"Take satisfaction in steady progress and responsible actions. Consistent effort brings lasting results.\",\n    mentalEncouragement: \"Your methodical approach and strong work ethic will help you achieve your goals reliably and thoroughly.\",\n    childMessage: \"You work hard and are very responsible! Like a steady horse carrying its rider safely to their destination, your reliability is a wonderful strength.\",\n    imageUrl: \"https://images.unsplash.com/photo-1502134249126-9f3755a50d78?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"Queen of Pentacles\",\n    suit: \"Pentacles\",\n    number: 13,\n    arcana: \"Minor\",\n    meaning: \"Nurturing, practicality, abundance, security.\",\n    meaningUpright: \"The Queen of Pentacles represents nurturing others through practical means, creating abundance and security for everyone around you.\",\n    emotionalGuidance: \"Your nurturing and practical nature creates a secure environment where others can thrive.\",\n    mentalEncouragement: \"Your ability to balance practical matters with caring for others makes you a natural provider and protector.\",\n    childMessage: \"You take care of others in practical, helpful ways! Like a loving parent making sure everyone has what they need, you help create security and comfort.\",\n    imageUrl: \"https://images.unsplash.com/photo-1502134249126-9f3755a50d78?w=400&h=600&fit=crop\"\n  },\n  {\n    name: \"King of Pentacles\",\n    suit: \"Pentacles\",\n    number: 14,\n    arcana: \"Minor\",\n    meaning: \"Wealth, leadership, stability, discipline.\",\n    meaningUpright: \"The King of Pentacles represents financial success, reliable leadership, and the disciplined approach that creates lasting wealth.\",\n    emotionalGuidance: \"Use your success and resources to help others and create stability in your community.\",\n    mentalEncouragement: \"Your leadership and financial wisdom create lasting prosperity not just for yourself but for everyone around you.\",\n    childMessage: \"You're a natural leader who helps everyone prosper! Like a wise king who makes sure his kingdom is wealthy and stable, you help create success for everyone.\",\n    imageUrl: \"https://images.unsplash.com/photo-1502134249126-9f3755a50d78?w=400&h=600&fit=crop\"\n  }\n];\n\nexport const allTarotCards = [...majorArcana, ...minorArcana];\n\nexport function getRandomTarotCard(): TarotCard {\n  return allTarotCards[Math.floor(Math.random() * allTarotCards.length)];\n}\n\nexport function getTarotCardByName(name: string): TarotCard | undefined {\n  return allTarotCards.find(card => card.name.toLowerCase() === name.toLowerCase());\n}","size_bytes":67988},"client/src/components/Header.tsx":{"content":"export default function Header() {\n  return (\n    <header className=\"relative z-10 p-6 text-center\">\n      <div className=\"flex items-center justify-center gap-3 mb-4\">\n        <div className=\"text-4xl text-accent star-sparkle\">\n          <i className=\"fas fa-star\"></i>\n        </div>\n        <h1 className=\"text-4xl md:text-5xl font-serif font-bold text-foreground\">\n          Celestial Insights\n        </h1>\n        <div className=\"text-4xl text-accent star-sparkle\">\n          <i className=\"fas fa-star\"></i>\n        </div>\n      </div>\n      <p className=\"text-lg text-muted-foreground mb-6\">Your Personal Horoscope & Spiritual Journey</p>\n      <p className=\"text-sm dynamic-text font-medium\">\n        Created by Souhail and Maria\n      </p>\n    </header>\n  );\n}\n","size_bytes":770},"client/src/components/HoroscopeForm.tsx":{"content":"import { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport type { UserData } from \"@/pages/home\";\n\ninterface HoroscopeFormProps {\n  onSubmit: (data: UserData) => void;\n}\n\nexport default function HoroscopeForm({ onSubmit }: HoroscopeFormProps) {\n  const [formData, setFormData] = useState<UserData>({\n    name: \"\",\n    birthDate: \"\",\n    birthTime: \"\",\n    birthLocation: \"\",\n  });\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (formData.name && formData.birthDate && formData.birthLocation) {\n      onSubmit(formData);\n    }\n  };\n\n  const handleChange = (field: keyof UserData, value: string) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n  };\n\n  return (\n    <Card className=\"bg-card/80 backdrop-blur-sm card-glow\">\n      <CardContent className=\"p-6\">\n        <h2 className=\"text-2xl font-serif font-semibold mb-6 text-center text-accent\">\n          <i className=\"fas fa-moon mr-2\"></i>\n          Enter Your Birth Details\n        </h2>\n        \n        <form onSubmit={handleSubmit} className=\"grid md:grid-cols-2 gap-6\">\n          <div>\n            <Label htmlFor=\"name\" className=\"block text-sm font-medium mb-2 text-foreground\">\n              Full Name\n            </Label>\n            <Input\n              id=\"name\"\n              type=\"text\"\n              value={formData.name}\n              onChange={(e) => handleChange(\"name\", e.target.value)}\n              className=\"w-full form-input bg-input border-border text-foreground\"\n              placeholder=\"Enter your full name\"\n              data-testid=\"input-name\"\n              required\n            />\n          </div>\n          \n          <div>\n            <Label htmlFor=\"birthDate\" className=\"block text-sm font-medium mb-2 text-foreground\">\n              Date of Birth\n            </Label>\n            <Input\n              id=\"birthDate\"\n              type=\"date\"\n              value={formData.birthDate}\n              onChange={(e) => handleChange(\"birthDate\", e.target.value)}\n              className=\"w-full form-input bg-input border-border text-foreground\"\n              data-testid=\"input-birth-date\"\n              required\n            />\n          </div>\n          \n          <div>\n            <Label htmlFor=\"birthTime\" className=\"block text-sm font-medium mb-2 text-foreground\">\n              Birth Time (Optional)\n            </Label>\n            <Input\n              id=\"birthTime\"\n              type=\"time\"\n              value={formData.birthTime}\n              onChange={(e) => handleChange(\"birthTime\", e.target.value)}\n              className=\"w-full form-input bg-input border-border text-foreground\"\n              data-testid=\"input-birth-time\"\n            />\n          </div>\n          \n          <div>\n            <Label htmlFor=\"birthLocation\" className=\"block text-sm font-medium mb-2 text-foreground\">\n              Birth Location\n            </Label>\n            <Input\n              id=\"birthLocation\"\n              type=\"text\"\n              value={formData.birthLocation}\n              onChange={(e) => handleChange(\"birthLocation\", e.target.value)}\n              className=\"w-full form-input bg-input border-border text-foreground\"\n              placeholder=\"City, Country\"\n              data-testid=\"input-birth-location\"\n              required\n            />\n          </div>\n          \n          <div className=\"md:col-span-2 text-center\">\n            <Button\n              type=\"submit\"\n              className=\"bg-primary hover:bg-primary/90 text-primary-foreground px-8 py-3 font-semibold\"\n              data-testid=\"button-submit\"\n            >\n              <i className=\"fas fa-sparkles mr-2\"></i>\n              Reveal My Celestial Insights\n            </Button>\n          </div>\n        </form>\n      </CardContent>\n    </Card>\n  );\n}\n","size_bytes":3967},"client/src/components/HoroscopeResults.tsx":{"content":"import { useMemo } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { getRandomTarotCard } from \"@/lib/tarotCards\";\nimport { getZodiacSign, getMoonPhase, generatePersonalizedMessage } from \"@/lib/horoscope\";\nimport type { UserData } from \"@/pages/home\";\n\ninterface HoroscopeResultsProps {\n  userData: UserData;\n  onBack: () => void;\n}\n\nexport default function HoroscopeResults({ userData, onBack }: HoroscopeResultsProps) {\n  const horoscopeData = useMemo(() => {\n    const birthDate = new Date(userData.birthDate);\n    const zodiacSign = getZodiacSign(birthDate);\n    const moonPhase = getMoonPhase();\n    const tarotCard = getRandomTarotCard();\n    const personalizedMessage = generatePersonalizedMessage(zodiacSign.name, tarotCard.name);\n    \n    return {\n      zodiacSign,\n      moonPhase,\n      tarotCard,\n      personalizedMessage,\n    };\n  }, [userData]);\n\n  return (\n    <div className=\"results-container\">\n      <Card className=\"bg-card/80 backdrop-blur-sm card-glow\">\n        <CardContent className=\"p-6\">\n          <div className=\"flex justify-between items-center mb-6\">\n            <h2 className=\"text-3xl font-serif font-bold text-accent\">\n              Your Celestial Reading\n            </h2>\n            <Button\n              onClick={onBack}\n              variant=\"outline\"\n              className=\"border-border text-foreground hover:bg-muted\"\n              data-testid=\"button-back\"\n            >\n              <i className=\"fas fa-arrow-left mr-2\"></i>\n              Back\n            </Button>\n          </div>\n\n          {/* Personal Info */}\n          <div className=\"mb-8 text-center\">\n            <h3 className=\"text-xl font-serif text-primary mb-2\">\n              Welcome, {userData.name}\n            </h3>\n            <p className=\"text-muted-foreground\">\n              Born on {new Date(userData.birthDate).toLocaleDateString('en-US', { \n                weekday: 'long', \n                year: 'numeric', \n                month: 'long', \n                day: 'numeric' \n              })}\n              {userData.birthTime && ` at ${userData.birthTime}`}\n              {userData.birthLocation && ` in ${userData.birthLocation}`}\n            </p>\n          </div>\n\n          {/* Zodiac Information */}\n          <div className=\"mb-8\">\n            <h3 className=\"text-2xl font-serif font-semibold mb-4 text-accent flex items-center\">\n              <i className=\"fas fa-sun mr-3\"></i>\n              Your Zodiac Profile\n            </h3>\n            <div className=\"grid md:grid-cols-2 gap-6\">\n              <Card className=\"bg-muted/30 hover-lift\" data-testid=\"card-sun-sign\">\n                <CardContent className=\"p-4\">\n                  <h4 className=\"font-semibold text-lg mb-2 text-primary\">\n                    Sun Sign: {horoscopeData.zodiacSign.name} {horoscopeData.zodiacSign.symbol}\n                  </h4>\n                  <p className=\"text-muted-foreground mb-3\">\n                    {horoscopeData.zodiacSign.dates}\n                  </p>\n                  <p className=\"text-foreground mb-3\">\n                    As a {horoscopeData.zodiacSign.name}, you embody the qualities of {horoscopeData.zodiacSign.element.toLowerCase()} energy. \n                    Your {horoscopeData.zodiacSign.quality.toLowerCase()} nature, guided by {horoscopeData.zodiacSign.ruling_planet}, \n                    brings unique strengths to your personality and life path.\n                  </p>\n                  <div className=\"text-sm text-foreground\">\n                    <p><strong>Element:</strong> {horoscopeData.zodiacSign.element}</p>\n                    <p><strong>Quality:</strong> {horoscopeData.zodiacSign.quality}</p>\n                    <p><strong>Ruling Planet:</strong> {horoscopeData.zodiacSign.ruling_planet}</p>\n                  </div>\n                </CardContent>\n              </Card>\n              \n              <Card className=\"bg-muted/30 hover-lift\" data-testid=\"card-moon-sign\">\n                <CardContent className=\"p-4\">\n                  <h4 className=\"font-semibold text-lg mb-2 text-primary\">Moon Sign: Intuitive Guide</h4>\n                  <p className=\"text-muted-foreground mb-3\">\n                    Your emotional landscape and inner wisdom\n                  </p>\n                  <p className=\"text-foreground mb-3\">\n                    Your lunar influence enhances your natural {horoscopeData.zodiacSign.name} traits with deep intuition \n                    and emotional intelligence. This creates a beautiful balance between your outer expression and inner world.\n                  </p>\n                  <div className=\"text-sm text-foreground\">\n                    <p><strong>Emotional Style:</strong> Intuitive, protective</p>\n                    <p><strong>Needs:</strong> Security, meaningful connections</p>\n                    <p><strong>Gifts:</strong> Empathy, wisdom, healing presence</p>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n\n          {/* Current Moon Phase */}\n          <div className=\"mb-8\">\n            <h3 className=\"text-2xl font-serif font-semibold mb-4 text-accent flex items-center\">\n              <i className=\"fas fa-moon mr-3\"></i>\n              Current Lunar Energy\n            </h3>\n            <Card className=\"bg-muted/30\" data-testid=\"card-moon-phase\">\n              <CardContent className=\"p-6\">\n                <div className=\"flex items-center gap-4 mb-4\">\n                  <div className=\"text-4xl text-accent\">{horoscopeData.moonPhase.emoji}</div>\n                  <div>\n                    <h4 className=\"font-semibold text-lg text-primary\">{horoscopeData.moonPhase.name}</h4>\n                    <p className=\"text-muted-foreground\">{horoscopeData.moonPhase.meaning}</p>\n                  </div>\n                </div>\n                <p className=\"text-foreground mb-4\">\n                  {horoscopeData.moonPhase.description}\n                </p>\n                <Card className=\"bg-primary/20\">\n                  <CardContent className=\"p-4\">\n                    <h5 className=\"font-semibold text-accent mb-2\">Energy Guidance:</h5>\n                    <ul className=\"text-sm text-foreground space-y-1\">\n                      {horoscopeData.moonPhase.guidance.map((item, index) => (\n                        <li key={index}>• {item}</li>\n                      ))}\n                    </ul>\n                  </CardContent>\n                </Card>\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Tarot Card Section */}\n          <div className=\"mb-8\">\n            <h3 className=\"text-2xl font-serif font-semibold mb-4 text-accent flex items-center\">\n              <i className=\"fas fa-magic mr-3\"></i>\n              Your Daily Tarot Guidance\n            </h3>\n            <Card className=\"bg-muted/30\" data-testid=\"card-tarot\">\n              <CardContent className=\"p-6\">\n                <div className=\"grid md:grid-cols-3 gap-6 items-center\">\n                  <div className=\"tarot-card mx-auto\">\n                    <img\n                      src={horoscopeData.tarotCard.imageUrl}\n                      alt={`${horoscopeData.tarotCard.name} Tarot Card`}\n                      className=\"rounded-lg shadow-lg w-48 h-72 object-cover mx-auto\"\n                      data-testid=\"img-tarot-card\"\n                    />\n                  </div>\n                  \n                  <div className=\"md:col-span-2\">\n                    <h4 className=\"font-serif text-2xl font-semibold text-primary mb-3\">\n                      {horoscopeData.tarotCard.name} ✨\n                    </h4>\n                    <p className=\"text-foreground mb-4 italic\">\n                      \"{horoscopeData.tarotCard.meaningUpright}\"\n                    </p>\n                    <p className=\"text-muted-foreground mb-4\">\n                      {horoscopeData.tarotCard.emotionalGuidance}\n                    </p>\n                    <Card className=\"bg-accent/20\">\n                      <CardContent className=\"p-4\">\n                        <h5 className=\"font-semibold text-accent mb-2\">Mental Encouragement:</h5>\n                        <p className=\"text-foreground font-medium\">\n                          {horoscopeData.tarotCard.mentalEncouragement}\n                        </p>\n                      </CardContent>\n                    </Card>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Emotional & Energy Guidance */}\n          <div className=\"mb-8\">\n            <h3 className=\"text-2xl font-serif font-semibold mb-4 text-accent flex items-center\">\n              <i className=\"fas fa-heart mr-3\"></i>\n              Emotional & Energy Wellness\n            </h3>\n            <div className=\"grid md:grid-cols-2 gap-6\">\n              <Card className=\"bg-muted/30 hover-lift\" data-testid=\"card-energy\">\n                <CardContent className=\"p-4\">\n                  <h4 className=\"font-semibold text-lg mb-3 text-primary\">\n                    <i className=\"fas fa-leaf mr-2\"></i>\n                    Energy Recommendations\n                  </h4>\n                  <ul className=\"space-y-2 text-foreground\">\n                    <li className=\"flex items-start gap-2\">\n                      <span className=\"text-accent mt-1\">🌟</span>\n                      <span>Morning meditation for 10 minutes to center your {horoscopeData.zodiacSign.element.toLowerCase()} energy</span>\n                    </li>\n                    <li className=\"flex items-start gap-2\">\n                      <span className=\"text-accent mt-1\">🌊</span>\n                      <span>Stay hydrated and eat foods that nourish your elemental nature</span>\n                    </li>\n                    <li className=\"flex items-start gap-2\">\n                      <span className=\"text-accent mt-1\">🔥</span>\n                      <span>Channel your {horoscopeData.zodiacSign.name} nature into creative projects</span>\n                    </li>\n                    <li className=\"flex items-start gap-2\">\n                      <span className=\"text-accent mt-1\">🌙</span>\n                      <span>Evening reflection to process emotions and experiences</span>\n                    </li>\n                  </ul>\n                </CardContent>\n              </Card>\n              \n              <Card className=\"bg-muted/30 hover-lift\" data-testid=\"card-emotional-balance\">\n                <CardContent className=\"p-4\">\n                  <h4 className=\"font-semibold text-lg mb-3 text-primary\">\n                    <i className=\"fas fa-brain mr-2\"></i>\n                    Emotional Balance\n                  </h4>\n                  <p className=\"text-foreground mb-3\">\n                    Your {horoscopeData.zodiacSign.name} energy craves authentic expression and meaningful connections. \n                    Honor your feelings without being overwhelmed by them.\n                  </p>\n                  <div className=\"space-y-2 text-sm\">\n                    <Card className=\"bg-primary/20\">\n                      <CardContent className=\"p-2\">\n                        <strong className=\"text-accent\">Feeling Overwhelmed?</strong>\n                        <p className=\"text-foreground\">Take time in nature to reconnect with your {horoscopeData.zodiacSign.element.toLowerCase()} element.</p>\n                      </CardContent>\n                    </Card>\n                    <Card className=\"bg-secondary/20\">\n                      <CardContent className=\"p-2\">\n                        <strong className=\"text-accent\">Need Clarity?</strong>\n                        <p className=\"text-foreground\">Journal your thoughts to connect with your inner wisdom and {horoscopeData.zodiacSign.name} intuition.</p>\n                      </CardContent>\n                    </Card>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n\n          {/* Weekly Forecast */}\n          <div className=\"mb-8\">\n            <h3 className=\"text-2xl font-serif font-semibold mb-4 text-accent flex items-center\">\n              <i className=\"fas fa-calendar-alt mr-3\"></i>\n              Your Week Ahead\n            </h3>\n            <div className=\"grid gap-4\">\n              <Card className=\"bg-muted/30 hover-lift\" data-testid=\"card-week-early\">\n                <CardContent className=\"p-4\">\n                  <div className=\"flex justify-between items-center mb-2\">\n                    <h4 className=\"font-semibold text-primary\">Monday - Wednesday</h4>\n                    <div className=\"text-2xl\">⭐⭐⭐⭐⭐</div>\n                  </div>\n                  <p className=\"text-foreground\">\n                    Powerful energy for new beginnings and important conversations. Your natural {horoscopeData.zodiacSign.name} intensity \n                    will be an asset in negotiations and deep discussions. Trust your instincts in relationships.\n                  </p>\n                </CardContent>\n              </Card>\n              \n              <Card className=\"bg-muted/30 hover-lift\" data-testid=\"card-week-mid\">\n                <CardContent className=\"p-4\">\n                  <div className=\"flex justify-between items-center mb-2\">\n                    <h4 className=\"font-semibold text-primary\">Thursday - Friday</h4>\n                    <div className=\"text-2xl\">⭐⭐⭐⭐</div>\n                  </div>\n                  <p className=\"text-foreground\">\n                    Focus on personal matters and self-care. Your {horoscopeData.zodiacSign.element.toLowerCase()} energy will be especially \n                    active. This is an excellent time for healing conversations and strengthening bonds.\n                  </p>\n                </CardContent>\n              </Card>\n              \n              <Card className=\"bg-muted/30 hover-lift\" data-testid=\"card-week-end\">\n                <CardContent className=\"p-4\">\n                  <div className=\"flex justify-between items-center mb-2\">\n                    <h4 className=\"font-semibold text-primary\">Weekend</h4>\n                    <div className=\"text-2xl\">⭐⭐⭐⭐⭐</div>\n                  </div>\n                  <p className=\"text-foreground\">\n                    Perfect time for spiritual practices and self-care. The cosmic energy supports deep transformation \n                    and releasing old patterns. Embrace the positive changes coming your way.\n                  </p>\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n\n          {/* Lucky Elements */}\n          <div className=\"mb-8\">\n            <h3 className=\"text-2xl font-serif font-semibold mb-4 text-accent flex items-center\">\n              <i className=\"fas fa-gem mr-3\"></i>\n              Your Lucky Elements\n            </h3>\n            <div className=\"grid md:grid-cols-3 gap-6\">\n              <Card className=\"bg-gradient-to-br from-primary/20 to-accent/20 text-center hover-lift\" data-testid=\"card-lucky-stone\">\n                <CardContent className=\"p-4\">\n                  <div className=\"text-3xl mb-2\">💎</div>\n                  <h4 className=\"font-semibold text-primary mb-2\">Lucky Stone</h4>\n                  <p className=\"text-foreground\">Amethyst</p>\n                  <p className=\"text-xs text-muted-foreground mt-1\">Enhances intuition and spiritual awareness</p>\n                </CardContent>\n              </Card>\n              \n              <Card className=\"bg-gradient-to-br from-secondary/20 to-primary/20 text-center hover-lift\" data-testid=\"card-lucky-flower\">\n                <CardContent className=\"p-4\">\n                  <div className=\"text-3xl mb-2\">🌸</div>\n                  <h4 className=\"font-semibold text-primary mb-2\">Lucky Flower</h4>\n                  <p className=\"text-foreground\">White Rose</p>\n                  <p className=\"text-xs text-muted-foreground mt-1\">Brings peace and emotional healing</p>\n                </CardContent>\n              </Card>\n              \n              <Card className=\"bg-gradient-to-br from-accent/20 to-secondary/20 text-center hover-lift\" data-testid=\"card-lucky-numbers\">\n                <CardContent className=\"p-4\">\n                  <div className=\"text-3xl mb-2\">🔢</div>\n                  <h4 className=\"font-semibold text-primary mb-2\">Lucky Numbers</h4>\n                  <p className=\"text-foreground\">2, 7, 13</p>\n                  <p className=\"text-xs text-muted-foreground mt-1\">Numbers of intuition and transformation</p>\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n\n          {/* Personalized Message */}\n          <Card className=\"bg-gradient-to-r from-primary/20 to-accent/20\" data-testid=\"card-personal-message\">\n            <CardContent className=\"p-6\">\n              <h3 className=\"text-2xl font-serif font-semibold mb-4 text-accent text-center\">\n                <i className=\"fas fa-star mr-2\"></i>\n                A Message Just for You\n                <i className=\"fas fa-star ml-2\"></i>\n              </h3>\n              <div className=\"text-center\">\n                <p className=\"text-lg text-foreground mb-4 leading-relaxed\">\n                  {horoscopeData.personalizedMessage.opening}\n                </p>\n                <p className=\"text-foreground mb-4\">\n                  {horoscopeData.personalizedMessage.body}\n                </p>\n                <Card className=\"bg-accent/30 inline-block\">\n                  <CardContent className=\"p-4\">\n                    <p className=\"font-semibold text-foreground\">\n                      \"{horoscopeData.personalizedMessage.affirmation}\" ✨\n                    </p>\n                  </CardContent>\n                </Card>\n              </div>\n            </CardContent>\n          </Card>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":17938},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/lib/horoscope.ts":{"content":"import { zodiacSigns, type ZodiacSign } from \"./zodiacData\";\n\nexport interface MoonPhase {\n  name: string;\n  emoji: string;\n  meaning: string;\n  description: string;\n  guidance: string[];\n}\n\nexport interface PersonalizedMessage {\n  opening: string;\n  body: string;\n  affirmation: string;\n}\n\nexport function getZodiacSign(birthDate: Date): ZodiacSign {\n  const month = birthDate.getMonth() + 1; // JavaScript months are 0-indexed\n  const day = birthDate.getDate();\n\n  // Determine zodiac sign based on birth date\n  if ((month === 3 && day >= 21) || (month === 4 && day <= 19)) {\n    return zodiacSigns.find(sign => sign.name === \"Aries\")!;\n  } else if ((month === 4 && day >= 20) || (month === 5 && day <= 20)) {\n    return zodiacSigns.find(sign => sign.name === \"Taurus\")!;\n  } else if ((month === 5 && day >= 21) || (month === 6 && day <= 20)) {\n    return zodiacSigns.find(sign => sign.name === \"Gemini\")!;\n  } else if ((month === 6 && day >= 21) || (month === 7 && day <= 22)) {\n    return zodiacSigns.find(sign => sign.name === \"Cancer\")!;\n  } else if ((month === 7 && day >= 23) || (month === 8 && day <= 22)) {\n    return zodiacSigns.find(sign => sign.name === \"Leo\")!;\n  } else if ((month === 8 && day >= 23) || (month === 9 && day <= 22)) {\n    return zodiacSigns.find(sign => sign.name === \"Virgo\")!;\n  } else if ((month === 9 && day >= 23) || (month === 10 && day <= 22)) {\n    return zodiacSigns.find(sign => sign.name === \"Libra\")!;\n  } else if ((month === 10 && day >= 23) || (month === 11 && day <= 21)) {\n    return zodiacSigns.find(sign => sign.name === \"Scorpio\")!;\n  } else if ((month === 11 && day >= 22) || (month === 12 && day <= 21)) {\n    return zodiacSigns.find(sign => sign.name === \"Sagittarius\")!;\n  } else if ((month === 12 && day >= 22) || (month === 1 && day <= 19)) {\n    return zodiacSigns.find(sign => sign.name === \"Capricorn\")!;\n  } else if ((month === 1 && day >= 20) || (month === 2 && day <= 18)) {\n    return zodiacSigns.find(sign => sign.name === \"Aquarius\")!;\n  } else {\n    return zodiacSigns.find(sign => sign.name === \"Pisces\")!;\n  }\n}\n\nexport function getMoonPhase(): MoonPhase {\n  // Generate a realistic moon phase based on current time\n  const phases: MoonPhase[] = [\n    {\n      name: \"New Moon\",\n      emoji: \"🌑\",\n      meaning: \"New beginnings, fresh starts, intention setting\",\n      description: \"The New Moon represents a clean slate and the perfect time for setting intentions. This lunar phase encourages you to plant seeds for future growth and embrace new opportunities with an open heart.\",\n      guidance: [\n        \"Set clear intentions for the month ahead\",\n        \"Start new projects or relationships\",\n        \"Practice meditation and inner reflection\",\n        \"Release old patterns that no longer serve you\"\n      ]\n    },\n    {\n      name: \"Waxing Crescent\",\n      emoji: \"🌒\",\n      meaning: \"Growth, manifestation, taking action\",\n      description: \"As the moon grows brighter, so does your energy for manifesting your dreams. This is a time of building momentum and taking concrete steps toward your goals.\",\n      guidance: [\n        \"Take action on your intentions\",\n        \"Build positive habits and routines\",\n        \"Network and make meaningful connections\",\n        \"Stay focused on your long-term vision\"\n      ]\n    },\n    {\n      name: \"First Quarter Moon\",\n      emoji: \"🌓\",\n      meaning: \"Decision making, overcoming challenges, perseverance\",\n      description: \"The First Quarter Moon brings challenges that test your commitment to your goals. This is a time for making important decisions and pushing through obstacles with determination.\",\n      guidance: [\n        \"Make decisive choices about your path forward\",\n        \"Face challenges with courage and determination\",\n        \"Adjust your strategies if needed\",\n        \"Trust in your ability to overcome obstacles\"\n      ]\n    },\n    {\n      name: \"Waxing Gibbous\",\n      emoji: \"🌔\",\n      meaning: \"Refinement, patience, fine-tuning\",\n      description: \"As the moon nears fullness, it's time to refine your approach and make final adjustments. Patience and persistence are key during this phase of preparation.\",\n      guidance: [\n        \"Refine and perfect your projects\",\n        \"Practice patience with the process\",\n        \"Make necessary adjustments to your plans\",\n        \"Trust that everything is unfolding as it should\"\n      ]\n    },\n    {\n      name: \"Full Moon\",\n      emoji: \"🌕\",\n      meaning: \"Completion, celebration, release, heightened energy\",\n      description: \"The Full Moon is a time of peak energy and illumination. Celebrate your achievements and release anything that no longer serves your highest good.\",\n      guidance: [\n        \"Celebrate your accomplishments and progress\",\n        \"Practice gratitude for all your blessings\",\n        \"Release negative emotions and limiting beliefs\",\n        \"Use this high energy for healing and transformation\"\n      ]\n    },\n    {\n      name: \"Waning Gibbous\",\n      emoji: \"🌖\",\n      meaning: \"Gratitude, sharing wisdom, giving back\",\n      description: \"After the intensity of the Full Moon, this phase encourages sharing your wisdom and giving back to others. It's a time of gratitude and teaching what you've learned.\",\n      guidance: [\n        \"Share your knowledge and wisdom with others\",\n        \"Practice gratitude daily\",\n        \"Give back to your community\",\n        \"Reflect on the lessons you've learned\"\n      ]\n    },\n    {\n      name: \"Last Quarter Moon\",\n      emoji: \"🌗\",\n      meaning: \"Release, forgiveness, letting go\",\n      description: \"The Last Quarter Moon is a powerful time for release and forgiveness. Let go of grudges, fears, and anything that weighs down your spirit.\",\n      guidance: [\n        \"Practice forgiveness toward yourself and others\",\n        \"Release old grudges and resentments\",\n        \"Let go of fears that limit your potential\",\n        \"Clear emotional and physical clutter from your life\"\n      ]\n    },\n    {\n      name: \"Waning Crescent\",\n      emoji: \"🌘\",\n      meaning: \"Rest, reflection, preparation, inner wisdom\",\n      description: \"This quiet phase before the New Moon is perfect for rest, reflection, and connecting with your inner wisdom. Prepare your energy for the new cycle ahead.\",\n      guidance: [\n        \"Take time for rest and self-care\",\n        \"Practice deep reflection and introspection\",\n        \"Connect with your spiritual practices\",\n        \"Prepare mentally and emotionally for new beginnings\"\n      ]\n    }\n  ];\n\n  // Return a phase based on the current date (simplified for demo)\n  const currentPhaseIndex = Math.floor(Date.now() / (1000 * 60 * 60 * 24 * 3.69)) % 8;\n  return phases[currentPhaseIndex];\n}\n\nexport function generatePersonalizedMessage(zodiacSign: string, tarotCard: string): PersonalizedMessage {\n  const messages = {\n    opening: `Dear beautiful soul, you are entering a period of profound transformation and cosmic alignment. Your ${zodiacSign} energy, combined with the wisdom of ${tarotCard}, creates a powerful foundation for growth and self-discovery.`,\n    body: `The universe has conspired to bring you exactly what you need at this moment. Your natural strengths and intuitive wisdom are guiding you toward a brighter future filled with love, abundance, and meaningful connections. Remember that every challenge is an opportunity for growth, and you have the inner strength to overcome any obstacle that comes your way.`,\n    affirmation: \"You are braver than you believe, stronger than you seem, and more loved than you know.\"\n  };\n\n  return messages;\n}\n","size_bytes":7606},"client/src/pages/home.tsx":{"content":"import { useState } from \"react\";\nimport Header from \"@/components/Header\";\nimport HoroscopeForm from \"@/components/HoroscopeForm\";\nimport HoroscopeResults from \"@/components/HoroscopeResults\";\n\nexport interface UserData {\n  name: string;\n  birthDate: string;\n  birthTime: string;\n  birthLocation: string;\n}\n\nexport default function Home() {\n  const [showResults, setShowResults] = useState(false);\n  const [userData, setUserData] = useState<UserData | null>(null);\n\n  const handleFormSubmit = (data: UserData) => {\n    setUserData(data);\n    setShowResults(true);\n  };\n\n  const handleBack = () => {\n    setShowResults(false);\n    setUserData(null);\n  };\n\n  return (\n    <div className=\"celestial-bg min-h-screen text-foreground\">\n      <Header />\n      \n      <div className=\"max-w-6xl mx-auto px-4 pb-8\">\n        {!showResults ? (\n          <HoroscopeForm onSubmit={handleFormSubmit} />\n        ) : (\n          <HoroscopeResults userData={userData!} onBack={handleBack} />\n        )}\n      </div>\n    </div>\n  );\n}\n","size_bytes":1017},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/Sidebar.tsx":{"content":"import { useState } from \"react\";\nimport { Link, useLocation } from \"wouter\";\nimport { Menu, X, Home, FileText, BookOpen, Sparkles, Info } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { cn } from \"@/lib/utils\";\n\nexport default function Sidebar() {\n  const [isOpen, setIsOpen] = useState(false);\n  const [location] = useLocation();\n\n  const toggleSidebar = () => setIsOpen(!isOpen);\n  const closeSidebar = () => setIsOpen(false);\n\n  const navItems = [\n    { path: \"/\", label: \"Home\", icon: Home, emoji: \"🏠\" },\n    { path: \"/input\", label: \"Input Form\", icon: FileText, emoji: \"📝\" },\n    { path: \"/storybook\", label: \"Storybook\", icon: BookOpen, emoji: \"📚\" },\n    { path: \"/tarot\", label: \"Tarot Gift\", icon: Sparkles, emoji: \"🔮\" },\n    { path: \"/about\", label: \"About\", icon: Info, emoji: \"ℹ️\" },\n  ];\n\n  return (\n    <>\n      {/* Sidebar Toggle Button */}\n      <Button\n        onClick={toggleSidebar}\n        data-testid=\"button-sidebar-toggle\"\n        className=\"fixed top-6 left-6 z-50 bg-primary hover:bg-primary/80 text-primary-foreground p-3 rounded-full shadow-lg transition-all duration-300 hover:scale-110 animate-glow\"\n        size=\"icon\"\n      >\n        {isOpen ? <X className=\"h-5 w-5\" /> : <Menu className=\"h-5 w-5\" />}\n      </Button>\n\n      {/* Overlay */}\n      {isOpen && (\n        <div\n          className=\"fixed inset-0 bg-black/50 z-40 lg:hidden\"\n          onClick={closeSidebar}\n          data-testid=\"overlay-sidebar\"\n        />\n      )}\n\n      {/* Sidebar */}\n      <div\n        className={cn(\n          \"fixed left-0 top-0 h-full w-64 bg-card/95 backdrop-blur-lg border-r border-border z-50 sidebar-transition transform transition-transform duration-300\",\n          isOpen ? \"translate-x-0\" : \"-translate-x-full\"\n        )}\n        data-testid=\"sidebar-navigation\"\n      >\n        <div className=\"p-6\">\n          <h2 className=\"text-xl font-magical text-secondary mb-6\" data-testid=\"text-sidebar-title\">\n            Navigation\n          </h2>\n          <nav className=\"space-y-4\">\n            {navItems.map((item) => (\n              <Link\n                key={item.path}\n                href={item.path}\n                onClick={closeSidebar}\n                data-testid={`link-nav-${item.label.toLowerCase().replace(' ', '-')}`}\n              >\n                <div\n                  className={cn(\n                    \"flex items-center space-x-3 text-foreground hover:text-secondary transition-colors cursor-pointer p-3 rounded-lg hover:bg-primary/20\",\n                    location === item.path && \"bg-primary/20 text-secondary\"\n                  )}\n                >\n                  <span className=\"text-xl\" data-testid={`emoji-${item.label.toLowerCase()}`}>\n                    {item.emoji}\n                  </span>\n                  <span data-testid={`text-${item.label.toLowerCase()}`}>{item.label}</span>\n                </div>\n              </Link>\n            ))}\n          </nav>\n        </div>\n      </div>\n\n      {/* Main Content Margin Adjustment */}\n      <style>{`\n        #mainContent {\n          margin-left: ${isOpen ? \"16rem\" : \"0\"};\n        }\n        \n        @media (max-width: 1024px) {\n          #mainContent {\n            margin-left: 0 !important;\n          }\n        }\n      `}</style>\n    </>\n  );\n}\n","size_bytes":3306},"client/src/components/StarsBackground.tsx":{"content":"import { useEffect } from \"react\";\n\nexport default function StarsBackground() {\n  useEffect(() => {\n    const starsContainer = document.getElementById('stars-background');\n    if (!starsContainer) return;\n    \n    const numberOfStars = 100;\n    \n    // Clear existing stars\n    starsContainer.innerHTML = '';\n    \n    for (let i = 0; i < numberOfStars; i++) {\n      const star = document.createElement('div');\n      star.className = 'star';\n      star.style.left = Math.random() * 100 + '%';\n      star.style.top = Math.random() * 100 + '%';\n      star.style.animationDelay = Math.random() * 3 + 's';\n      star.style.animationDuration = (Math.random() * 3 + 2) + 's';\n      starsContainer.appendChild(star);\n    }\n  }, []);\n\n  return (\n    <div \n      id=\"stars-background\" \n      className=\"stars\"\n      data-testid=\"background-stars\"\n    />\n  );\n}\n","size_bytes":851},"client/src/pages/about.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\n\nexport default function About() {\n  return (\n    <section className=\"min-h-screen flex flex-col items-center justify-center relative px-6\" data-testid=\"section-about\">\n      <div className=\"absolute inset-0 bg-gradient-to-br from-indigo-900 via-blue-900 to-teal-900 opacity-80\"></div>\n      \n      <div className=\"relative z-10 max-w-3xl mx-auto text-center\">\n        <h2 className=\"text-5xl font-magical text-secondary mb-8\" data-testid=\"text-about-title\">\n          About First Horoscope\n        </h2>\n        \n        <Card className=\"bg-card/90 backdrop-blur-lg shadow-2xl border border-border\" data-testid=\"card-about-content\">\n          <CardContent className=\"p-8\">\n            <p className=\"text-lg text-foreground leading-relaxed mb-6\" data-testid=\"text-about-description\">\n              First Horoscope is a magical web application that creates personalized fantasy stories for children based on their astrological signs. Each story is unique and designed to inspire wonder, creativity, and self-discovery.\n            </p>\n            \n            <div className=\"grid md:grid-cols-2 gap-6 mt-8\">\n              <div className=\"bg-primary/20 rounded-lg p-6\" data-testid=\"features-section\">\n                <h3 className=\"text-xl font-magical text-accent mb-3\" data-testid=\"text-features-title\">\n                  ✨ Features\n                </h3>\n                <ul className=\"text-left space-y-2 text-foreground\" data-testid=\"list-features\">\n                  <li data-testid=\"feature-stories\">• Personalized horoscope stories</li>\n                  <li data-testid=\"feature-tarot\">• Interactive tarot card readings</li>\n                  <li data-testid=\"feature-design\">• Beautiful, child-friendly design</li>\n                  <li data-testid=\"feature-astronomy\">• Educational astronomy content</li>\n                  <li data-testid=\"feature-complete-deck\">• Complete 78-card tarot system</li>\n                </ul>\n              </div>\n              \n              <div className=\"bg-secondary/20 rounded-lg p-6\" data-testid=\"creators-section\">\n                <h3 className=\"text-xl font-magical text-accent mb-3\" data-testid=\"text-creators-title\">\n                  🎨 Created With Love\n                </h3>\n                <p className=\"text-foreground text-left\" data-testid=\"text-creators-description\">\n                  Designed and developed by Souhail & Maria with the goal of making astrology accessible and fun for children while encouraging imagination and learning.\n                </p>\n              </div>\n            </div>\n\n            <div className=\"mt-8 p-6 bg-accent/20 rounded-lg\" data-testid=\"mission-section\">\n              <h3 className=\"text-xl font-magical text-accent mb-3\" data-testid=\"text-mission-title\">\n                🌟 Our Mission\n              </h3>\n              <p className=\"text-foreground\" data-testid=\"text-mission-description\">\n                To spark children's imagination through the magic of storytelling and astrology, helping them discover their unique qualities and potential while having fun with cosmic adventures.\n              </p>\n            </div>\n\n            <div className=\"mt-8 text-center\" data-testid=\"technical-details\">\n              <h3 className=\"text-xl font-magical text-accent mb-3\" data-testid=\"text-technical-title\">\n                🔧 Technical Details\n              </h3>\n              <div className=\"grid md:grid-cols-3 gap-4 text-sm\">\n                <div className=\"bg-card/50 p-3 rounded\" data-testid=\"tech-frontend\">\n                  <strong>Frontend:</strong><br />\n                  React, TypeScript, Tailwind CSS\n                </div>\n                <div className=\"bg-card/50 p-3 rounded\" data-testid=\"tech-backend\">\n                  <strong>Backend:</strong><br />\n                  Express.js, Node.js\n                </div>\n                <div className=\"bg-card/50 p-3 rounded\" data-testid=\"tech-features\">\n                  <strong>Features:</strong><br />\n                  78-card Tarot System, Zodiac Integration\n                </div>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </section>\n  );\n}\n","size_bytes":4245},"client/src/pages/input-form.tsx":{"content":"import { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport { useLocation } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { getZodiacSign } from \"@/lib/zodiacData\";\nimport { getRandomTarotCard } from \"@/lib/tarotCards\";\n\nconst formSchema = z.object({\n  childName: z.string().min(2, \"Name must be at least 2 characters\"),\n  birthDate: z.string().min(1, \"Birth date is required\"),\n  birthTime: z.string().optional(),\n  birthLocation: z.string().min(2, \"Birth location is required\"),\n});\n\ntype FormData = z.infer<typeof formSchema>;\n\nexport default function InputForm() {\n  const [, setLocation] = useLocation();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const form = useForm<FormData>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      childName: \"\",\n      birthDate: \"\",\n      birthTime: \"\",\n      birthLocation: \"\",\n    },\n  });\n\n  const onSubmit = async (data: FormData) => {\n    setIsLoading(true);\n    \n    try {\n      // Calculate zodiac sign\n      const zodiacSign = getZodiacSign(data.birthDate);\n      const tarotCard = getRandomTarotCard();\n      \n      // Store data in sessionStorage for use in other components\n      const storyData = {\n        ...data,\n        zodiacSign,\n        tarotCard,\n        generatedAt: new Date().toISOString(),\n      };\n      \n      sessionStorage.setItem('horoscopeData', JSON.stringify(storyData));\n      \n      // Navigate to storybook\n      setTimeout(() => {\n        setLocation('/storybook');\n      }, 1000);\n      \n    } catch (error) {\n      console.error('Error generating horoscope:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <section className=\"min-h-screen flex flex-col items-center justify-center relative px-6\" data-testid=\"section-input-form\">\n      <div className=\"absolute inset-0 bg-gradient-to-br from-indigo-900 via-purple-900 to-pink-900 opacity-80\"></div>\n      \n      <div className=\"relative z-10 w-full max-w-lg\">\n        <Card className=\"bg-card/90 backdrop-blur-lg border border-border shadow-2xl\" data-testid=\"card-input-form\">\n          <CardContent className=\"p-8\">\n            <h2 className=\"text-4xl font-magical text-center text-secondary mb-8\" data-testid=\"text-form-title\">\n              Tell Us About You\n            </h2>\n            \n            <Form {...form}>\n              <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\" data-testid=\"form-child-details\">\n                <FormField\n                  control={form.control}\n                  name=\"childName\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel className=\"text-foreground font-medium\" data-testid=\"label-child-name\">\n                        What's your name? ✨\n                      </FormLabel>\n                      <FormControl>\n                        <Input\n                          placeholder=\"Enter your magical name\"\n                          className=\"bg-input border-border focus:ring-ring text-foreground placeholder-muted-foreground\"\n                          data-testid=\"input-child-name\"\n                          {...field}\n                        />\n                      </FormControl>\n                      <FormMessage data-testid=\"error-child-name\" />\n                    </FormItem>\n                  )}\n                />\n                \n                <FormField\n                  control={form.control}\n                  name=\"birthDate\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel className=\"text-foreground font-medium\" data-testid=\"label-birth-date\">\n                        When were you born? 🎂\n                      </FormLabel>\n                      <FormControl>\n                        <Input\n                          type=\"date\"\n                          className=\"bg-input border-border focus:ring-ring text-foreground\"\n                          data-testid=\"input-birth-date\"\n                          {...field}\n                        />\n                      </FormControl>\n                      <FormMessage data-testid=\"error-birth-date\" />\n                    </FormItem>\n                  )}\n                />\n                \n                <FormField\n                  control={form.control}\n                  name=\"birthTime\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel className=\"text-foreground font-medium\" data-testid=\"label-birth-time\">\n                        What time were you born? 🕐 <span className=\"text-sm text-muted-foreground\">(optional)</span>\n                      </FormLabel>\n                      <FormControl>\n                        <Input\n                          type=\"time\"\n                          className=\"bg-input border-border focus:ring-ring text-foreground\"\n                          data-testid=\"input-birth-time\"\n                          {...field}\n                        />\n                      </FormControl>\n                      <FormMessage data-testid=\"error-birth-time\" />\n                    </FormItem>\n                  )}\n                />\n                \n                <FormField\n                  control={form.control}\n                  name=\"birthLocation\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel className=\"text-foreground font-medium\" data-testid=\"label-birth-location\">\n                        Where were you born? 🌍\n                      </FormLabel>\n                      <FormControl>\n                        <Input\n                          placeholder=\"City, Country\"\n                          className=\"bg-input border-border focus:ring-ring text-foreground placeholder-muted-foreground\"\n                          data-testid=\"input-birth-location\"\n                          {...field}\n                        />\n                      </FormControl>\n                      <FormMessage data-testid=\"error-birth-location\" />\n                    </FormItem>\n                  )}\n                />\n                \n                <Button\n                  type=\"submit\"\n                  disabled={isLoading}\n                  className=\"w-full bg-gradient-to-r from-primary to-accent hover:from-accent hover:to-secondary text-primary-foreground py-4 rounded-lg text-lg font-semibold shadow-lg hover:shadow-xl transition-all duration-300 hover:scale-105 disabled:opacity-50\"\n                  data-testid=\"button-create-story\"\n                >\n                  {isLoading ? (\n                    <span data-testid=\"text-loading\">🌟 Creating Your Magic... 🌟</span>\n                  ) : (\n                    <span data-testid=\"text-create\">🌟 Create My Magical Story 🌟</span>\n                  )}\n                </Button>\n              </form>\n            </Form>\n          </CardContent>\n        </Card>\n      </div>\n    </section>\n  );\n}\n","size_bytes":7306},"client/src/pages/landing.tsx":{"content":"import { Link } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\n\nexport default function Landing() {\n  return (\n    <section className=\"min-h-screen flex flex-col items-center justify-center relative px-6\" data-testid=\"section-landing\">\n      {/* Magical cosmic background with stars and nebula effect */}\n      <div className=\"absolute inset-0 bg-gradient-to-br from-purple-900 via-blue-900 to-indigo-900 opacity-80\"></div>\n      \n      {/* Floating magical elements */}\n      <div className=\"absolute top-20 left-20 text-6xl animate-float\" data-testid=\"decoration-sparkle\">✨</div>\n      <div className=\"absolute top-40 right-32 text-4xl animate-float\" style={{animationDelay: \"-2s\"}} data-testid=\"decoration-moon\">🌙</div>\n      <div className=\"absolute bottom-32 left-16 text-5xl animate-float\" style={{animationDelay: \"-4s\"}} data-testid=\"decoration-star\">⭐</div>\n      \n      <div className=\"relative z-10 text-center max-w-4xl\">\n        {/* Main Title */}\n        <h1 \n          className=\"text-6xl md:text-8xl font-magical text-transparent bg-clip-text bg-gradient-to-r from-secondary via-accent to-primary mb-8 animate-glow\"\n          data-testid=\"text-main-title\"\n        >\n          First Horoscope\n        </h1>\n        \n        {/* Subtitle */}\n        <p className=\"text-xl md:text-2xl text-muted mb-12 font-light\" data-testid=\"text-subtitle\">\n          Discover magical stories written in the stars just for you!\n        </p>\n        \n        {/* Start Button */}\n        <Link href=\"/input\">\n          <Button \n            className=\"bg-gradient-to-r from-primary to-accent hover:from-accent hover:to-secondary text-primary-foreground px-12 py-6 rounded-full text-xl font-semibold shadow-2xl animate-glow hover:scale-110 transition-all duration-300 mb-8\"\n            data-testid=\"button-start-journey\"\n          >\n            ✨ Start Your Magical Journey ✨\n          </Button>\n        </Link>\n        \n        {/* Attribution */}\n        <p className=\"text-sm text-muted-foreground mt-8 font-handwritten text-lg\" data-testid=\"text-attribution\">\n          Created by Souhail & Maria\n        </p>\n      </div>\n    </section>\n  );\n}\n","size_bytes":2171},"client/src/pages/storybook.tsx":{"content":"import { useEffect, useState } from \"react\";\nimport { Link } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport type { ZodiacSign } from \"@/lib/zodiacData\";\nimport type { TarotCard } from \"@/lib/tarotCards\";\n\ninterface HoroscopeData {\n  childName: string;\n  birthDate: string;\n  birthTime?: string;\n  birthLocation: string;\n  zodiacSign: ZodiacSign;\n  tarotCard: TarotCard;\n  generatedAt: string;\n}\n\nexport default function Storybook() {\n  const [data, setData] = useState<HoroscopeData | null>(null);\n  const [showChapter2, setShowChapter2] = useState(false);\n  const [showChapter3, setShowChapter3] = useState(false);\n\n  useEffect(() => {\n    const storedData = sessionStorage.getItem('horoscopeData');\n    if (storedData) {\n      setData(JSON.parse(storedData));\n      \n      // Animate chapter reveals\n      setTimeout(() => setShowChapter2(true), 2000);\n      setTimeout(() => setShowChapter3(true), 4000);\n    }\n  }, []);\n\n  if (!data) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\" data-testid=\"loading-storybook\">\n        <p className=\"text-xl text-foreground\">Loading your magical story...</p>\n      </div>\n    );\n  }\n\n  const generateStory = () => {\n    const { childName, zodiacSign } = data;\n    \n    return {\n      chapter1: `Once upon a time, in a land where stars whisper secrets and planets dance in the cosmic ballet, there was born a very special child named ${childName}. On the day of their birth, the universe itself smiled, knowing that someone truly magical had entered the world...`,\n      \n      chapter2: `On the day ${childName} was born, the ${zodiacSign.name} constellation shimmered brighter than ever before. The ${zodiacSign.symbol} symbol appeared in the clouds, marking this child as one blessed with the gifts of ${zodiacSign.element}. ${zodiacSign.childPersonality}`,\n      \n      chapter3: `As ${childName} grew, wonderful magical abilities began to bloom. Being ruled by ${zodiacSign.ruling_planet}, this special child discovered they had ${zodiacSign.magicalPowers}. Their favorite colors of ${zodiacSign.favoriteColors.join(', ')} would appear wherever they went, bringing joy and wonder to all who saw them.`\n    };\n  };\n\n  const story = generateStory();\n\n  return (\n    <section className=\"min-h-screen py-12 px-6 relative\" data-testid=\"section-storybook\">\n      <div className=\"absolute inset-0 bg-gradient-to-br from-blue-900 via-indigo-900 to-purple-900 opacity-80\"></div>\n      \n      <div className=\"relative z-10 max-w-4xl mx-auto\">\n        <h2 className=\"text-5xl font-magical text-center text-secondary mb-12\" data-testid=\"text-story-title\">\n          Your Magical Story\n        </h2>\n        \n        {/* Chapter 1: Introduction */}\n        <div className=\"magical-border mb-8\" data-testid=\"chapter-1\">\n          <Card className=\"bg-card rounded-lg\">\n            <CardContent className=\"p-8\">\n              <h3 className=\"text-2xl font-magical text-accent mb-4\" data-testid=\"text-chapter-1-title\">\n                Chapter 1: The Star Child\n              </h3>\n              <img \n                src=\"https://images.unsplash.com/photo-1519904981063-b0cf448d479e?w=800&h=400&fit=crop\" \n                alt=\"Child looking at starry night sky\" \n                className=\"rounded-lg mb-4 w-full h-48 object-cover\"\n                data-testid=\"img-chapter-1\"\n              />\n              <div className=\"prose prose-invert max-w-none\">\n                <p className=\"text-foreground leading-relaxed typewriter-text\" data-testid=\"text-chapter-1-content\">\n                  {story.chapter1}\n                </p>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Chapter 2: Zodiac Discovery */}\n        {showChapter2 && (\n          <div className=\"magical-border mb-8 animate-fadeIn\" data-testid=\"chapter-2\">\n            <Card className=\"bg-card rounded-lg\">\n              <CardContent className=\"p-8\">\n                <h3 className=\"text-2xl font-magical text-accent mb-4\" data-testid=\"text-chapter-2-title\">\n                  Chapter 2: The Zodiac Guardian\n                </h3>\n                <img \n                  src=\"https://images.unsplash.com/photo-1502134249126-9f3755a50d78?w=800&h=400&fit=crop\" \n                  alt=\"Magical constellation zodiac symbols\" \n                  className=\"rounded-lg mb-4 w-full h-48 object-cover\"\n                  data-testid=\"img-chapter-2\"\n                />\n                <div className=\"prose prose-invert max-w-none\">\n                  <p className=\"text-foreground leading-relaxed\" data-testid=\"text-chapter-2-content\">\n                    {story.chapter2}\n                  </p>\n                </div>\n                \n                {/* Zodiac Sign Details */}\n                <div className=\"mt-6 p-4 bg-primary/20 rounded-lg\" data-testid=\"zodiac-details\">\n                  <h4 className=\"text-lg font-semibold text-secondary mb-2\" data-testid=\"text-zodiac-traits-title\">\n                    Your Special Traits:\n                  </h4>\n                  <div className=\"grid grid-cols-2 gap-2\">\n                    {data.zodiacSign.traits.map((trait, index) => (\n                      <span \n                        key={index} \n                        className=\"bg-accent/30 px-3 py-1 rounded-full text-sm text-foreground\"\n                        data-testid={`trait-${trait.toLowerCase()}`}\n                      >\n                        {trait}\n                      </span>\n                    ))}\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        )}\n\n        {/* Chapter 3: Magical Powers */}\n        {showChapter3 && (\n          <div className=\"magical-border mb-8 animate-fadeIn\" data-testid=\"chapter-3\">\n            <Card className=\"bg-card rounded-lg\">\n              <CardContent className=\"p-8\">\n                <h3 className=\"text-2xl font-magical text-accent mb-4\" data-testid=\"text-chapter-3-title\">\n                  Chapter 3: The Gift of Magic\n                </h3>\n                <img \n                  src=\"https://images.unsplash.com/photo-1578662996442-48f60103fc96?w=800&h=400&fit=crop\" \n                  alt=\"Magical fantasy scene with floating elements\" \n                  className=\"rounded-lg mb-4 w-full h-48 object-cover\"\n                  data-testid=\"img-chapter-3\"\n                />\n                <div className=\"prose prose-invert max-w-none\">\n                  <p className=\"text-foreground leading-relaxed\" data-testid=\"text-chapter-3-content\">\n                    {story.chapter3}\n                  </p>\n                </div>\n                \n                {/* Lucky Numbers and Colors */}\n                <div className=\"mt-6 grid md:grid-cols-2 gap-4\">\n                  <div className=\"p-4 bg-secondary/20 rounded-lg\" data-testid=\"lucky-colors\">\n                    <h4 className=\"text-lg font-semibold text-secondary mb-2\" data-testid=\"text-lucky-colors-title\">\n                      Your Magical Colors:\n                    </h4>\n                    <div className=\"flex flex-wrap gap-2\">\n                      {data.zodiacSign.favoriteColors.map((color, index) => (\n                        <span \n                          key={index}\n                          className=\"px-3 py-1 bg-card rounded-full text-sm text-foreground border\"\n                          data-testid={`color-${color.toLowerCase().replace(' ', '-')}`}\n                        >\n                          {color}\n                        </span>\n                      ))}\n                    </div>\n                  </div>\n                  \n                  <div className=\"p-4 bg-accent/20 rounded-lg\" data-testid=\"lucky-numbers\">\n                    <h4 className=\"text-lg font-semibold text-secondary mb-2\" data-testid=\"text-lucky-numbers-title\">\n                      Your Lucky Numbers:\n                    </h4>\n                    <div className=\"flex gap-2\">\n                      {data.zodiacSign.luckyNumbers.map((number, index) => (\n                        <span \n                          key={index}\n                          className=\"w-8 h-8 bg-accent/50 rounded-full flex items-center justify-center text-sm font-bold text-foreground\"\n                          data-testid={`number-${number}`}\n                        >\n                          {number}\n                        </span>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        )}\n\n        {/* Navigation to Tarot */}\n        {showChapter3 && (\n          <div className=\"text-center mt-12\" data-testid=\"nav-to-tarot\">\n            <Link href=\"/tarot\">\n              <Button \n                className=\"bg-gradient-to-r from-secondary to-accent hover:from-accent hover:to-primary text-accent-foreground px-8 py-4 rounded-full text-lg font-semibold shadow-lg hover:shadow-xl transition-all duration-300 hover:scale-105\"\n                data-testid=\"button-tarot-gift\"\n              >\n                🔮 Receive Your Magical Gift 🔮\n              </Button>\n            </Link>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n}\n","size_bytes":9302},"client/src/pages/tarot.tsx":{"content":"import { useEffect, useState } from \"react\";\nimport { Link } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport type { TarotCard } from \"@/lib/tarotCards\";\n\ninterface HoroscopeData {\n  childName: string;\n  birthDate: string;\n  birthTime?: string;\n  birthLocation: string;\n  zodiacSign: any;\n  tarotCard: TarotCard;\n  generatedAt: string;\n}\n\nexport default function TarotPage() {\n  const [data, setData] = useState<HoroscopeData | null>(null);\n  const [cardFlipped, setCardFlipped] = useState(false);\n  const [showDescription, setShowDescription] = useState(false);\n\n  useEffect(() => {\n    const storedData = sessionStorage.getItem('horoscopeData');\n    if (storedData) {\n      setData(JSON.parse(storedData));\n    }\n  }, []);\n\n  const flipCard = () => {\n    if (!cardFlipped) {\n      setCardFlipped(true);\n      setTimeout(() => {\n        setShowDescription(true);\n      }, 400);\n    }\n  };\n\n  if (!data) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\" data-testid=\"loading-tarot\">\n        <p className=\"text-xl text-foreground\">Loading your magical gift...</p>\n      </div>\n    );\n  }\n\n  return (\n    <section className=\"min-h-screen flex flex-col items-center justify-center relative px-6\" data-testid=\"section-tarot\">\n      <div className=\"absolute inset-0 bg-gradient-to-br from-purple-900 via-indigo-900 to-pink-900 opacity-80\"></div>\n      \n      <div className=\"relative z-10 max-w-4xl mx-auto text-center\">\n        <h2 className=\"text-5xl font-magical text-secondary mb-8\" data-testid=\"text-tarot-title\">\n          Your Magical Gift\n        </h2>\n        <p className=\"text-xl text-muted mb-12\" data-testid=\"text-tarot-subtitle\">\n          A special tarot card has chosen you! Click to reveal your cosmic message.\n        </p>\n        \n        {/* Tarot Card Flip Animation */}\n        <div \n          className={`card-flip w-64 h-96 mx-auto mb-8 cursor-pointer ${cardFlipped ? 'flipped' : ''}`}\n          onClick={flipCard}\n          data-testid=\"card-tarot-flip\"\n        >\n          <div className=\"card-flip-inner\">\n            {/* Card Back */}\n            <div className=\"card-front bg-gradient-to-br from-indigo-800 to-purple-800 border-4 border-secondary flex items-center justify-center\" data-testid=\"card-back\">\n              <img \n                src=\"https://images.unsplash.com/photo-1578662996442-48f60103fc96?w=400&h=600&fit=crop\" \n                alt=\"Mystical tarot card back design\" \n                className=\"w-full h-full object-cover rounded-lg\"\n                data-testid=\"img-card-back\"\n              />\n              <div className=\"absolute inset-0 bg-gradient-to-br from-purple-500/30 to-blue-500/30 rounded-lg flex items-center justify-center\">\n                <div className=\"text-6xl\">🔮</div>\n              </div>\n            </div>\n            \n            {/* Card Front */}\n            <div className=\"card-back bg-card border-4 border-secondary flex flex-col items-center justify-center p-4\" data-testid=\"card-front\">\n              <h3 className=\"text-2xl font-magical text-secondary mb-4\" data-testid=\"text-card-name\">\n                {data.tarotCard.name}\n              </h3>\n              <img \n                src={data.tarotCard.imageUrl} \n                alt={data.tarotCard.name} \n                className=\"w-32 h-48 object-cover rounded mb-4\"\n                data-testid=\"img-card-front\"\n              />\n              <p className=\"text-sm text-center text-foreground\" data-testid=\"text-card-keywords\">\n                {data.tarotCard.keywords ? data.tarotCard.keywords.join(', ') : \n                 data.tarotCard.upright ? data.tarotCard.upright.slice(0,3).join(', ') : ''}\n              </p>\n            </div>\n          </div>\n        </div>\n\n        {/* Tarot Description */}\n        {showDescription && (\n          <Card className=\"bg-card/90 backdrop-blur-lg max-w-2xl mx-auto shadow-2xl border border-border animate-fadeIn\" data-testid=\"card-description\">\n            <CardContent className=\"p-8\">\n              <h3 className=\"text-3xl font-magical text-accent mb-6\" data-testid=\"text-description-title\">\n                {data.tarotCard.name}\n              </h3>\n              \n              <div className=\"space-y-6 text-left\">\n                {/* Card Description */}\n                {data.tarotCard.description && (\n                  <div>\n                    <h4 className=\"text-lg font-semibold text-secondary mb-2\" data-testid=\"text-description-title\">\n                      About This Card:\n                    </h4>\n                    <p className=\"text-foreground leading-relaxed italic\" data-testid=\"text-card-description\">\n                      {data.tarotCard.description}\n                    </p>\n                  </div>\n                )}\n                \n                {/* Upright Meanings */}\n                <div>\n                  <h4 className=\"text-lg font-semibold text-secondary mb-2\" data-testid=\"text-upright-title\">\n                    Upright Meaning:\n                  </h4>\n                  {data.tarotCard.upright && data.tarotCard.upright.length > 0 && (\n                    <div className=\"flex flex-wrap gap-2 mb-3\">\n                      {data.tarotCard.upright.map((keyword, index) => (\n                        <span \n                          key={index}\n                          className=\"bg-accent/30 px-3 py-1 rounded-full text-sm text-foreground\"\n                          data-testid={`upright-keyword-${index}`}\n                        >\n                          {keyword}\n                        </span>\n                      ))}\n                    </div>\n                  )}\n                  <p className=\"text-foreground leading-relaxed\" data-testid=\"text-upright-meaning\">\n                    {data.tarotCard.meaningUpright || data.tarotCard.meaning || 'This card brings positive energy and guidance to your journey.'}\n                  </p>\n                </div>\n\n                {/* Reversed Meanings */}\n                {data.tarotCard.reversed && data.tarotCard.reversed.length > 0 && (\n                  <div>\n                    <h4 className=\"text-lg font-semibold text-secondary mb-2\" data-testid=\"text-reversed-title\">\n                      Reversed Meaning:\n                    </h4>\n                    <div className=\"flex flex-wrap gap-2 mb-3\">\n                      {data.tarotCard.reversed.map((keyword, index) => (\n                        <span \n                          key={index}\n                          className=\"bg-primary/30 px-3 py-1 rounded-full text-sm text-foreground\"\n                          data-testid={`reversed-keyword-${index}`}\n                        >\n                          {keyword}\n                        </span>\n                      ))}\n                    </div>\n                    {data.tarotCard.meaningReversed && (\n                      <p className=\"text-foreground leading-relaxed\" data-testid=\"text-reversed-meaning\">\n                        {data.tarotCard.meaningReversed}\n                      </p>\n                    )}\n                  </div>\n                )}\n                \n                {/* Emotional Guidance */}\n                {data.tarotCard.emotionalGuidance && (\n                  <div>\n                    <h4 className=\"text-lg font-semibold text-secondary mb-2\" data-testid=\"text-emotional-title\">\n                      Emotional Guidance:\n                    </h4>\n                    <p className=\"text-foreground leading-relaxed\" data-testid=\"text-emotional-guidance\">\n                      {data.tarotCard.emotionalGuidance}\n                    </p>\n                  </div>\n                )}\n                \n                {/* Mental Encouragement */}\n                {data.tarotCard.mentalEncouragement && (\n                  <div>\n                    <h4 className=\"text-lg font-semibold text-secondary mb-2\" data-testid=\"text-encouragement-title\">\n                      Mental Encouragement:\n                    </h4>\n                    <p className=\"text-foreground leading-relaxed\" data-testid=\"text-mental-encouragement\">\n                      {data.tarotCard.mentalEncouragement}\n                    </p>\n                  </div>\n                )}\n                \n                {/* Child Message */}\n                {data.tarotCard.childMessage && (\n                  <div className=\"bg-secondary/20 p-4 rounded-lg\">\n                    <h4 className=\"text-lg font-semibold text-secondary mb-2\" data-testid=\"text-child-message-title\">\n                      Magical Message for You:\n                    </h4>\n                    <p className=\"text-foreground leading-relaxed font-handwritten text-lg\" data-testid=\"text-child-message\">\n                      Dear {data.childName}, {data.tarotCard.childMessage}\n                    </p>\n                  </div>\n                )}\n              </div>\n            </CardContent>\n          </Card>\n        )}\n\n        {/* Return Home Button */}\n        {showDescription && (\n          <div className=\"mt-8\" data-testid=\"nav-return-home\">\n            <Link href=\"/\">\n              <Button \n                className=\"bg-gradient-to-r from-primary to-accent hover:from-accent hover:to-secondary text-primary-foreground px-8 py-4 rounded-full text-lg font-semibold shadow-lg hover:shadow-xl transition-all duration-300 hover:scale-105\"\n                data-testid=\"button-return-home\"\n              >\n                🏠 Back to Beginning 🏠\n              </Button>\n            </Link>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n}\n","size_bytes":9635}},"version":1}